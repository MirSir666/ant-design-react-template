{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/mapCard/DoctorsMap/DoctorsMap.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport L from 'leaflet';\nimport { Marker, Popup } from 'react-leaflet';\nimport { ReactComponent as MapBackgroundIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/map-background.svg\";\nimport * as S from './DoctorsMap.styles';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { DoctorProfile } from 'components/common/DoctorProfile/DoctorProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LARGE_MARKER_SIZE = [50, 50];\nvar MARKER_SIZE = [30, 30];\n\nvar defineIconSize = function defineIconSize(isDesktop) {\n  return isDesktop && LARGE_MARKER_SIZE || MARKER_SIZE;\n};\n\nvar MarkerDoctor = /*#__PURE__*/function (_L$Icon) {\n  _inherits(MarkerDoctor, _L$Icon);\n\n  var _super = _createSuper(MarkerDoctor);\n\n  function MarkerDoctor(props, isDesktop) {\n    _classCallCheck(this, MarkerDoctor);\n\n    var iconSIze = defineIconSize(isDesktop);\n    return _super.call(this, _objectSpread({\n      popupAnchor: iconSIze,\n      iconSize: iconSIze\n    }, props));\n  }\n\n  return _createClass(MarkerDoctor);\n}(L.Icon);\n\nexport var DoctorsMap = function DoctorsMap(_ref) {\n  _s();\n\n  var doctors = _ref.doctors;\n\n  var _useResponsive = useResponsive(),\n      isDesktop = _useResponsive.isDesktop;\n\n  var mapDoctors = doctors.filter(function (_ref2) {\n    var gps = _ref2.gps;\n    return gps;\n  });\n  return /*#__PURE__*/_jsxDEV(S.DoctorsMap, {\n    children: [/*#__PURE__*/_jsxDEV(MapBackgroundIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), mapDoctors.map(function (marker) {\n      var _marker$gps, _marker$gps2;\n\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        icon: new MarkerDoctor({\n          iconUrl: marker.imgUrl,\n          iconRetinaUrl: marker.imgUrl\n        }, isDesktop),\n        position: [((_marker$gps = marker.gps) === null || _marker$gps === void 0 ? void 0 : _marker$gps.latitude) || 0, ((_marker$gps2 = marker.gps) === null || _marker$gps2 === void 0 ? void 0 : _marker$gps2.longitude) || 0],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(DoctorProfile, {\n            avatar: marker.imgUrl,\n            name: marker.name,\n            speciality: marker.specifity,\n            rating: marker.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this)\n      }, marker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DoctorsMap, \"j+XpU9kj1aHp/PHUJYJ+jJKmxBw=\", false, function () {\n  return [useResponsive];\n});\n\n_c = DoctorsMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorsMap\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/mapCard/DoctorsMap/DoctorsMap.tsx"],"names":["React","L","Marker","Popup","S","useResponsive","DoctorProfile","LARGE_MARKER_SIZE","MARKER_SIZE","defineIconSize","isDesktop","MarkerDoctor","props","iconSIze","popupAnchor","iconSize","Icon","DoctorsMap","doctors","mapDoctors","filter","gps","map","marker","iconUrl","imgUrl","iconRetinaUrl","latitude","longitude","name","specifity","rating","id"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAgD,SAAhD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;;AAIA,OAAO,KAAKC,CAAZ,MAAmB,qBAAnB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAGA,SAASC,aAAT,QAA8B,+CAA9B;;AAEA,IAAMC,iBAAkC,GAAG,CAAC,EAAD,EAAK,EAAL,CAA3C;AACA,IAAMC,WAA4B,GAAG,CAAC,EAAD,EAAK,EAAL,CAArC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAyC;AAC9D,SAAQA,SAAS,IAAIH,iBAAd,IAAoCC,WAA3C;AACD,CAFD;;IAIMG,Y;;;;;AACJ,wBAAYC,KAAZ,EAAgCF,SAAhC,EAAoD;AAAA;;AAClD,QAAMG,QAAQ,GAAGJ,cAAc,CAACC,SAAD,CAA/B;AADkD;AAGhDI,MAAAA,WAAW,EAAED,QAHmC;AAIhDE,MAAAA,QAAQ,EAAEF;AAJsC,OAK7CD,KAL6C;AAOnD;;;EARwBX,CAAC,CAACe,I;;AAe7B,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACpE,uBAAsBb,aAAa,EAAnC;AAAA,MAAQK,SAAR,kBAAQA,SAAR;;AAEA,MAAMS,UAAU,GAAGD,OAAO,CAACE,MAAR,CAAe;AAAA,QAAGC,GAAH,SAAGA,GAAH;AAAA,WAAaA,GAAb;AAAA,GAAf,CAAnB;AAEA,sBACE,QAAC,CAAD,CAAG,UAAH;AAAA,4BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,aADF,EAEGF,UAAU,CAACG,GAAX,CAAe,UAACC,MAAD;AAAA;;AAAA,0BACd,QAAC,MAAD;AAEE,QAAA,IAAI,EACF,IAAIZ,YAAJ,CACE;AACEa,UAAAA,OAAO,EAAED,MAAM,CAACE,MADlB;AAEEC,UAAAA,aAAa,EAAEH,MAAM,CAACE;AAFxB,SADF,EAKEf,SALF,CAHJ;AAWE,QAAA,QAAQ,EAAE,CAAC,gBAAAa,MAAM,CAACF,GAAP,4DAAYM,QAAZ,KAAwB,CAAzB,EAA4B,iBAAAJ,MAAM,CAACF,GAAP,8DAAYO,SAAZ,KAAyB,CAArD,CAXZ;AAAA,+BAaE,QAAC,KAAD;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,MAAM,EAAEL,MAAM,CAACE,MADjB;AAEE,YAAA,IAAI,EAAEF,MAAM,CAACM,IAFf;AAGE,YAAA,UAAU,EAAEN,MAAM,CAACO,SAHrB;AAIE,YAAA,MAAM,EAAEP,MAAM,CAACQ;AAJjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF,SACOR,MAAM,CAACS,EADd;AAAA;AAAA;AAAA;AAAA,eADc;AAAA,KAAf,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA6BD,CAlCM;;GAAMf,U;UACWZ,a;;;KADXY,U","sourcesContent":["import React from 'react';\nimport L, { IconOptions, PointExpression } from 'leaflet';\nimport { Marker, Popup } from 'react-leaflet';\n\nimport { ReactComponent as MapBackgroundIcon } from 'assets/icons/map-background.svg';\n\nimport * as S from './DoctorsMap.styles';\nimport { useResponsive } from 'hooks/useResponsive';\n\nimport { Doctor } from 'api/doctors.api';\nimport { DoctorProfile } from 'components/common/DoctorProfile/DoctorProfile';\n\nconst LARGE_MARKER_SIZE: PointExpression = [50, 50];\nconst MARKER_SIZE: PointExpression = [30, 30];\n\nconst defineIconSize = (isDesktop: boolean): PointExpression => {\n  return (isDesktop && LARGE_MARKER_SIZE) || MARKER_SIZE;\n};\n\nclass MarkerDoctor extends L.Icon {\n  constructor(props: IconOptions, isDesktop: boolean) {\n    const iconSIze = defineIconSize(isDesktop);\n    super({\n      popupAnchor: iconSIze,\n      iconSize: iconSIze,\n      ...props,\n    });\n  }\n}\n\ninterface DoctorsMapProps {\n  doctors: Doctor[];\n}\n\nexport const DoctorsMap: React.FC<DoctorsMapProps> = ({ doctors }) => {\n  const { isDesktop } = useResponsive();\n\n  const mapDoctors = doctors.filter(({ gps }) => gps);\n\n  return (\n    <S.DoctorsMap>\n      <MapBackgroundIcon />\n      {mapDoctors.map((marker) => (\n        <Marker\n          key={marker.id}\n          icon={\n            new MarkerDoctor(\n              {\n                iconUrl: marker.imgUrl,\n                iconRetinaUrl: marker.imgUrl,\n              },\n              isDesktop,\n            )\n          }\n          position={[marker.gps?.latitude || 0, marker.gps?.longitude || 0]}\n        >\n          <Popup>\n            <DoctorProfile\n              avatar={marker.imgUrl}\n              name={marker.name}\n              speciality={marker.specifity}\n              rating={marker.rating}\n            />\n          </Popup>\n        </Marker>\n      ))}\n    </S.DoctorsMap>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}