{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"option\",\"width\",\"height\",\"onEvents\",\"style\"];import React,{useEffect,useState}from'react';import ReactECharts from'echarts-for-react';import{Loading}from'../Loading';import{useAppSelector}from'@app/hooks/reduxHooks';import{themeObject}from'@app/styles/themes/themeVariables';import{BORDER_RADIUS}from'@app/styles/themes/constants';import{jsx as _jsx}from\"react/jsx-runtime\";export var getChartColors=function getChartColors(theme){return[theme.chartColor1,theme.chartColor2,theme.chartColor3,theme.chartColor4,theme.chartColor5];};export var getDefaultTooltipStyles=function getDefaultTooltipStyles(theme){return{borderColor:theme.chartColor1,borderWidth:2,borderRadius:Number.parseInt(BORDER_RADIUS),textStyle:{fontWeight:600,fontSize:16,color:theme.chartColor1}};};export var BaseChart=function BaseChart(_ref){var option=_ref.option,width=_ref.width,height=_ref.height,onEvents=_ref.onEvents,style=_ref.style,props=_objectWithoutProperties(_ref,_excluded);var theme=useAppSelector(function(state){return state.theme.theme;});var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var chartHeight=height||'400px';var defaultOption={color:getChartColors(themeObject[theme])};useEffect(function(){// TODO FIXME workaround to make sure that parent container is initialized before the chart\nsetTimeout(function(){setLoading(false);},1000/2);},[]);return loading?/*#__PURE__*/_jsx(Loading,{}):/*#__PURE__*/_jsx(ReactECharts,_objectSpread(_objectSpread({},props),{},{option:_objectSpread(_objectSpread({},defaultOption),option),style:_objectSpread(_objectSpread({},style),{},{height:chartHeight,minHeight:height==='100%'?400:'unset',width:width,zIndex:0}),onEvents:onEvents}));};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/charts/BaseChart.tsx"],"names":["React","useEffect","useState","ReactECharts","Loading","useAppSelector","themeObject","BORDER_RADIUS","getChartColors","theme","chartColor1","chartColor2","chartColor3","chartColor4","chartColor5","getDefaultTooltipStyles","borderColor","borderWidth","borderRadius","Number","parseInt","textStyle","fontWeight","fontSize","color","BaseChart","option","width","height","onEvents","style","props","state","loading","setLoading","chartHeight","defaultOption","setTimeout","minHeight","zIndex"],"mappings":"wkBAAA,MAAOA,CAAAA,KAAP,EAA+BC,SAA/B,CAA0CC,QAA1C,KAA0D,OAA1D,CAEA,MAAOC,CAAAA,YAAP,KAAyB,mBAAzB,CACA,OAASC,OAAT,KAAwB,YAAxB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,WAAT,KAA4B,mCAA5B,CAEA,OAASC,aAAT,KAA8B,8BAA9B,C,2CAuBA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAA6B,CACzDA,KAAK,CAACC,WADmD,CAEzDD,KAAK,CAACE,WAFmD,CAGzDF,KAAK,CAACG,WAHmD,CAIzDH,KAAK,CAACI,WAJmD,CAKzDJ,KAAK,CAACK,WALmD,CAA7B,EAAvB,CAQP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACN,KAAD,QAA0C,CAC/EO,WAAW,CAAEP,KAAK,CAACC,WAD4D,CAE/EO,WAAW,CAAE,CAFkE,CAG/EC,YAAY,CAAEC,MAAM,CAACC,QAAP,CAAgBb,aAAhB,CAHiE,CAI/Ec,SAAS,CAAE,CACTC,UAAU,CAAE,GADH,CAETC,QAAQ,CAAE,EAFD,CAGTC,KAAK,CAAEf,KAAK,CAACC,WAHJ,CAJoE,CAA1C,EAAhC,CAWP,MAAO,IAAMe,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAA0D,IAAvDC,CAAAA,MAAuD,MAAvDA,MAAuD,CAA/CC,KAA+C,MAA/CA,KAA+C,CAAxCC,MAAwC,MAAxCA,MAAwC,CAAhCC,QAAgC,MAAhCA,QAAgC,CAAtBC,KAAsB,MAAtBA,KAAsB,CAAZC,KAAY,0CAC3G,GAAMtB,CAAAA,KAAK,CAAGJ,cAAc,CAAC,SAAC2B,KAAD,QAAWA,CAAAA,KAAK,CAACvB,KAAN,CAAYA,KAAvB,EAAD,CAA5B,CACA,cAA8BP,QAAQ,CAAC,IAAD,CAAtC,wCAAO+B,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,WAAW,CAAGP,MAAM,EAAI,OAA9B,CAEA,GAAMQ,CAAAA,aAAa,CAAG,CACpBZ,KAAK,CAAEhB,cAAc,CAACF,WAAW,CAACG,KAAD,CAAZ,CADD,CAAtB,CAIAR,SAAS,CAAC,UAAM,CACd;AACAoC,UAAU,CAAC,UAAM,CACfH,UAAU,CAAC,KAAD,CAAV,CACD,CAFS,CAEP,KAAO,CAFA,CAAV,CAGD,CALQ,CAKN,EALM,CAAT,CAOA,MAAOD,CAAAA,OAAO,cACZ,KAAC,OAAD,IADY,cAGZ,KAAC,YAAD,gCACMF,KADN,MAEE,MAAM,gCAAOK,aAAP,EAAyBV,MAAzB,CAFR,CAGE,KAAK,gCAAOI,KAAP,MAAcF,MAAM,CAAEO,WAAtB,CAAmCG,SAAS,CAAEV,MAAM,GAAK,MAAX,CAAoB,GAApB,CAA0B,OAAxE,CAAiFD,KAAK,CAALA,KAAjF,CAAwFY,MAAM,CAAE,CAAhG,EAHP,CAIE,QAAQ,CAAEV,QAJZ,GAHF,CAUD,CA3BM","sourcesContent":["import React, { CSSProperties, useEffect, useState } from 'react';\nimport { EChartsOption } from 'echarts-for-react';\nimport ReactECharts from 'echarts-for-react';\nimport { Loading } from '../Loading';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { ITheme } from '@app/styles/themes/types';\nimport { BORDER_RADIUS } from '@app/styles/themes/constants';\n\nexport interface BaseChartProps {\n  option?: EChartsOption;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onEvents?: Record<string, (e: any) => void>;\n  width?: string | number;\n  height?: string | number;\n  style?: CSSProperties;\n  classname?: string;\n}\n\ninterface DefaultTooltipStyles {\n  borderColor: string;\n  borderWidth: number;\n  borderRadius: number;\n  textStyle: {\n    fontWeight: number;\n    fontSize: number;\n    color: string;\n  };\n}\n\nexport const getChartColors = (theme: ITheme): string[] => [\n  theme.chartColor1,\n  theme.chartColor2,\n  theme.chartColor3,\n  theme.chartColor4,\n  theme.chartColor5,\n];\n\nexport const getDefaultTooltipStyles = (theme: ITheme): DefaultTooltipStyles => ({\n  borderColor: theme.chartColor1,\n  borderWidth: 2,\n  borderRadius: Number.parseInt(BORDER_RADIUS),\n  textStyle: {\n    fontWeight: 600,\n    fontSize: 16,\n    color: theme.chartColor1,\n  },\n});\n\nexport const BaseChart: React.FC<BaseChartProps> = ({ option, width, height, onEvents, style, ...props }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const [loading, setLoading] = useState(true);\n\n  const chartHeight = height || '400px';\n\n  const defaultOption = {\n    color: getChartColors(themeObject[theme]),\n  };\n\n  useEffect(() => {\n    // TODO FIXME workaround to make sure that parent container is initialized before the chart\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000 / 2);\n  }, []);\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <ReactECharts\n      {...props}\n      option={{ ...defaultOption, ...option }}\n      style={{ ...style, height: chartHeight, minHeight: height === '100%' ? 400 : 'unset', width, zIndex: 0 }}\n      onEvents={onEvents}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}