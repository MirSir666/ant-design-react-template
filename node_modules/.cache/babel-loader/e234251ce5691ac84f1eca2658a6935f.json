{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/statisticsCards/statisticsCard/StatisticsProgress/StatisticsProgress.tsx\",\n  _this = this;\nimport React from 'react';\nimport { Progress } from 'antd';\nimport * as S from './StatisticsProgress.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var StatisticsProgress = function StatisticsProgress(_ref) {\n  var color = _ref.color,\n    value = _ref.value,\n    unit = _ref.unit;\n  return /*#__PURE__*/_jsxDEV(Progress, {\n    type: \"circle\",\n    width: 50,\n    strokeColor: color,\n    trailColor: \"transparent\",\n    percent: value,\n    format: function format(percent) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(S.ValueText, {\n          children: percent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.UnitText, {\n          children: unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n_c = StatisticsProgress;\nvar _c;\n$RefreshReg$(_c, \"StatisticsProgress\");","map":{"version":3,"names":["React","Progress","S","StatisticsProgress","color","value","unit","percent"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/statisticsCards/statisticsCard/StatisticsProgress/StatisticsProgress.tsx"],"sourcesContent":["import React from 'react';\nimport { Progress } from 'antd';\nimport * as S from './StatisticsProgress.styles';\n\ninterface StatisticsProgressProps {\n  color: string;\n  unit: 'kg';\n  value: number;\n}\n\nexport const StatisticsProgress: React.FC<StatisticsProgressProps> = ({ color, value, unit }) => {\n  return (\n    <Progress\n      type=\"circle\"\n      width={50}\n      strokeColor={color}\n      trailColor=\"transparent\"\n      percent={value}\n      format={(percent) => (\n        <>\n          <S.ValueText>{percent}</S.ValueText>\n          <br />\n          <S.UnitText>{unit}</S.UnitText>\n        </>\n      )}\n    />\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAO,KAAKC,CAAC,MAAM,6BAA6B;AAAC;AAAA;AAQjD,OAAO,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAqD,OAA+B;EAAA,IAAzBC,KAAK,QAALA,KAAK;IAAEC,KAAK,QAALA,KAAK;IAAEC,IAAI,QAAJA,IAAI;EACxF,oBACE,QAAC,QAAQ;IACP,IAAI,EAAC,QAAQ;IACb,KAAK,EAAE,EAAG;IACV,WAAW,EAAEF,KAAM;IACnB,UAAU,EAAC,aAAa;IACxB,OAAO,EAAEC,KAAM;IACf,MAAM,EAAE,gBAACE,OAAO;MAAA,oBACd;QAAA,wBACE,QAAC,CAAC,CAAC,SAAS;UAAA,UAAEA;QAAO;UAAA;UAAA;UAAA;QAAA,SAAe,eACpC;UAAA;UAAA;UAAA;QAAA,SAAM,eACN,QAAC,CAAC,CAAC,QAAQ;UAAA,UAAED;QAAI;UAAA;UAAA;UAAA;QAAA,SAAc;MAAA,gBAC9B;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,SACF;AAEN,CAAC;AAAC,KAjBWH,kBAAqD;AAAA;AAAA"},"metadata":{},"sourceType":"module"}