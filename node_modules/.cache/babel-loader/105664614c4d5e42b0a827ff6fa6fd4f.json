{"ast":null,"code":"import{BREAKPOINTS,media}from'@app/styles/themes/constants';import{useMediaQuery}from'react-responsive';export var useResponsive=function useResponsive(){var isMobile=useMediaQuery({query:media.xs});var isTablet=useMediaQuery({query:media.md});var isDesktop=useMediaQuery({query:media.xl});var isBigScreen=useMediaQuery({query:media.xxl});var mobileOnly=useMediaQuery({query:\"(max-width: \".concat(BREAKPOINTS.md-0.02,\"px)\")});var tabletOnly=useMediaQuery({query:\"(min-width: \".concat(BREAKPOINTS.md,\"px) and (max-width: \").concat(BREAKPOINTS.xl-0.02,\"px)\")});var desktopOnly=useMediaQuery({query:\"(min-width: \".concat(BREAKPOINTS.xl,\"px) and (max-width: \").concat(BREAKPOINTS.xxl-0.02,\"px)\")});return{isMobile:isMobile,isTablet:isTablet,isDesktop:isDesktop,isBigScreen:isBigScreen,mobileOnly:mobileOnly,tabletOnly:tabletOnly,desktopOnly:desktopOnly,useMediaQuery:useMediaQuery};};","map":{"version":3,"names":["BREAKPOINTS","media","useMediaQuery","useResponsive","isMobile","query","xs","isTablet","md","isDesktop","xl","isBigScreen","xxl","mobileOnly","tabletOnly","desktopOnly"],"sources":["/workspace/ant-design-react-template/src/hooks/useResponsive.ts"],"sourcesContent":["import { BREAKPOINTS, media } from '@app/styles/themes/constants';\nimport { MediaQueryAllQueryable, MediaQueryMatchers, useMediaQuery } from 'react-responsive';\n\ninterface ResponsiveReturnValues {\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n  isBigScreen: boolean;\n  mobileOnly: boolean;\n  tabletOnly: boolean;\n  desktopOnly: boolean;\n  useMediaQuery: (\n    settings: Partial<MediaQueryAllQueryable & { query?: string | undefined }>,\n    device?: MediaQueryMatchers,\n    callback?: (matches: boolean) => void,\n  ) => boolean;\n}\n\nexport const useResponsive = (): ResponsiveReturnValues => {\n  const isMobile = useMediaQuery({ query: media.xs });\n  const isTablet = useMediaQuery({ query: media.md });\n  const isDesktop = useMediaQuery({ query: media.xl });\n  const isBigScreen = useMediaQuery({ query: media.xxl });\n\n  const mobileOnly = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS.md - 0.02}px)`,\n  });\n\n  const tabletOnly = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS.md}px) and (max-width: ${BREAKPOINTS.xl - 0.02}px)`,\n  });\n\n  const desktopOnly = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS.xl}px) and (max-width: ${BREAKPOINTS.xxl - 0.02}px)`,\n  });\n\n  return {\n    isMobile,\n    isTablet,\n    isDesktop,\n    isBigScreen,\n    mobileOnly,\n    tabletOnly,\n    desktopOnly,\n    useMediaQuery,\n  };\n};\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,KAAK,KAAQ,8BAA8B,CACjE,OAAqDC,aAAa,KAAQ,kBAAkB,CAiB5F,MAAO,IAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAiC,CACzD,GAAMC,SAAQ,CAAGF,aAAa,CAAC,CAAEG,KAAK,CAAEJ,KAAK,CAACK,EAAG,CAAC,CAAC,CACnD,GAAMC,SAAQ,CAAGL,aAAa,CAAC,CAAEG,KAAK,CAAEJ,KAAK,CAACO,EAAG,CAAC,CAAC,CACnD,GAAMC,UAAS,CAAGP,aAAa,CAAC,CAAEG,KAAK,CAAEJ,KAAK,CAACS,EAAG,CAAC,CAAC,CACpD,GAAMC,YAAW,CAAGT,aAAa,CAAC,CAAEG,KAAK,CAAEJ,KAAK,CAACW,GAAI,CAAC,CAAC,CAEvD,GAAMC,WAAU,CAAGX,aAAa,CAAC,CAC/BG,KAAK,uBAAiBL,WAAW,CAACQ,EAAE,CAAG,IAAI,OAC7C,CAAC,CAAC,CAEF,GAAMM,WAAU,CAAGZ,aAAa,CAAC,CAC/BG,KAAK,uBAAiBL,WAAW,CAACQ,EAAE,gCAAuBR,WAAW,CAACU,EAAE,CAAG,IAAI,OAClF,CAAC,CAAC,CAEF,GAAMK,YAAW,CAAGb,aAAa,CAAC,CAChCG,KAAK,uBAAiBL,WAAW,CAACU,EAAE,gCAAuBV,WAAW,CAACY,GAAG,CAAG,IAAI,OACnF,CAAC,CAAC,CAEF,MAAO,CACLR,QAAQ,CAARA,QAAQ,CACRG,QAAQ,CAARA,QAAQ,CACRE,SAAS,CAATA,SAAS,CACTE,WAAW,CAAXA,WAAW,CACXE,UAAU,CAAVA,UAAU,CACVC,UAAU,CAAVA,UAAU,CACVC,WAAW,CAAXA,WAAW,CACXb,aAAa,CAAbA,aACF,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module"}