{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"notifications\",\"setNotifications\"];import React,{useMemo}from'react';import{Trans}from'react-i18next';import{useTranslation}from'react-i18next';import{Col,Row,Space}from'antd';import{Link}from'react-router-dom';import{Notification}from'components/common/Notification/Notification';import{capitalize}from'utils/utils';import{notificationsSeverities}from'constants/notificationsSeverities';import*as S from'./NotificationsOverlay.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var NotificationsOverlay=function NotificationsOverlay(_ref){var notifications=_ref.notifications,setNotifications=_ref.setNotifications,props=_objectWithoutProperties(_ref,_excluded);var _useTranslation=useTranslation(),t=_useTranslation.t;var noticesList=useMemo(function(){return notifications.map(function(notification,index){var _notificationsSeverit;var type=(_notificationsSeverit=notificationsSeverities.find(function(dbSeverity){return dbSeverity.id===notification.id;}))===null||_notificationsSeverit===void 0?void 0:_notificationsSeverit.name;return/*#__PURE__*/_jsx(Notification,_objectSpread({type:type||'warning',title:capitalize(type||'warning'),description:t(notification.description)},type==='mention'&&{mentionIconSrc:notification.userIcon,title:notification.userName,description:/*#__PURE__*/_jsx(Trans,{i18nKey:notification.description,children:/*#__PURE__*/_jsx(S.LinkBtn,{type:\"link\",href:notification.href,children:{place:t(notification.place)}})})}),index);});},[notifications,t]);return/*#__PURE__*/_jsx(S.NoticesOverlayMenu,_objectSpread(_objectSpread({mode:\"inline\"},props),{},{children:/*#__PURE__*/_jsxs(S.MenuRow,{gutter:[20,20],children:[/*#__PURE__*/_jsx(Col,{span:24,children:notifications.length>0?/*#__PURE__*/_jsx(Space,{direction:\"vertical\",size:10,split:/*#__PURE__*/_jsx(S.SplitDivider,{}),children:noticesList}):/*#__PURE__*/_jsx(S.Text,{children:t('header.notifications.noNotifications')})}),/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsxs(Row,{gutter:[10,10],children:[notifications.length>0&&/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(S.Btn,{type:\"ghost\",onClick:function onClick(){return setNotifications([]);},children:t('header.notifications.readAll')})}),/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(S.Btn,{type:\"link\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:t('header.notifications.viewAll')})})})]})})]})}));};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/header/components/notificationsDropdown/NotificationsOverlay/NotificationsOverlay.tsx"],"names":["React","useMemo","Trans","useTranslation","Col","Row","Space","Link","Notification","capitalize","notificationsSeverities","S","NotificationsOverlay","notifications","setNotifications","props","t","noticesList","map","notification","index","type","find","dbSeverity","id","name","description","mentionIconSrc","userIcon","title","userName","href","place","length"],"mappings":"sZAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,KAAnB,KAAgC,MAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,YAAT,KAA6B,6CAA7B,CACA,OAASC,UAAT,KAA2B,aAA3B,CAEA,OAASC,uBAAT,KAAwC,mCAAxC,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,+BAAnB,C,wFAOA,MAAO,IAAMC,CAAAA,oBAAyD,CAAG,QAA5DA,CAAAA,oBAA4D,MAInE,IAHJC,CAAAA,aAGI,MAHJA,aAGI,CAFJC,gBAEI,MAFJA,gBAEI,CADDC,KACC,0CACJ,oBAAcZ,cAAc,EAA5B,CAAQa,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,WAAW,CAAGhB,OAAO,CACzB,iBACEY,CAAAA,aAAa,CAACK,GAAd,CAAkB,SAACC,YAAD,CAAeC,KAAf,CAAyB,2BACzC,GAAMC,CAAAA,IAAI,wBAAGX,uBAAuB,CAACY,IAAxB,CAA6B,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAACC,EAAX,GAAkBL,YAAY,CAACK,EAA/C,EAA7B,CAAH,gDAAG,sBAAiFC,IAA9F,CAEA,mBACE,KAAC,YAAD,gBAEE,IAAI,CAAEJ,IAAI,EAAI,SAFhB,CAGE,KAAK,CAAEZ,UAAU,CAACY,IAAI,EAAI,SAAT,CAHnB,CAIE,WAAW,CAAEL,CAAC,CAACG,YAAY,CAACO,WAAd,CAJhB,EAKOL,IAAI,GAAK,SAAT,EAAsB,CACzBM,cAAc,CAAGR,YAAD,CAA0BS,QADjB,CAEzBC,KAAK,CAAGV,YAAD,CAA0BW,QAFR,CAGzBJ,WAAW,cACT,KAAC,KAAD,EAAO,OAAO,CAAGP,YAAD,CAA0BO,WAA1C,uBACE,KAAC,CAAD,CAAG,OAAH,EAAW,IAAI,CAAC,MAAhB,CAAuB,IAAI,CAAGP,YAAD,CAA0BY,IAAvD,UACG,CAAEC,KAAK,CAAEhB,CAAC,CAAEG,YAAD,CAA0Ba,KAA3B,CAAV,CADH,EADF,EAJuB,CAL7B,EACOZ,KADP,CADF,CAmBD,CAtBD,CADF,EADyB,CAyBzB,CAACP,aAAD,CAAgBG,CAAhB,CAzByB,CAA3B,CA4BA,mBACE,KAAC,CAAD,CAAG,kBAAH,8BAAsB,IAAI,CAAC,QAA3B,EAAwCD,KAAxC,4BACE,MAAC,CAAD,CAAG,OAAH,EAAW,MAAM,CAAE,CAAC,EAAD,CAAK,EAAL,CAAnB,wBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,UACGF,aAAa,CAACoB,MAAd,CAAuB,CAAvB,cACC,KAAC,KAAD,EAAO,SAAS,CAAC,UAAjB,CAA4B,IAAI,CAAE,EAAlC,CAAsC,KAAK,cAAE,KAAC,CAAD,CAAG,YAAH,IAA7C,UACGhB,WADH,EADD,cAKC,KAAC,CAAD,CAAG,IAAH,WAASD,CAAC,CAAC,sCAAD,CAAV,EANJ,EADF,cAUE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,MAAC,GAAD,EAAK,MAAM,CAAE,CAAC,EAAD,CAAK,EAAL,CAAb,WACGH,aAAa,CAACoB,MAAd,CAAuB,CAAvB,eACC,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,CAAD,CAAG,GAAH,EAAO,IAAI,CAAC,OAAZ,CAAoB,OAAO,CAAE,yBAAMnB,CAAAA,gBAAgB,CAAC,EAAD,CAAtB,EAA7B,UACGE,CAAC,CAAC,8BAAD,CADJ,EADF,EAFJ,cAQE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,CAAD,CAAG,GAAH,EAAO,IAAI,CAAC,MAAZ,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,UAAcA,CAAC,CAAC,8BAAD,CAAf,EADF,EADF,EARF,GADF,EAVF,GADF,GADF,CA+BD,CAlEM","sourcesContent":["import React, { useMemo } from 'react';\nimport { Trans } from 'react-i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { Notification } from 'components/common/Notification/Notification';\nimport { capitalize } from 'utils/utils';\nimport { Mention, Notification as NotificationType } from 'api/notifications.api';\nimport { notificationsSeverities } from 'constants/notificationsSeverities';\nimport * as S from './NotificationsOverlay.styles';\n\ninterface NotificationsOverlayProps {\n  notifications: NotificationType[];\n  setNotifications: (state: NotificationType[]) => void;\n}\n\nexport const NotificationsOverlay: React.FC<NotificationsOverlayProps> = ({\n  notifications,\n  setNotifications,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const noticesList = useMemo(\n    () =>\n      notifications.map((notification, index) => {\n        const type = notificationsSeverities.find((dbSeverity) => dbSeverity.id === notification.id)?.name;\n\n        return (\n          <Notification\n            key={index}\n            type={type || 'warning'}\n            title={capitalize(type || 'warning')}\n            description={t(notification.description)}\n            {...(type === 'mention' && {\n              mentionIconSrc: (notification as Mention).userIcon,\n              title: (notification as Mention).userName,\n              description: (\n                <Trans i18nKey={(notification as Mention).description}>\n                  <S.LinkBtn type=\"link\" href={(notification as Mention).href}>\n                    {{ place: t((notification as Mention).place) }}\n                  </S.LinkBtn>\n                </Trans>\n              ),\n            })}\n          />\n        );\n      }),\n    [notifications, t],\n  );\n\n  return (\n    <S.NoticesOverlayMenu mode=\"inline\" {...props}>\n      <S.MenuRow gutter={[20, 20]}>\n        <Col span={24}>\n          {notifications.length > 0 ? (\n            <Space direction=\"vertical\" size={10} split={<S.SplitDivider />}>\n              {noticesList}\n            </Space>\n          ) : (\n            <S.Text>{t('header.notifications.noNotifications')}</S.Text>\n          )}\n        </Col>\n        <Col span={24}>\n          <Row gutter={[10, 10]}>\n            {notifications.length > 0 && (\n              <Col span={24}>\n                <S.Btn type=\"ghost\" onClick={() => setNotifications([])}>\n                  {t('header.notifications.readAll')}\n                </S.Btn>\n              </Col>\n            )}\n            <Col span={24}>\n              <S.Btn type=\"link\">\n                <Link to=\"/\">{t('header.notifications.viewAll')}</Link>\n              </S.Btn>\n            </Col>\n          </Row>\n        </Col>\n      </S.MenuRow>\n    </S.NoticesOverlayMenu>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}