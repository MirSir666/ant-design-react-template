{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useMemo,useState}from'react';import{getCovidData}from'@app/api/covid.api';import{useTranslation}from'react-i18next';import{DashboardCard}from'../DashboardCard/DashboardCard';import{CovidChart}from'./CovidChart';import{Dates}from'@app/constants/Dates';import{notification}from'antd';import{NotFound}from'@app/components/common/NotFound/NotFound';import{jsx as _jsx}from\"react/jsx-runtime\";export var CovidCard=function CovidCard(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(function(){getCovidData().then(function(res){return setData(res===null||res===void 0?void 0:res.data.splice(0,100).reverse());}).catch(function(e){return notification.error({message:e.message});});},[]);var _useMemo=useMemo(function(){var confirmedArr=[];var deathsArr=[];var dateArr=[];data&&(data===null||data===void 0?void 0:data.forEach(function(el){confirmedArr.push(el.new_confirmed);deathsArr.push(el.new_deaths);dateArr.push(Dates.getDate(el.date).format('LL'));}));return{confirmedArr:confirmedArr,deathsArr:deathsArr,dateArr:dateArr};},[data]),confirmedArr=_useMemo.confirmedArr,deathsArr=_useMemo.deathsArr,dateArr=_useMemo.dateArr;var _useMemo2=useMemo(function(){return{confirmed:{title:t('medical-dashboard.covid.casesPerDay'),data:confirmedArr},deaths:{title:t('medical-dashboard.covid.deaths'),data:deathsArr}};},[confirmedArr,deathsArr,t]),confirmed=_useMemo2.confirmed,deaths=_useMemo2.deaths;return/*#__PURE__*/_jsx(DashboardCard,{id:\"covid\",title:t('medical-dashboard.covid.title'),padding:0,children:data?/*#__PURE__*/_jsx(CovidChart,{confirmed:confirmed,deaths:deaths,dateArr:dateArr}):/*#__PURE__*/_jsx(NotFound,{})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/covidCard/CovidCard.tsx"],"names":["React","useEffect","useMemo","useState","getCovidData","useTranslation","DashboardCard","CovidChart","Dates","notification","NotFound","CovidCard","data","setData","t","then","res","splice","reverse","catch","e","error","message","confirmedArr","deathsArr","dateArr","forEach","el","push","new_confirmed","new_deaths","getDate","date","format","confirmed","title","deaths"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,OAA3B,CAAoCC,QAApC,KAAoD,OAApD,CACA,OAASC,YAAT,KAAyC,oBAAzC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,KAAT,KAAsB,sBAAtB,CACA,OAASC,YAAT,KAA6B,MAA7B,CACA,OAASC,QAAT,KAAyB,0CAAzB,C,2CAEA,MAAO,IAAMC,CAAAA,SAAmB,CAAG,QAAtBA,CAAAA,SAAsB,EAAM,CACvC,cAAwBR,QAAQ,EAAhC,wCAAOS,IAAP,eAAaC,OAAb,eAEA,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CAEAb,SAAS,CAAC,UAAM,CACdG,YAAY,GACTW,IADH,CACQ,SAACC,GAAD,QAASH,CAAAA,OAAO,CAACG,GAAD,SAACA,GAAD,iBAACA,GAAG,CAAEJ,IAAL,CAAUK,MAAV,CAAiB,CAAjB,CAAoB,GAApB,EAAyBC,OAAzB,EAAD,CAAhB,EADR,EAEGC,KAFH,CAES,SAACC,CAAD,QAAOX,CAAAA,YAAY,CAACY,KAAb,CAAmB,CAAEC,OAAO,CAAEF,CAAC,CAACE,OAAb,CAAnB,CAAP,EAFT,EAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,aAA6CpB,OAAO,CAAC,UAAM,CACzD,GAAMqB,CAAAA,YAAsB,CAAG,EAA/B,CACA,GAAMC,CAAAA,SAAmB,CAAG,EAA5B,CACA,GAAMC,CAAAA,OAAiB,CAAG,EAA1B,CAEAb,IAAI,GACFA,IADE,SACFA,IADE,iBACFA,IAAI,CAAEc,OAAN,CAAc,SAACC,EAAD,CAAQ,CACpBJ,YAAY,CAACK,IAAb,CAAkBD,EAAE,CAACE,aAArB,EACAL,SAAS,CAACI,IAAV,CAAeD,EAAE,CAACG,UAAlB,EACAL,OAAO,CAACG,IAAR,CAAapB,KAAK,CAACuB,OAAN,CAAcJ,EAAE,CAACK,IAAjB,EAAuBC,MAAvB,CAA8B,IAA9B,CAAb,EACD,CAJD,CADE,CAAJ,CAOA,MAAO,CACLV,YAAY,CAAZA,YADK,CAELC,SAAS,CAATA,SAFK,CAGLC,OAAO,CAAPA,OAHK,CAAP,CAKD,CAjBmD,CAiBjD,CAACb,IAAD,CAjBiD,CAApD,CAAQW,YAAR,UAAQA,YAAR,CAAsBC,SAAtB,UAAsBA,SAAtB,CAAiCC,OAAjC,UAAiCA,OAAjC,CAmBA,cAA8BvB,OAAO,CACnC,iBAAO,CACLgC,SAAS,CAAE,CACTC,KAAK,CAAErB,CAAC,CAAC,qCAAD,CADC,CAETF,IAAI,CAAEW,YAFG,CADN,CAKLa,MAAM,CAAE,CACND,KAAK,CAAErB,CAAC,CAAC,gCAAD,CADF,CAENF,IAAI,CAAEY,SAFA,CALH,CAAP,EADmC,CAWnC,CAACD,YAAD,CAAeC,SAAf,CAA0BV,CAA1B,CAXmC,CAArC,CAAQoB,SAAR,WAAQA,SAAR,CAAmBE,MAAnB,WAAmBA,MAAnB,CAcA,mBACE,KAAC,aAAD,EAAe,EAAE,CAAC,OAAlB,CAA0B,KAAK,CAAEtB,CAAC,CAAC,+BAAD,CAAlC,CAAqE,OAAO,CAAE,CAA9E,UACGF,IAAI,cAAG,KAAC,UAAD,EAAY,SAAS,CAAEsB,SAAvB,CAAkC,MAAM,CAAEE,MAA1C,CAAkD,OAAO,CAAEX,OAA3D,EAAH,cAA4E,KAAC,QAAD,IADnF,EADF,CAKD,CAjDM","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { getCovidData, CoronaData } from '@app/api/covid.api';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { CovidChart } from './CovidChart';\nimport { Dates } from '@app/constants/Dates';\nimport { notification } from 'antd';\nimport { NotFound } from '@app/components/common/NotFound/NotFound';\n\nexport const CovidCard: React.FC = () => {\n  const [data, setData] = useState<CoronaData[]>();\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    getCovidData()\n      .then((res) => setData(res?.data.splice(0, 100).reverse()))\n      .catch((e) => notification.error({ message: e.message }));\n  }, []);\n\n  const { confirmedArr, deathsArr, dateArr } = useMemo(() => {\n    const confirmedArr: number[] = [];\n    const deathsArr: number[] = [];\n    const dateArr: string[] = [];\n\n    data &&\n      data?.forEach((el) => {\n        confirmedArr.push(el.new_confirmed);\n        deathsArr.push(el.new_deaths);\n        dateArr.push(Dates.getDate(el.date).format('LL'));\n      });\n\n    return {\n      confirmedArr,\n      deathsArr,\n      dateArr,\n    };\n  }, [data]);\n\n  const { confirmed, deaths } = useMemo(\n    () => ({\n      confirmed: {\n        title: t('medical-dashboard.covid.casesPerDay'),\n        data: confirmedArr,\n      },\n      deaths: {\n        title: t('medical-dashboard.covid.deaths'),\n        data: deathsArr,\n      },\n    }),\n    [confirmedArr, deathsArr, t],\n  );\n\n  return (\n    <DashboardCard id=\"covid\" title={t('medical-dashboard.covid.title')} padding={0}>\n      {data ? <CovidChart confirmed={confirmed} deaths={deaths} dateArr={dateArr} /> : <NotFound />}\n    </DashboardCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}