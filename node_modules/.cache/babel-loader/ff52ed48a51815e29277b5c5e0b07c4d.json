{"ast":null,"code":"import React from'react';import{ConfigProvider}from'antd';import deDe from'antd/lib/locale/de_DE';import enUS from'antd/lib/locale/en_US';import GlobalStyle from'./styles/GlobalStyle';import'typeface-montserrat';import'typeface-lato';import{AppRouter}from'./components/router/AppRouter';import{useLanguage}from'./hooks/useLanguage';import{useAutoNightMode}from'./hooks/useAutoNightMode';import{usePWA}from'./hooks/usePWA';import{useThemeWatcher}from'./hooks/useThemeWatcher';import{useAppSelector}from'./hooks/reduxHooks';import{themeObject}from'./styles/themes/themeVariables';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useLanguage=useLanguage(),language=_useLanguage.language;var theme=useAppSelector(function(state){return state.theme.theme;});usePWA();useAutoNightMode();useThemeWatcher();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"meta\",{name:\"theme-color\",content:themeObject[theme].primary}),/*#__PURE__*/_jsx(GlobalStyle,{}),/*#__PURE__*/_jsx(ConfigProvider,{locale:language==='en'?enUS:deDe,children:/*#__PURE__*/_jsx(AppRouter,{})})]});};export default App;","map":{"version":3,"names":["React","ConfigProvider","deDe","enUS","GlobalStyle","AppRouter","useLanguage","useAutoNightMode","usePWA","useThemeWatcher","useAppSelector","themeObject","App","language","theme","state","primary"],"sources":["/workspace/ant-design-react-template/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport deDe from 'antd/lib/locale/de_DE';\nimport enUS from 'antd/lib/locale/en_US';\nimport GlobalStyle from './styles/GlobalStyle';\nimport 'typeface-montserrat';\nimport 'typeface-lato';\nimport { AppRouter } from './components/router/AppRouter';\nimport { useLanguage } from './hooks/useLanguage';\nimport { useAutoNightMode } from './hooks/useAutoNightMode';\nimport { usePWA } from './hooks/usePWA';\nimport { useThemeWatcher } from './hooks/useThemeWatcher';\nimport { useAppSelector } from './hooks/reduxHooks';\nimport { themeObject } from './styles/themes/themeVariables';\n\nconst App: React.FC = () => {\n  const { language } = useLanguage();\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  usePWA();\n\n  useAutoNightMode();\n\n  useThemeWatcher();\n\n  return (\n    <>\n      <meta name=\"theme-color\" content={themeObject[theme].primary} />\n      <GlobalStyle />\n      <ConfigProvider locale={language === 'en' ? enUS : deDe}>\n        <AppRouter />\n      </ConfigProvider>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,MAAM,CACrC,MAAOC,KAAI,KAAM,uBAAuB,CACxC,MAAOC,KAAI,KAAM,uBAAuB,CACxC,MAAOC,YAAW,KAAM,sBAAsB,CAC9C,MAAO,qBAAqB,CAC5B,MAAO,eAAe,CACtB,OAASC,SAAS,KAAQ,+BAA+B,CACzD,OAASC,WAAW,KAAQ,qBAAqB,CACjD,OAASC,gBAAgB,KAAQ,0BAA0B,CAC3D,OAASC,MAAM,KAAQ,gBAAgB,CACvC,OAASC,eAAe,KAAQ,yBAAyB,CACzD,OAASC,cAAc,KAAQ,oBAAoB,CACnD,OAASC,WAAW,KAAQ,gCAAgC,CAAC,6IAE7D,GAAMC,IAAa,CAAG,QAAhBA,IAAa,EAAS,CAC1B,iBAAqBN,WAAW,EAAE,CAA1BO,QAAQ,cAARA,QAAQ,CAChB,GAAMC,MAAK,CAAGJ,cAAc,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACD,KAAK,CAACA,KAAK,GAAC,CAE1DN,MAAM,EAAE,CAERD,gBAAgB,EAAE,CAElBE,eAAe,EAAE,CAEjB,mBACE,wCACE,aAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAEE,WAAW,CAACG,KAAK,CAAC,CAACE,OAAQ,EAAG,cAChE,KAAC,WAAW,IAAG,cACf,KAAC,cAAc,EAAC,MAAM,CAAEH,QAAQ,GAAK,IAAI,CAAGV,IAAI,CAAGD,IAAK,uBACtD,KAAC,SAAS,IAAG,EACE,GAChB,CAEP,CAAC,CAED,cAAeU,IAAG"},"metadata":{},"sourceType":"module"}