{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nimport _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentCard.tsx\",\n  _this = this,\n  _s = $RefreshSig$(),\n  _templateObject,\n  _templateObject2,\n  _templateObject3;\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { TreatmentCalendar } from './TreatmentCalendar/TreatmentCalendar';\nimport { TreatmentPanel } from './TreatmentPanel';\nimport { Dates } from 'constants/Dates';\nimport { Col, Row } from 'antd';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { getUserCalendar } from 'api/calendar.api';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var TreatmentCard = function TreatmentCard() {\n  _s();\n  var _useResponsive = useResponsive(),\n    isTablet = _useResponsive.isTablet;\n  var _useState = useState(Dates.getToday()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setDate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isDateClicked = _useState4[0],\n    setDateClicked = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    calendar = _useState6[0],\n    setCalendar = _useState6[1];\n  var user = useAppSelector(function (state) {\n    return state.user.user;\n  });\n  useEffect(function () {\n    user && getUserCalendar(user === null || user === void 0 ? void 0 : user.id).then(function (res) {\n      return setCalendar(res);\n    });\n  }, [user]);\n  var _useTranslation = useTranslation(),\n    i18n = _useTranslation.i18n,\n    t = _useTranslation.t;\n  useEffect(function () {\n    setDate(function (selectedDate) {\n      return selectedDate.locale(i18n.language);\n    });\n  }, [i18n.language]);\n  var handleDecreaseMonth = function handleDecreaseMonth() {\n    setDate(selectedDate.month(selectedDate.month() - 1));\n  };\n  var handleIncreaseMonth = function handleIncreaseMonth() {\n    setDate(selectedDate.month(selectedDate.month() + 1));\n  };\n  var handleToday = function handleToday() {\n    setDate(Dates.getToday());\n  };\n  var calendarItem = /*#__PURE__*/_jsxDEV(TreatmentCalendar, {\n    calendar: calendar,\n    date: selectedDate,\n    setDate: setDate,\n    onDecrease: handleDecreaseMonth,\n    onIncrease: handleIncreaseMonth,\n    onToday: handleToday,\n    setDateClicked: setDateClicked\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n  var currentEvent = calendar.find(function (event) {\n    return Dates.getDate(event.date).isSame(selectedDate, 'date');\n  });\n  var panelItem = /*#__PURE__*/_jsxDEV(TreatmentPanel, {\n    event: currentEvent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(DashboardCard, {\n    title: t('medical-dashboard.treatmentPlan.title'),\n    children: /*#__PURE__*/_jsxDEV(RowStyled, {\n      gutter: [10, 10],\n      wrap: false,\n      children: isTablet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: calendarItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: panelItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true) : isDateClicked && calendar.some(function (event) {\n        return Dates.getDate(event.date).isSame(selectedDate, 'date');\n      }) ? /*#__PURE__*/_jsxDEV(BackButtonWrapper, {\n        span: 24,\n        children: [panelItem, /*#__PURE__*/_jsxDEV(BackButton, {\n          type: \"text\",\n          icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 43\n          }, _this),\n          onClick: function onClick() {\n            return setDateClicked(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: calendarItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n_s(TreatmentCard, \"EV77Ijh7Uzs1D/nvXt211piEXpY=\", false, function () {\n  return [useResponsive, useAppSelector, useTranslation];\n});\n_c = TreatmentCard;\nvar BackButtonWrapper = styled(Col)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"])));\n_c2 = BackButtonWrapper;\nvar BackButton = styled(Button)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  color: var(--white);\\n\"])));\n_c3 = BackButton;\nvar RowStyled = styled(Row)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  min-height: 21.75rem;\\n\"])));\n_c4 = RowStyled;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TreatmentCard\");\n$RefreshReg$(_c2, \"BackButtonWrapper\");\n$RefreshReg$(_c3, \"BackButton\");\n$RefreshReg$(_c4, \"RowStyled\");","map":{"version":3,"names":["React","useEffect","useState","useTranslation","useResponsive","TreatmentCalendar","TreatmentPanel","Dates","Col","Row","DashboardCard","getUserCalendar","ArrowLeftOutlined","styled","Button","useAppSelector","TreatmentCard","isTablet","getToday","selectedDate","setDate","isDateClicked","setDateClicked","calendar","setCalendar","user","state","id","then","res","i18n","t","locale","language","handleDecreaseMonth","month","handleIncreaseMonth","handleToday","calendarItem","currentEvent","find","event","getDate","date","isSame","panelItem","some","BackButtonWrapper","BackButton","RowStyled"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { TreatmentCalendar } from './TreatmentCalendar/TreatmentCalendar';\nimport { TreatmentPanel } from './TreatmentPanel';\nimport { AppDate, Dates } from 'constants/Dates';\nimport { Col, Row } from 'antd';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { CalendarEvent, getUserCalendar } from 'api/calendar.api';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\n\nexport const TreatmentCard: React.FC = () => {\n  const { isTablet } = useResponsive();\n\n  const [selectedDate, setDate] = useState<AppDate>(Dates.getToday());\n  const [isDateClicked, setDateClicked] = useState(false);\n  const [calendar, setCalendar] = useState<CalendarEvent[]>([]);\n\n  const user = useAppSelector((state) => state.user.user);\n\n  useEffect(() => {\n    user && getUserCalendar(user?.id).then((res) => setCalendar(res));\n  }, [user]);\n\n  const { i18n, t } = useTranslation();\n\n  useEffect(() => {\n    setDate((selectedDate) => selectedDate.locale(i18n.language));\n  }, [i18n.language]);\n\n  const handleDecreaseMonth = () => {\n    setDate(selectedDate.month(selectedDate.month() - 1));\n  };\n\n  const handleIncreaseMonth = () => {\n    setDate(selectedDate.month(selectedDate.month() + 1));\n  };\n\n  const handleToday = () => {\n    setDate(Dates.getToday());\n  };\n\n  const calendarItem = (\n    <TreatmentCalendar\n      calendar={calendar}\n      date={selectedDate}\n      setDate={setDate}\n      onDecrease={handleDecreaseMonth}\n      onIncrease={handleIncreaseMonth}\n      onToday={handleToday}\n      setDateClicked={setDateClicked}\n    />\n  );\n\n  const currentEvent = calendar.find((event) => Dates.getDate(event.date).isSame(selectedDate, 'date'));\n\n  const panelItem = <TreatmentPanel event={currentEvent} />;\n\n  return (\n    <DashboardCard title={t('medical-dashboard.treatmentPlan.title')}>\n      <RowStyled gutter={[10, 10]} wrap={false}>\n        {isTablet ? (\n          <>\n            <Col md={12}>{calendarItem}</Col>\n            <Col md={12}>{panelItem}</Col>\n          </>\n        ) : isDateClicked && calendar.some((event) => Dates.getDate(event.date).isSame(selectedDate, 'date')) ? (\n          <BackButtonWrapper span={24}>\n            {panelItem}\n            <BackButton type=\"text\" icon={<ArrowLeftOutlined />} onClick={() => setDateClicked(false)} />\n          </BackButtonWrapper>\n        ) : (\n          <Col span={24}>{calendarItem}</Col>\n        )}\n      </RowStyled>\n    </DashboardCard>\n  );\n};\n\nconst BackButtonWrapper = styled(Col)`\n  position: relative;\n`;\n\nconst BackButton = styled(Button)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: var(--white);\n`;\n\nconst RowStyled = styled(Row)`\n  min-height: 21.75rem;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}