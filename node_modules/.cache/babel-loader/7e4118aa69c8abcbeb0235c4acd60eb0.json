{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var RequireFullscreen=function RequireFullscreen(_ref){var component=_ref.component,children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFullscreen=_useState2[0],setFullscreen=_useState2[1];var handleFullScreen=function handleFullScreen(){if(component!==null&&component!==void 0&&component.current){isFullscreen?document.exitFullscreen():component.current.requestFullscreen();}};useEffect(function(){var onFullScreenChange=function onFullScreenChange(){setFullscreen(document.fullscreenElement!==null);};document.addEventListener('fullscreenchange',onFullScreenChange);document.addEventListener('mozfullscreenchange',onFullScreenChange);document.addEventListener('webkitfullscreenchange',onFullScreenChange);document.addEventListener('msfullscreenchange',onFullScreenChange);return function(){document.removeEventListener('fullscreenchange',onFullScreenChange);document.removeEventListener('mozfullscreenchange',onFullScreenChange);document.removeEventListener('webkitfullscreenchange',onFullScreenChange);document.removeEventListener('msfullscreenchange',onFullScreenChange);};},[]);return/*#__PURE__*/_jsx(\"div\",{onClick:handleFullScreen,children:children(isFullscreen)});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/RequireFullscreen/RequireFullscreen.tsx"],"names":["React","useEffect","useState","RequireFullscreen","component","children","isFullscreen","setFullscreen","handleFullScreen","current","document","exitFullscreen","requestFullscreen","onFullScreenChange","fullscreenElement","addEventListener","removeEventListener"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,2CAOA,MAAO,IAAMC,CAAAA,iBAAmD,CAAG,QAAtDA,CAAAA,iBAAsD,MAA6B,IAA1BC,CAAAA,SAA0B,MAA1BA,SAA0B,CAAfC,QAAe,MAAfA,QAAe,CAC9F,cAAsCH,QAAQ,CAAC,KAAD,CAA9C,wCAAOI,YAAP,eAAqBC,aAArB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAIJ,SAAJ,SAAIA,SAAJ,WAAIA,SAAS,CAAEK,OAAf,CAAwB,CACtBH,YAAY,CAAGI,QAAQ,CAACC,cAAT,EAAH,CAA+BP,SAAS,CAACK,OAAV,CAAkBG,iBAAlB,EAA3C,CACD,CACF,CAJD,CAMAX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BN,aAAa,CAACG,QAAQ,CAACI,iBAAT,GAA+B,IAAhC,CAAb,CACD,CAFD,CAIAJ,QAAQ,CAACK,gBAAT,CAA0B,kBAA1B,CAA8CF,kBAA9C,EACAH,QAAQ,CAACK,gBAAT,CAA0B,qBAA1B,CAAiDF,kBAAjD,EACAH,QAAQ,CAACK,gBAAT,CAA0B,wBAA1B,CAAoDF,kBAApD,EACAH,QAAQ,CAACK,gBAAT,CAA0B,oBAA1B,CAAgDF,kBAAhD,EAEA,MAAO,WAAM,CACXH,QAAQ,CAACM,mBAAT,CAA6B,kBAA7B,CAAiDH,kBAAjD,EACAH,QAAQ,CAACM,mBAAT,CAA6B,qBAA7B,CAAoDH,kBAApD,EACAH,QAAQ,CAACM,mBAAT,CAA6B,wBAA7B,CAAuDH,kBAAvD,EACAH,QAAQ,CAACM,mBAAT,CAA6B,oBAA7B,CAAmDH,kBAAnD,EACD,CALD,CAMD,CAhBQ,CAgBN,EAhBM,CAAT,CAkBA,mBAAO,YAAK,OAAO,CAAEL,gBAAd,UAAiCH,QAAQ,CAACC,YAAD,CAAzC,EAAP,CACD,CA5BM","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface RequireFullscreenProps {\n  component: React.RefObject<HTMLElement>;\n  children: (isFullscreen: boolean) => React.ReactNode;\n}\n\nexport const RequireFullscreen: React.FC<RequireFullscreenProps> = ({ component, children }) => {\n  const [isFullscreen, setFullscreen] = useState(false);\n\n  const handleFullScreen = () => {\n    if (component?.current) {\n      isFullscreen ? document.exitFullscreen() : component.current.requestFullscreen();\n    }\n  };\n\n  useEffect(() => {\n    const onFullScreenChange = () => {\n      setFullscreen(document.fullscreenElement !== null);\n    };\n\n    document.addEventListener('fullscreenchange', onFullScreenChange);\n    document.addEventListener('mozfullscreenchange', onFullScreenChange);\n    document.addEventListener('webkitfullscreenchange', onFullScreenChange);\n    document.addEventListener('msfullscreenchange', onFullScreenChange);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', onFullScreenChange);\n      document.removeEventListener('mozfullscreenchange', onFullScreenChange);\n      document.removeEventListener('webkitfullscreenchange', onFullScreenChange);\n      document.removeEventListener('msfullscreenchange', onFullScreenChange);\n    };\n  }, []);\n\n  return <div onClick={handleFullScreen}>{children(isFullscreen)}</div>;\n};\n"]},"metadata":{},"sourceType":"module"}