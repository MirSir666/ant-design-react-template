{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentCalendar/TreatmentCalendar.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport enUS from 'antd/lib/calendar/locale/en_US';\nimport deDe from 'antd/es/calendar/locale/de_DE';\nimport { Col, Row } from 'antd';\nimport { CalendarSwitch } from '@app/components/common/CalendarSwitch/CalendarSwitch';\nimport { useLanguage } from '@app/hooks/useLanguage';\nimport { Dates } from '@app/constants/Dates';\nimport * as S from './TreatmentCalendar.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var TreatmentCalendar = function TreatmentCalendar(_ref) {\n  _s();\n  var calendar = _ref.calendar,\n    date = _ref.date,\n    setDate = _ref.setDate,\n    onDecrease = _ref.onDecrease,\n    onIncrease = _ref.onIncrease,\n    setDateClicked = _ref.setDateClicked,\n    onToday = _ref.onToday;\n  var _useLanguage = useLanguage(),\n    language = _useLanguage.language;\n  var locale = useMemo(function () {\n    return language === 'de' ? deDe : enUS;\n  }, [language]);\n  var handleSelect = function handleSelect(value) {\n    setDate(value);\n    setDateClicked(true);\n  };\n  var dateFormatted = Dates.format(date, 'MMMM YYYY');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [20, 20],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(CalendarSwitch, {\n          dateFormatted: dateFormatted,\n          onDecrease: onDecrease,\n          onIncrease: onIncrease,\n          onToday: onToday\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(S.Calendar, {\n          locale: locale,\n          dateCellRender: function dateCellRender(value) {\n            var today = Dates.getToday();\n            return calendar.map(function (event) {\n              var calendarDate = Dates.getDate(event.date);\n              if (calendarDate.isSame(value, 'date') && calendarDate.isSame(value, 'month') && calendarDate.isSame(value, 'year')) {\n                var isPast = today.isAfter(calendarDate);\n                return /*#__PURE__*/_jsxDEV(S.Event, {\n                  $isPast: isPast,\n                  children: calendarDate.format('DD')\n                }, event.date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, _this);\n              }\n            });\n          },\n          value: date,\n          fullscreen: false,\n          onSelect: handleSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n_s(TreatmentCalendar, \"/fFDglWr0Rg7RGSksOalVf5vhn0=\", false, function () {\n  return [useLanguage];\n});\n_c = TreatmentCalendar;\nvar _c;\n$RefreshReg$(_c, \"TreatmentCalendar\");","map":{"version":3,"names":["React","useMemo","enUS","deDe","Col","Row","CalendarSwitch","useLanguage","Dates","S","TreatmentCalendar","calendar","date","setDate","onDecrease","onIncrease","setDateClicked","onToday","language","locale","handleSelect","value","dateFormatted","format","today","getToday","map","event","calendarDate","getDate","isSame","isPast","isAfter"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentCalendar/TreatmentCalendar.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport enUS from 'antd/lib/calendar/locale/en_US';\nimport deDe from 'antd/es/calendar/locale/de_DE';\nimport { Col, Row } from 'antd';\nimport { CalendarSwitch } from '@app/components/common/CalendarSwitch/CalendarSwitch';\nimport { useLanguage } from '@app/hooks/useLanguage';\nimport { CalendarEvent } from '@app/api/calendar.api';\nimport { AppDate, Dates } from '@app/constants/Dates';\nimport * as S from './TreatmentCalendar.styles';\n\ninterface TreatmentCalendarProps {\n  date: AppDate;\n  setDate: (state: AppDate) => void;\n  onIncrease: () => void;\n  onDecrease: () => void;\n  onToday: () => void;\n  setDateClicked: (state: boolean) => void;\n  calendar: CalendarEvent[];\n}\n\nexport const TreatmentCalendar: React.FC<TreatmentCalendarProps> = ({\n  calendar,\n  date,\n  setDate,\n  onDecrease,\n  onIncrease,\n  setDateClicked,\n  onToday,\n}) => {\n  const { language } = useLanguage();\n  const locale = useMemo(() => (language === 'de' ? deDe : enUS), [language]);\n\n  const handleSelect = (value: AppDate) => {\n    setDate(value);\n    setDateClicked(true);\n  };\n\n  const dateFormatted = Dates.format(date, 'MMMM YYYY');\n\n  return (\n    <>\n      <Row gutter={[20, 20]}>\n        <Col span={24}>\n          <CalendarSwitch\n            dateFormatted={dateFormatted}\n            onDecrease={onDecrease}\n            onIncrease={onIncrease}\n            onToday={onToday}\n          />\n        </Col>\n\n        <Col span={24}>\n          <S.Calendar\n            locale={locale}\n            dateCellRender={(value) => {\n              const today = Dates.getToday();\n\n              return calendar.map((event) => {\n                const calendarDate = Dates.getDate(event.date);\n\n                if (\n                  calendarDate.isSame(value, 'date') &&\n                  calendarDate.isSame(value, 'month') &&\n                  calendarDate.isSame(value, 'year')\n                ) {\n                  const isPast = today.isAfter(calendarDate);\n\n                  return (\n                    <S.Event key={event.date} $isPast={isPast}>\n                      {calendarDate.format('DD')}\n                    </S.Event>\n                  );\n                }\n              });\n            }}\n            value={date}\n            fullscreen={false}\n            onSelect={handleSelect}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}