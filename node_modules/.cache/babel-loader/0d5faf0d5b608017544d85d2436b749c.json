{"ast":null,"code":"import _slicedToArray from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{Checkbox}from'antd';import*as S from'./CheckboxColumn.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var CheckboxColumn=function CheckboxColumn(_ref){var column=_ref.column,handleCheck=_ref.handleCheck,setTriggered=_ref.setTriggered;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),checkedList=_React$useState2[0],setCheckedList=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),indeterminate=_React$useState4[0],setIndeterminate=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),checkAll=_React$useState6[0],setCheckAll=_React$useState6[1];var onChange=function onChange(list){setCheckedList(list);setIndeterminate(!!list.length&&list.length<column.data.length);setCheckAll(list.length===column.data.length);handleCheck(list);setTriggered(true);};var onCheckAllChange=function onCheckAllChange(event){setCheckedList(event.target.checked?column.data:[]);setIndeterminate(false);setCheckAll(event.target.checked);handleCheck(event.target.checked?column.data:[]);setTriggered(true);};var props={indeterminate:indeterminate,onChange:onCheckAllChange,checked:checkAll};return/*#__PURE__*/_jsxs(S.Wrapper,{children:[/*#__PURE__*/_jsx(S.HeaderCol,{children:column.headerRender?column.headerRender(column.header,props):column.header}),/*#__PURE__*/_jsx(Checkbox.Group,{value:checkedList,onChange:onChange,children:column.data.map(function(el,index){return/*#__PURE__*/_jsx(S.Col,{children:column.dataRender?column.dataRender(el):el},index);})})]});};","map":{"version":3,"names":["React","Checkbox","S","CheckboxColumn","column","handleCheck","setTriggered","useState","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","onChange","list","length","data","onCheckAllChange","event","target","checked","props","headerRender","header","map","el","index","dataRender"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/notifications/CheckboxColumn/CheckboxColumn.tsx"],"sourcesContent":["import React from 'react';\nimport { Checkbox } from 'antd';\nimport { Option } from '../interfaces';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport * as S from './CheckboxColumn.styles';\n\ninterface CheckboxColumnProps {\n  column: Omit<Option, 'id'>;\n  handleCheck: (list: CheckboxValueType[]) => void;\n  setTriggered: (state: boolean) => void;\n}\n\nexport const CheckboxColumn: React.FC<CheckboxColumnProps> = ({ column, handleCheck, setTriggered }) => {\n  const [checkedList, setCheckedList] = React.useState<CheckboxValueType[]>([]);\n  const [indeterminate, setIndeterminate] = React.useState(false);\n  const [checkAll, setCheckAll] = React.useState(false);\n\n  const onChange = (list: CheckboxValueType[]) => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < column.data.length);\n    setCheckAll(list.length === column.data.length);\n    handleCheck(list);\n    setTriggered(true);\n  };\n\n  const onCheckAllChange = (event: CheckboxChangeEvent) => {\n    setCheckedList(event.target.checked ? column.data : []);\n    setIndeterminate(false);\n    setCheckAll(event.target.checked);\n    handleCheck(event.target.checked ? column.data : []);\n    setTriggered(true);\n  };\n\n  const props = {\n    indeterminate,\n    onChange: onCheckAllChange,\n    checked: checkAll,\n  };\n\n  return (\n    <S.Wrapper>\n      <S.HeaderCol>{column.headerRender ? column.headerRender(column.header, props) : column.header}</S.HeaderCol>\n      <Checkbox.Group value={checkedList} onChange={onChange}>\n        {column.data.map((el, index) => (\n          <S.Col key={index}>{column.dataRender ? column.dataRender(el) : el}</S.Col>\n        ))}\n      </Checkbox.Group>\n    </S.Wrapper>\n  );\n};\n"],"mappings":"0HAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,MAAM,CAI/B,MAAO,GAAKC,EAAC,KAAM,yBAAyB,CAAC,wFAQ7C,MAAO,IAAMC,eAA6C,CAAG,QAAhDA,eAA6C,MAA8C,IAAxCC,OAAM,MAANA,MAAM,CAAEC,WAAW,MAAXA,WAAW,CAAEC,YAAY,MAAZA,YAAY,CAC/F,oBAAsCN,KAAK,CAACO,QAAQ,CAAsB,EAAE,CAAC,oDAAtEC,WAAW,qBAAEC,cAAc,qBAClC,qBAA0CT,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC,qDAAxDG,aAAa,qBAAEC,gBAAgB,qBACtC,qBAAgCX,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC,qDAA9CK,QAAQ,qBAAEC,WAAW,qBAE5B,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,IAAyB,CAAK,CAC9CN,cAAc,CAACM,IAAI,CAAC,CACpBJ,gBAAgB,CAAC,CAAC,CAACI,IAAI,CAACC,MAAM,EAAID,IAAI,CAACC,MAAM,CAAGZ,MAAM,CAACa,IAAI,CAACD,MAAM,CAAC,CACnEH,WAAW,CAACE,IAAI,CAACC,MAAM,GAAKZ,MAAM,CAACa,IAAI,CAACD,MAAM,CAAC,CAC/CX,WAAW,CAACU,IAAI,CAAC,CACjBT,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,GAAMY,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIC,KAA0B,CAAK,CACvDV,cAAc,CAACU,KAAK,CAACC,MAAM,CAACC,OAAO,CAAGjB,MAAM,CAACa,IAAI,CAAG,EAAE,CAAC,CACvDN,gBAAgB,CAAC,KAAK,CAAC,CACvBE,WAAW,CAACM,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,CACjChB,WAAW,CAACc,KAAK,CAACC,MAAM,CAACC,OAAO,CAAGjB,MAAM,CAACa,IAAI,CAAG,EAAE,CAAC,CACpDX,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,GAAMgB,MAAK,CAAG,CACZZ,aAAa,CAAbA,aAAa,CACbI,QAAQ,CAAEI,gBAAgB,CAC1BG,OAAO,CAAET,QACX,CAAC,CAED,mBACE,MAAC,CAAC,CAAC,OAAO,yBACR,KAAC,CAAC,CAAC,SAAS,WAAER,MAAM,CAACmB,YAAY,CAAGnB,MAAM,CAACmB,YAAY,CAACnB,MAAM,CAACoB,MAAM,CAAEF,KAAK,CAAC,CAAGlB,MAAM,CAACoB,MAAM,EAAe,cAC5G,KAAC,QAAQ,CAAC,KAAK,EAAC,KAAK,CAAEhB,WAAY,CAAC,QAAQ,CAAEM,QAAS,UACpDV,MAAM,CAACa,IAAI,CAACQ,GAAG,CAAC,SAACC,EAAE,CAAEC,KAAK,qBACzB,KAAC,CAAC,CAAC,GAAG,WAAcvB,MAAM,CAACwB,UAAU,CAAGxB,MAAM,CAACwB,UAAU,CAACF,EAAE,CAAC,CAAGA,EAAE,EAAtDC,KAAK,CAA0D,EAC5E,CAAC,EACa,GACP,CAEhB,CAAC"},"metadata":{},"sourceType":"module"}