{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/bloodScreeningCard/BloodScreeningChart/BloodScreeningChart.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { BaseChart } from '../../../common/charts/BaseChart';\nimport { Dates } from '@app/constants/Dates';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var BloodScreeningChart = function BloodScreeningChart(_ref) {\n  _s();\n  var data = _ref.data;\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var _useResponsive = useResponsive(),\n    isTablet = _useResponsive.isTablet,\n    isDesktop = _useResponsive.isDesktop,\n    isMobile = _useResponsive.isMobile;\n  var months = Dates.getMonths();\n  var option = {\n    grid: {\n      top: 27,\n      bottom: 0,\n      left: -20,\n      right: -20\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: function formatter(label) {\n        return \"\".concat(label[0].axisValue);\n      },\n      axisPointer: {\n        show: false,\n        lineStyle: {\n          width: 0\n        }\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: months,\n      show: false,\n      lineStyle: {\n        width: 0\n      }\n    },\n    yAxis: {\n      type: 'value',\n      show: false,\n      lineStyle: {\n        width: 0\n      }\n    },\n    series: [{\n      data: data,\n      type: 'line',\n      smooth: true,\n      showSymbol: false,\n      symbol: 'circle',\n      itemStyle: {\n        color: themeObject[theme].chartColor5,\n        borderColor: themeObject[theme].background,\n        borderWidth: 5,\n        shadowColor: themeObject[theme].shadow,\n        shadowOffsetX: 0,\n        shadowOffsetY: 5,\n        opacity: 1\n      },\n      symbolSize: 18,\n      areaStyle: {\n        color: themeObject[theme].chartSecondaryGradient\n      },\n      lineStyle: {\n        width: 2,\n        color: themeObject[theme].error\n      }\n    }]\n  };\n  var chartHeight = useMemo(function () {\n    return isDesktop && 100 || isTablet && 200 || isMobile && 100 || 100;\n  }, [isTablet, isDesktop, isMobile]);\n  return /*#__PURE__*/_jsxDEV(BaseChart, {\n    option: option,\n    height: chartHeight\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, _this);\n};\n_s(BloodScreeningChart, \"XL++ed86EIxMELRJFLDkKGsbY4c=\", false, function () {\n  return [useAppSelector, useResponsive];\n});\n_c = BloodScreeningChart;\nvar _c;\n$RefreshReg$(_c, \"BloodScreeningChart\");","map":{"version":3,"names":["React","useMemo","BaseChart","Dates","useResponsive","useAppSelector","themeObject","BloodScreeningChart","data","theme","state","isTablet","isDesktop","isMobile","months","getMonths","option","grid","top","bottom","left","right","tooltip","trigger","formatter","label","axisValue","axisPointer","show","lineStyle","width","xAxis","type","yAxis","series","smooth","showSymbol","symbol","itemStyle","color","chartColor5","borderColor","background","borderWidth","shadowColor","shadow","shadowOffsetX","shadowOffsetY","opacity","symbolSize","areaStyle","chartSecondaryGradient","error","chartHeight"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/bloodScreeningCard/BloodScreeningChart/BloodScreeningChart.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { EChartsInstance } from 'echarts-for-react';\nimport { BaseChart } from '../../../common/charts/BaseChart';\nimport { Dates } from '@app/constants/Dates';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\ninterface BloodScreeningChartsProps {\n  data: number[];\n}\n\nexport const BloodScreeningChart: React.FC<BloodScreeningChartsProps> = ({ data }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const { isTablet, isDesktop, isMobile } = useResponsive();\n  const months = Dates.getMonths();\n\n  const option = {\n    grid: {\n      top: 27,\n      bottom: 0,\n      left: -20,\n      right: -20,\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: function (label: EChartsInstance) {\n        return `${label[0].axisValue}`;\n      },\n      axisPointer: {\n        show: false,\n        lineStyle: {\n          width: 0,\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: months,\n      show: false,\n      lineStyle: {\n        width: 0,\n      },\n    },\n    yAxis: {\n      type: 'value',\n      show: false,\n      lineStyle: {\n        width: 0,\n      },\n    },\n    series: [\n      {\n        data,\n        type: 'line',\n        smooth: true,\n        showSymbol: false,\n        symbol: 'circle',\n        itemStyle: {\n          color: themeObject[theme].chartColor5,\n          borderColor: themeObject[theme].background,\n          borderWidth: 5,\n          shadowColor: themeObject[theme].shadow,\n          shadowOffsetX: 0,\n          shadowOffsetY: 5,\n          opacity: 1,\n        },\n        symbolSize: 18,\n        areaStyle: {\n          color: themeObject[theme].chartSecondaryGradient,\n        },\n        lineStyle: {\n          width: 2,\n          color: themeObject[theme].error,\n        },\n      },\n    ],\n  };\n\n  const chartHeight = useMemo(\n    () => (isDesktop && 100) || (isTablet && 200) || (isMobile && 100) || 100,\n    [isTablet, isDesktop, isMobile],\n  );\n\n  return <BaseChart option={option} height={chartHeight} />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}