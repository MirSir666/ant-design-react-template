{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/statisticsCards/StatisticsCards.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Col } from 'antd';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { StatisticsCard } from './statisticsCard/StatisticsCard/StatisticsCard';\nimport { getStatistics } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var StatisticsCards = function StatisticsCards() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    statistics = _useState2[0],\n    setStatistics = _useState2[1];\n  var _useResponsive = useResponsive(),\n    isTablet = _useResponsive.isTablet;\n  useEffect(function () {\n    getStatistics().then(function (res) {\n      return setStatistics(res);\n    });\n  }, []);\n  var statisticsCards = useMemo(function () {\n    return statistics.map(function (st, index) {\n      var currentStatistic = configStatistics.find(function (el) {\n        return el.id === st.id;\n      });\n      return currentStatistic ? /*#__PURE__*/_jsxDEV(Col, {\n        id: currentStatistic.name,\n        xs: 12,\n        md: index === statistics.length - 1 ? 0 : 8,\n        order: isTablet && index + 1 || 0,\n        children: /*#__PURE__*/_jsxDEV(StatisticsCard, {\n          name: currentStatistic.title,\n          value: st.value,\n          prevValue: st.prevValue,\n          color: currentStatistic.color,\n          unit: st.unit,\n          Icon: currentStatistic.Icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this)\n      }, st.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, _this) : null;\n    });\n  }, [statistics, isTablet]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: statisticsCards\n  }, void 0, false);\n};\n_s(StatisticsCards, \"mqvk1rBZY5u9iPI8Ond3c5BeQv0=\", false, function () {\n  return [useResponsive];\n});\n_c = StatisticsCards;\nvar _c;\n$RefreshReg$(_c, \"StatisticsCards\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Col","useResponsive","StatisticsCard","getStatistics","statistics","configStatistics","StatisticsCards","setStatistics","isTablet","then","res","statisticsCards","map","st","index","currentStatistic","find","el","id","name","length","title","value","prevValue","color","unit","Icon"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/statisticsCards/StatisticsCards.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Col } from 'antd';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { StatisticsCard } from './statisticsCard/StatisticsCard/StatisticsCard';\nimport { getStatistics, Statistic } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\n\nexport const StatisticsCards: React.FC = () => {\n  const [statistics, setStatistics] = useState<Statistic[]>([]);\n\n  const { isTablet } = useResponsive();\n\n  useEffect(() => {\n    getStatistics().then((res) => setStatistics(res));\n  }, []);\n\n  const statisticsCards = useMemo(\n    () =>\n      statistics.map((st, index) => {\n        const currentStatistic = configStatistics.find((el) => el.id === st.id);\n\n        return currentStatistic ? (\n          <Col\n            key={st.id}\n            id={currentStatistic.name}\n            xs={12}\n            md={index === statistics.length - 1 ? 0 : 8}\n            order={(isTablet && index + 1) || 0}\n          >\n            <StatisticsCard\n              name={currentStatistic.title}\n              value={st.value}\n              prevValue={st.prevValue}\n              color={currentStatistic.color}\n              unit={st.unit}\n              Icon={currentStatistic.Icon}\n            />\n          </Col>\n        ) : null;\n      }),\n    [statistics, isTablet],\n  );\n\n  return <>{statisticsCards}</>;\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,GAAG,QAAQ,MAAM;AAC1B,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,cAAc,QAAQ,gDAAgD;AAC/E,SAASC,aAAa,QAAmB,oBAAoB;AAC7D,SAASC,UAAU,IAAIC,gBAAgB,QAAQ,6BAA6B;AAAC;AAAA;AAE7E,OAAO,IAAMC,eAAyB,GAAG,SAA5BA,eAAyB,GAAS;EAAA;EAC7C,gBAAoCP,QAAQ,CAAc,EAAE,CAAC;IAAA;IAAtDK,UAAU;IAAEG,aAAa;EAEhC,qBAAqBN,aAAa,EAAE;IAA5BO,QAAQ,kBAARA,QAAQ;EAEhBX,SAAS,CAAC,YAAM;IACdM,aAAa,EAAE,CAACM,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKH,aAAa,CAACG,GAAG,CAAC;IAAA,EAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,eAAe,GAAGb,OAAO,CAC7B;IAAA,OACEM,UAAU,CAACQ,GAAG,CAAC,UAACC,EAAE,EAAEC,KAAK,EAAK;MAC5B,IAAMC,gBAAgB,GAAGV,gBAAgB,CAACW,IAAI,CAAC,UAACC,EAAE;QAAA,OAAKA,EAAE,CAACC,EAAE,KAAKL,EAAE,CAACK,EAAE;MAAA,EAAC;MAEvE,OAAOH,gBAAgB,gBACrB,QAAC,GAAG;QAEF,EAAE,EAAEA,gBAAgB,CAACI,IAAK;QAC1B,EAAE,EAAE,EAAG;QACP,EAAE,EAAEL,KAAK,KAAKV,UAAU,CAACgB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE;QAC5C,KAAK,EAAGZ,QAAQ,IAAIM,KAAK,GAAG,CAAC,IAAK,CAAE;QAAA,uBAEpC,QAAC,cAAc;UACb,IAAI,EAAEC,gBAAgB,CAACM,KAAM;UAC7B,KAAK,EAAER,EAAE,CAACS,KAAM;UAChB,SAAS,EAAET,EAAE,CAACU,SAAU;UACxB,KAAK,EAAER,gBAAgB,CAACS,KAAM;UAC9B,IAAI,EAAEX,EAAE,CAACY,IAAK;UACd,IAAI,EAAEV,gBAAgB,CAACW;QAAK;UAAA;UAAA;UAAA;QAAA;MAC5B,GAbGb,EAAE,CAACK,EAAE;QAAA;QAAA;QAAA;MAAA,SAcN,GACJ,IAAI;IACV,CAAC,CAAC;EAAA,GACJ,CAACd,UAAU,EAAEI,QAAQ,CAAC,CACvB;EAED,oBAAO;IAAA,UAAGG;EAAe,iBAAI;AAC/B,CAAC;AAAC,GArCWL,eAAyB;EAAA,QAGfL,aAAa;AAAA;AAAA,KAHvBK,eAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}