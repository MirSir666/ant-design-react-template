{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/SettingsDropdown.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { HeaderActionWrapper } from '@app/components/header/Header.styles';\nimport { SettingsOverlay } from './settingsOverlay/SettingsOverlay/SettingsOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var SettingsDropdown = function SettingsDropdown() {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpened = _useState2[0],\n    setOpened = _useState2[1];\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    overlay: /*#__PURE__*/_jsxDEV(SettingsOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 24\n    }, _this),\n    trigger: ['click'],\n    onVisibleChange: setOpened,\n    children: /*#__PURE__*/_jsxDEV(HeaderActionWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: isOpened ? 'ghost' : 'text',\n        icon: /*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 58\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n_s(SettingsDropdown, \"WWUtLdQ/RY5dBKZJHZe9zCNFrvE=\");\n_c = SettingsDropdown;\nvar _c;\n$RefreshReg$(_c, \"SettingsDropdown\");","map":{"version":3,"names":["React","useState","SettingOutlined","Dropdown","Button","HeaderActionWrapper","SettingsOverlay","SettingsDropdown","isOpened","setOpened"],"sources":["/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/SettingsDropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { HeaderActionWrapper } from '@app/components/header/Header.styles';\nimport { SettingsOverlay } from './settingsOverlay/SettingsOverlay/SettingsOverlay';\n\nexport const SettingsDropdown: React.FC = () => {\n  const [isOpened, setOpened] = useState(false);\n\n  return (\n    <Dropdown overlay={<SettingsOverlay />} trigger={['click']} onVisibleChange={setOpened}>\n      <HeaderActionWrapper>\n        <Button type={isOpened ? 'ghost' : 'text'} icon={<SettingOutlined />} />\n      </HeaderActionWrapper>\n    </Dropdown>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,QAAQ,QAAQ,0CAA0C;AACnE,SAASC,MAAM,QAAQ,8CAA8C;AACrE,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,eAAe,QAAQ,mDAAmD;AAAC;AAEpF,OAAO,IAAMC,gBAA0B,GAAG,SAA7BA,gBAA0B,GAAS;EAAA;EAC9C,gBAA8BN,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCO,QAAQ;IAAEC,SAAS;EAE1B,oBACE,QAAC,QAAQ;IAAC,OAAO,eAAE,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,SAAI;IAAC,OAAO,EAAE,CAAC,OAAO,CAAE;IAAC,eAAe,EAAEA,SAAU;IAAA,uBACrF,QAAC,mBAAmB;MAAA,uBAClB,QAAC,MAAM;QAAC,IAAI,EAAED,QAAQ,GAAG,OAAO,GAAG,MAAO;QAAC,IAAI,eAAE,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACpD;IAAA;IAAA;IAAA;EAAA,SACb;AAEf,CAAC;AAAC,GAVWD,gBAA0B;AAAA,KAA1BA,gBAA0B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}