{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from'react';import styled from'styled-components';import{GlobalSpinner}from'@app/components/common/GlobalSpinner';import{useAppSelector}from'@app/hooks/reduxHooks';import{themeObject}from'@app/styles/themes/themeVariables';import{jsx as _jsx}from\"react/jsx-runtime\";export var Loading=function Loading(_ref){var size=_ref.size,color=_ref.color;var theme=useAppSelector(function(state){return state.theme.theme;});var spinnerColor=color||themeObject[theme].spinnerBase;return/*#__PURE__*/_jsx(SpinnerContainer,{children:/*#__PURE__*/_jsx(GlobalSpinner,{size:size,color:spinnerColor})});};var SpinnerContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\"])));","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/Loading.tsx"],"names":["React","styled","GlobalSpinner","useAppSelector","themeObject","Loading","size","color","theme","state","spinnerColor","spinnerBase","SpinnerContainer","div"],"mappings":"4MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,aAAT,KAA8B,sCAA9B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,WAAT,KAA4B,mCAA5B,C,2CAOA,MAAO,IAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAqB,IAAlBC,CAAAA,IAAkB,MAAlBA,IAAkB,CAAZC,KAAY,MAAZA,KAAY,CAClE,GAAMC,CAAAA,KAAK,CAAGL,cAAc,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAN,CAAYA,KAAvB,EAAD,CAA5B,CACA,GAAME,CAAAA,YAAY,CAAGH,KAAK,EAAIH,WAAW,CAACI,KAAD,CAAX,CAAmBG,WAAjD,CAEA,mBACE,KAAC,gBAAD,wBACE,KAAC,aAAD,EAAe,IAAI,CAAEL,IAArB,CAA2B,KAAK,CAAEI,YAAlC,EADF,EADF,CAKD,CATM,CAWP,GAAME,CAAAA,gBAAgB,CAAGX,MAAM,CAACY,GAAV,0KAAtB","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { GlobalSpinner } from '@app/components/common/GlobalSpinner';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\ninterface LoadingProps {\n  size?: string;\n  color?: string;\n}\n\nexport const Loading: React.FC<LoadingProps> = ({ size, color }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const spinnerColor = color || themeObject[theme].spinnerBase;\n\n  return (\n    <SpinnerContainer>\n      <GlobalSpinner size={size} color={spinnerColor} />\n    </SpinnerContainer>\n  );\n};\n\nconst SpinnerContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n"]},"metadata":{},"sourceType":"module"}