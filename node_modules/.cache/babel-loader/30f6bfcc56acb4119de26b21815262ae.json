{"ast":null,"code":"import React,{useMemo}from'react';import InlineInput from'react-trello/dist/widgets/InlineInput';import*as S from'./LaneHeader.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var LaneHeader=function LaneHeader(_ref){var updateTitle=_ref.updateTitle,onDoubleClick=_ref.onDoubleClick,_ref$editLaneTitle=_ref.editLaneTitle,editLaneTitle=_ref$editLaneTitle===void 0?false:_ref$editLaneTitle,title=_ref.title,style=_ref.style,cards=_ref.cards;var numberOfCards=useMemo(function(){return cards!==null&&cards!==void 0&&cards.length?\"\".concat(cards.length):'';},[cards===null||cards===void 0?void 0:cards.length]);return/*#__PURE__*/_jsx(S.Header,{onDoubleClick:onDoubleClick,editLaneTitle:editLaneTitle,style:style,children:/*#__PURE__*/_jsx(S.Title,{children:editLaneTitle?/*#__PURE__*/_jsx(InlineInput,{value:title,border:true,placeholder:title,resize:\"vertical\",onSave:updateTitle}):/*#__PURE__*/_jsxs(_Fragment,{children:[title,cards.length?/*#__PURE__*/_jsx(S.Dot,{children:\"\\xB7\"}):'',numberOfCards]})})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/apps/kanban/LaneHeader/LaneHeader.tsx"],"names":["React","useMemo","InlineInput","S","LaneHeader","updateTitle","onDoubleClick","editLaneTitle","title","style","cards","numberOfCards","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,uCAAxB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,qBAAnB,C,6IAYA,MAAO,IAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAO/C,IANJC,CAAAA,WAMI,MANJA,WAMI,CALJC,aAKI,MALJA,aAKI,yBAJJC,aAII,CAJJA,aAII,6BAJY,KAIZ,oBAHJC,KAGI,MAHJA,KAGI,CAFJC,KAEI,MAFJA,KAEI,CADJC,KACI,MADJA,KACI,CACJ,GAAMC,CAAAA,aAAa,CAAGV,OAAO,CAAC,iBAAOS,CAAAA,KAAK,OAAL,EAAAA,KAAK,SAAL,EAAAA,KAAK,CAAEE,MAAP,WAAmBF,KAAK,CAACE,MAAzB,EAAoC,EAA3C,EAAD,CAAiD,CAACF,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEE,MAAR,CAAjD,CAA7B,CACA,mBACE,KAAC,CAAD,CAAG,MAAH,EAAU,aAAa,CAAEN,aAAzB,CAAwC,aAAa,CAAEC,aAAvD,CAAsE,KAAK,CAAEE,KAA7E,uBACE,KAAC,CAAD,CAAG,KAAH,WACGF,aAAa,cACZ,KAAC,WAAD,EAAa,KAAK,CAAEC,KAApB,CAA2B,MAAM,KAAjC,CAAkC,WAAW,CAAEA,KAA/C,CAAsD,MAAM,CAAC,UAA7D,CAAwE,MAAM,CAAEH,WAAhF,EADY,cAGZ,2BACGG,KADH,CAEGE,KAAK,CAACE,MAAN,cAAe,KAAC,CAAD,CAAG,GAAH,mBAAf,CAAkC,EAFrC,CAGGD,aAHH,GAJJ,EADF,EADF,CAeD,CAxBM","sourcesContent":["import React, { useMemo } from 'react';\nimport InlineInput from 'react-trello/dist/widgets/InlineInput';\nimport * as S from './LaneHeader.styles';\nimport { CardState } from '../interfaces';\n\ninterface LaneHeaderProps {\n  updateTitle: () => void;\n  editLaneTitle: boolean;\n  style: CSSStyleSheet;\n  title: string;\n  onDoubleClick: () => void;\n  cards: Array<CardState>;\n}\n\nexport const LaneHeader: React.FC<LaneHeaderProps> = ({\n  updateTitle,\n  onDoubleClick,\n  editLaneTitle = false,\n  title,\n  style,\n  cards,\n}) => {\n  const numberOfCards = useMemo(() => (cards?.length ? `${cards.length}` : ''), [cards?.length]);\n  return (\n    <S.Header onDoubleClick={onDoubleClick} editLaneTitle={editLaneTitle} style={style}>\n      <S.Title>\n        {editLaneTitle ? (\n          <InlineInput value={title} border placeholder={title} resize=\"vertical\" onSave={updateTitle} />\n        ) : (\n          <>\n            {title}\n            {cards.length ? <S.Dot>Â·</S.Dot> : ''}\n            {numberOfCards}\n          </>\n        )}\n      </S.Title>\n    </S.Header>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}