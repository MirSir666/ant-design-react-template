{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/settingsOverlay/ThemePicker/ThemePicker.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MoonSunSwitch } from '@app/components/common/MoonSunSwitch/MoonSunSwitch';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setTheme } from '@app/store/slices/themeSlice';\nimport { setNightMode } from '@app/store/slices/nightModeSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ThemePicker = function ThemePicker() {\n  _s();\n  var dispatch = useAppDispatch();\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var handleClickButton = function handleClickButton(theme) {\n    dispatch(setTheme(theme));\n    dispatch(setNightMode(false));\n  };\n  return /*#__PURE__*/_jsxDEV(MoonSunSwitch, {\n    isMoonActive: theme === 'dark',\n    onClickMoon: function onClickMoon() {\n      return handleClickButton('dark');\n    },\n    onClickSun: function onClickSun() {\n      return handleClickButton('light');\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n_s(ThemePicker, \"HIXSmBRahAF8q4oh6uEvVByPsZc=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = ThemePicker;\nvar _c;\n$RefreshReg$(_c, \"ThemePicker\");","map":{"version":3,"names":["React","MoonSunSwitch","useAppDispatch","useAppSelector","setTheme","setNightMode","ThemePicker","dispatch","theme","state","handleClickButton"],"sources":["/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/settingsOverlay/ThemePicker/ThemePicker.tsx"],"sourcesContent":["import React from 'react';\nimport { MoonSunSwitch } from '@app/components/common/MoonSunSwitch/MoonSunSwitch';\nimport { ThemeType } from '@app/interfaces/interfaces';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setTheme } from '@app/store/slices/themeSlice';\nimport { setNightMode } from '@app/store/slices/nightModeSlice';\n\nexport const ThemePicker: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const handleClickButton = (theme: ThemeType) => {\n    dispatch(setTheme(theme));\n    dispatch(setNightMode(false));\n  };\n\n  return (\n    <MoonSunSwitch\n      isMoonActive={theme === 'dark'}\n      onClickMoon={() => handleClickButton('dark')}\n      onClickSun={() => handleClickButton('light')}\n    />\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,oDAAoD;AAElF,SAASC,cAAc,EAAEC,cAAc,QAAQ,uBAAuB;AACtE,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,YAAY,QAAQ,kCAAkC;AAAC;AAEhE,OAAO,IAAMC,WAAqB,GAAG,SAAxBA,WAAqB,GAAS;EAAA;EACzC,IAAMC,QAAQ,GAAGL,cAAc,EAAE;EACjC,IAAMM,KAAK,GAAGL,cAAc,CAAC,UAACM,KAAK;IAAA,OAAKA,KAAK,CAACD,KAAK,CAACA,KAAK;EAAA,EAAC;EAE1D,IAAME,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIF,KAAgB,EAAK;IAC9CD,QAAQ,CAACH,QAAQ,CAACI,KAAK,CAAC,CAAC;IACzBD,QAAQ,CAACF,YAAY,CAAC,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,oBACE,QAAC,aAAa;IACZ,YAAY,EAAEG,KAAK,KAAK,MAAO;IAC/B,WAAW,EAAE;MAAA,OAAME,iBAAiB,CAAC,MAAM,CAAC;IAAA,CAAC;IAC7C,UAAU,EAAE;MAAA,OAAMA,iBAAiB,CAAC,OAAO,CAAC;IAAA;EAAC;IAAA;IAAA;IAAA;EAAA,SAC7C;AAEN,CAAC;AAAC,GAhBWJ,WAAqB;EAAA,QACfJ,cAAc,EACjBC,cAAc;AAAA;AAAA,KAFjBG,WAAqB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}