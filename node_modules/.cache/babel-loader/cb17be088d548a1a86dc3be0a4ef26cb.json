{"ast":null,"code":"import{useDispatch,useSelector}from'react-redux';// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport var useAppDispatch=function useAppDispatch(){return useDispatch();};export var useAppSelector=useSelector;","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/hooks/reduxHooks.ts"],"names":["useDispatch","useSelector","useAppDispatch","useAppSelector"],"mappings":"AAAA,OAA+BA,WAA/B,CAA4CC,WAA5C,KAA+D,aAA/D,CAGA;AACA;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMF,CAAAA,WAAW,EAAjB,EAAvB,CACP,MAAO,IAAMG,CAAAA,cAA+C,CAAGF,WAAxD","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store/store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"]},"metadata":{},"sourceType":"module"}