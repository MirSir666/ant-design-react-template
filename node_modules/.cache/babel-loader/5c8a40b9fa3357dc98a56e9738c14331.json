{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityStatusFilter/RecentActivityStatusFilter.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { activityStatuses } from '@app/constants/config/activityStatuses';\nimport { Title } from '../RecentActivityFilter.styles';\nimport * as S from './RecentActivityStatusFilter.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var RecentActivityStatusFilter = function RecentActivityStatusFilter(_ref) {\n  _s();\n\n  var filters = _ref.filters,\n      setFilters = _ref.setFilters;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var options = useMemo(function () {\n    return activityStatuses.map(function (status) {\n      return {\n        label: t(status.title),\n        value: status.name\n      };\n    });\n  }, [t]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [20, 20],\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: t('nft.show')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(S.FilterCheckboxGroup, {\n        value: filters.status,\n        options: options,\n        onChange: function onChange(checkedValues) {\n          return setFilters(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              status: checkedValues\n            });\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RecentActivityStatusFilter, \"JR3k4oCpiVIBudJVY/SB7EaovCc=\", false, function () {\n  return [useTranslation];\n});\n\n_c = RecentActivityStatusFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentActivityStatusFilter\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityStatusFilter/RecentActivityStatusFilter.tsx"],"names":["React","useMemo","Col","Row","useTranslation","activityStatuses","Title","S","RecentActivityStatusFilter","filters","setFilters","t","options","map","status","label","title","value","name","checkedValues","prev"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AAEA,SAASC,KAAT,QAAsB,gCAAtB;AACA,OAAO,KAAKC,CAAZ,MAAmB,qCAAnB;;AAOA,OAAO,IAAMC,0BAAqE,GAAG,SAAxEA,0BAAwE,OAA6B;AAAA;;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAChH,wBAAcN,cAAc,EAA5B;AAAA,MAAQO,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,OAAO,GAAGX,OAAO,CACrB;AAAA,WAAMI,gBAAgB,CAACQ,GAAjB,CAAqB,UAACC,MAAD;AAAA,aAAa;AAAEC,QAAAA,KAAK,EAAEJ,CAAC,CAACG,MAAM,CAACE,KAAR,CAAV;AAA0BC,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAAxC,OAAb;AAAA,KAArB,CAAN;AAAA,GADqB,EAErB,CAACP,CAAD,CAFqB,CAAvB;AAKA,sBACE,QAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA,6BACE,QAAC,KAAD;AAAA,kBAAQA,CAAC,CAAC,UAAD;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA,6BACE,QAAC,CAAD,CAAG,mBAAH;AACE,QAAA,KAAK,EAAEF,OAAO,CAACK,MADjB;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,QAAQ,EAAE,kBAACO,aAAD;AAAA,iBACRT,UAAU,CAAC,UAACU,IAAD;AAAA,mDAAgBA,IAAhB;AAAsBN,cAAAA,MAAM,EAAEK;AAA9B;AAAA,WAAD,CADF;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAzBM;;GAAMX,0B;UACGJ,c;;;KADHI,0B","sourcesContent":["import React, { useMemo } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { activityStatuses } from '@app/constants/config/activityStatuses';\nimport { RecentActivityFilterState } from '@app/components/nft-dashboard/recentActivity/RecentActivity';\nimport { Title } from '../RecentActivityFilter.styles';\nimport * as S from './RecentActivityStatusFilter.styles';\n\ninterface RecentActivityStatusFilterProps {\n  filters: RecentActivityFilterState;\n  setFilters: (func: (state: RecentActivityFilterState) => RecentActivityFilterState) => void;\n}\n\nexport const RecentActivityStatusFilter: React.FC<RecentActivityStatusFilterProps> = ({ filters, setFilters }) => {\n  const { t } = useTranslation();\n\n  const options = useMemo(\n    () => activityStatuses.map((status) => ({ label: t(status.title), value: status.name })),\n    [t],\n  );\n\n  return (\n    <Row gutter={[20, 20]}>\n      <Col span={24}>\n        <Title>{t('nft.show')}</Title>\n      </Col>\n\n      <Col span={24}>\n        <S.FilterCheckboxGroup\n          value={filters.status}\n          options={options}\n          onChange={(checkedValues) =>\n            setFilters((prev) => ({ ...prev, status: checkedValues as unknown as string[] }))\n          }\n        />\n      </Col>\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}