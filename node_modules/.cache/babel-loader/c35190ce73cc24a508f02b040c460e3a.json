{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/HeaderFullscreen/HeaderFullscreen.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RequireFullscreen } from '@app/components/common/RequireFullscreen/RequireFullscreen';\nimport { HeaderActionWrapper } from '../../Header.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var HeaderFullscreen = function HeaderFullscreen() {\n  _s();\n  var rootRef = useRef(null);\n  useEffect(function () {\n    rootRef.current = document.getElementById('root');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RequireFullscreen, {\n    component: rootRef,\n    children: function children(isFullscreen) {\n      return /*#__PURE__*/_jsxDEV(HeaderActionWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: isFullscreen ? 'ghost' : 'text',\n          icon: isFullscreen ? /*#__PURE__*/_jsxDEV(FullscreenExitOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 34\n          }, _this) : /*#__PURE__*/_jsxDEV(FullscreenOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 63\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n_s(HeaderFullscreen, \"Bbi/gSzGuaeygbnzN31K04tsrQ0=\");\n_c = HeaderFullscreen;\nvar _c;\n$RefreshReg$(_c, \"HeaderFullscreen\");","map":{"version":3,"names":["React","useEffect","useRef","FullscreenExitOutlined","FullscreenOutlined","Button","RequireFullscreen","HeaderActionWrapper","HeaderFullscreen","rootRef","current","document","getElementById","isFullscreen"],"sources":["/workspace/ant-design-react-template/src/components/header/components/HeaderFullscreen/HeaderFullscreen.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { RequireFullscreen } from '@app/components/common/RequireFullscreen/RequireFullscreen';\nimport { HeaderActionWrapper } from '../../Header.styles';\n\nexport const HeaderFullscreen: React.FC = () => {\n  const rootRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    rootRef.current = document.getElementById('root');\n  }, []);\n\n  return (\n    <RequireFullscreen component={rootRef}>\n      {(isFullscreen) => (\n        <HeaderActionWrapper>\n          <Button\n            type={isFullscreen ? 'ghost' : 'text'}\n            icon={isFullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\n          />\n        </HeaderActionWrapper>\n      )}\n    </RequireFullscreen>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,sBAAsB,EAAEC,kBAAkB,QAAQ,mBAAmB;AAC9E,SAASC,MAAM,QAAQ,8CAA8C;AACrE,SAASC,iBAAiB,QAAQ,4DAA4D;AAC9F,SAASC,mBAAmB,QAAQ,qBAAqB;AAAC;AAE1D,OAAO,IAAMC,gBAA0B,GAAG,SAA7BA,gBAA0B,GAAS;EAAA;EAC9C,IAAMC,OAAO,GAAGP,MAAM,CAAqB,IAAI,CAAC;EAEhDD,SAAS,CAAC,YAAM;IACdQ,OAAO,CAACC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,iBAAiB;IAAC,SAAS,EAAEH,OAAQ;IAAA,UACnC,kBAACI,YAAY;MAAA,oBACZ,QAAC,mBAAmB;QAAA,uBAClB,QAAC,MAAM;UACL,IAAI,EAAEA,YAAY,GAAG,OAAO,GAAG,MAAO;UACtC,IAAI,EAAEA,YAAY,gBAAG,QAAC,sBAAsB;YAAA;YAAA;YAAA;UAAA,SAAG,gBAAG,QAAC,kBAAkB;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA;MACzE;QAAA;QAAA;QAAA;MAAA,SACkB;IAAA;EACvB;IAAA;IAAA;IAAA;EAAA,SACiB;AAExB,CAAC;AAAC,GAnBWL,gBAA0B;AAAA,KAA1BA,gBAA0B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}