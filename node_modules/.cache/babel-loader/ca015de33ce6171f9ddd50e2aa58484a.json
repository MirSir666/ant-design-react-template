{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Priority } from '../constants/enums/priorities';\nexport var getBasicTableData = function getBasicTableData(pagination) {\n  return new Promise(function (res) {\n    setTimeout(function () {\n      res({\n        data: [{\n          key: 1,\n          name: 'John Brown',\n          age: 32,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Architect',\n            priority: Priority.LOW\n          }, {\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 2,\n          name: 'Jim Green',\n          age: 42,\n          address: 'London No. 1 Lake Park',\n          tags: [{\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 3,\n          name: 'Joe Black',\n          age: 32,\n          address: 'Sidney No. 1 Lake Park',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.INFO\n          }, {\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 4,\n          name: 'Pavel Green',\n          age: 30,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }, {\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 5,\n          name: 'Alex Brown',\n          age: 26,\n          address: 'Minsk',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 6,\n          name: 'Josh Black',\n          age: 21,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Teacher',\n            priority: Priority.INFO\n          }, {\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 7,\n          name: 'Cris Green',\n          age: 22,\n          address: 'Sidney No. 1 Lake Park',\n          tags: [{\n            value: 'Architect',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 8,\n          name: 'Jaime Black',\n          age: 23,\n          address: 'New York No. 1 Lake Park',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 9,\n          name: 'Alina Brown',\n          age: 19,\n          address: 'Minsk',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 10,\n          name: 'Cris Brown',\n          age: 25,\n          address: 'London',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 11,\n          name: 'Alina Fens',\n          age: 19,\n          address: 'Minsk',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 12,\n          name: 'Alex Snak',\n          age: 28,\n          address: 'Brest',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 13,\n          name: 'Pavel Dubrouski',\n          age: 26,\n          address: 'Minsk',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }, {\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 14,\n          name: 'Jack Donald',\n          age: 24,\n          address: 'New York',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }]\n        }, {\n          key: 15,\n          name: 'Nik Nest',\n          age: 34,\n          address: 'London',\n          tags: [{\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }, {\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }]\n        }, {\n          key: 16,\n          name: 'Zak Nikls',\n          age: 32,\n          address: 'Minsk',\n          tags: [{\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 17,\n          name: 'Petr Dan',\n          age: 29,\n          address: 'Gomel',\n          tags: [{\n            value: 'Engineer',\n            priority: Priority.MEDIUM\n          }, {\n            value: 'Teacher',\n            priority: Priority.INFO\n          }]\n        }, {\n          key: 18,\n          name: 'Alexa Pirs',\n          age: 19,\n          address: 'Moscow',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 19,\n          name: 'Mark Brown',\n          age: 25,\n          address: 'London',\n          tags: [{\n            value: 'Teacher',\n            priority: Priority.INFO\n          }, {\n            value: 'Doctor',\n            priority: Priority.HIGH\n          }]\n        }, {\n          key: 20,\n          name: 'Alex Brons',\n          age: 45,\n          address: 'Bronx',\n          tags: [{\n            value: 'Professor',\n            priority: Priority.LOW\n          }]\n        }],\n        pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n          total: 20\n        })\n      });\n    }, 1000);\n  });\n};\nexport var getTreeTableData = function getTreeTableData(pagination) {\n  return new Promise(function (res) {\n    setTimeout(function () {\n      res({\n        data: [{\n          key: 1,\n          name: 'John Brown sr.',\n          age: 60,\n          address: 'New York No. 1 Lake Park',\n          children: [{\n            key: 11,\n            name: 'John Brown',\n            age: 42,\n            address: 'New York No. 2 Lake Park'\n          }, {\n            key: 12,\n            name: 'John Brown jr.',\n            age: 30,\n            address: 'New York No. 3 Lake Park',\n            children: [{\n              key: 121,\n              name: 'Jimmy Brown',\n              age: 16,\n              address: 'New York No. 3 Lake Park'\n            }]\n          }, {\n            key: 13,\n            name: 'Jim Green sr.',\n            age: 72,\n            address: 'London No. 1 Lake Park',\n            children: [{\n              key: 131,\n              name: 'Jim Green',\n              age: 42,\n              address: 'London No. 2 Lake Park',\n              children: [{\n                key: 1311,\n                name: 'Jim Green jr.',\n                age: 25,\n                address: 'London No. 3 Lake Park'\n              }, {\n                key: 1312,\n                name: 'Jimmy Green sr.',\n                age: 18,\n                address: 'London No. 4 Lake Park'\n              }]\n            }]\n          }]\n        }, {\n          key: 200,\n          name: 'Joe Black',\n          age: 32,\n          address: 'Sidney No. 1 Lake Park',\n          children: [{\n            key: 201,\n            name: 'Joe Green',\n            age: 42,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 202,\n              name: 'Joe Green jr.',\n              age: 25,\n              address: 'London No. 3 Lake Park'\n            }, {\n              key: 203,\n              name: 'Joe Green sr.',\n              age: 18,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 300,\n          name: 'Jaime Black',\n          age: 22,\n          address: 'Sidney No. 1 Lake Park',\n          children: [{\n            key: 301,\n            name: 'Jaime Green',\n            age: 52,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 302,\n              name: 'Jaime Green jr.',\n              age: 21,\n              address: 'London No. 3 Lake Park'\n            }, {\n              key: 303,\n              name: 'Jaime Green sr.',\n              age: 18,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 400,\n          name: 'Pavel Brown',\n          age: 26,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 401,\n            name: 'Pavel Brown',\n            age: 22,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 402,\n              name: 'Pavel Brown jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 403,\n              name: 'Pavel Brown sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 500,\n          name: 'Alex Nickls',\n          age: 45,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 501,\n            name: 'Marta Nickls',\n            age: 25,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 502,\n              name: 'Pavel Nickls jr.',\n              age: 12,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 503,\n              name: 'Alina Nickls sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 600,\n          name: 'Nick Donald',\n          age: 45,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 601,\n            name: 'Alexsa Donald',\n            age: 34,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 602,\n              name: 'Marta Donald jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 603,\n              name: 'Alex Donald sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 700,\n          name: 'Jo Snider',\n          age: 26,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 701,\n            name: 'Jo Snider',\n            age: 22,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 702,\n              name: 'Jaems Snider jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 703,\n              name: 'Jin Snider sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }, {\n          key: 800,\n          name: 'Jon Brown',\n          age: 26,\n          address: 'London No. 2 Lake Park',\n          children: [{\n            key: 801,\n            name: 'Kitana Brown',\n            age: 22,\n            address: 'London No. 2 Lake Park',\n            children: [{\n              key: 802,\n              name: 'Cris Brown jr.',\n              age: 24,\n              address: 'London No. 1 Lake Park'\n            }, {\n              key: 803,\n              name: 'Jon Brown sr.',\n              age: 19,\n              address: 'London No. 4 Lake Park'\n            }]\n          }]\n        }],\n        pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n          total: 8\n        })\n      });\n    }, 1000);\n  });\n};\nexport var getEditableTableData = function getEditableTableData(pagination) {\n  return new Promise(function (res) {\n    setTimeout(function () {\n      res({\n        data: [{\n          key: 1,\n          name: \"Edward\",\n          age: 32,\n          address: \"London Park no.1\"\n        }, {\n          key: 2,\n          name: \"Alex\",\n          age: 45,\n          address: \"London Park no.2\"\n        }, {\n          key: 3,\n          name: \"Niko\",\n          age: 21,\n          address: \"London Park no.3\"\n        }, {\n          key: 4,\n          name: \"Josh\",\n          age: 18,\n          address: \"London Park no.4\"\n        }, {\n          key: 5,\n          name: \"Jo\",\n          age: 15,\n          address: \"Minsk Park no.1\"\n        }, {\n          key: 6,\n          name: \"Jaimi\",\n          age: 18,\n          address: \"London Park no.2\"\n        }, {\n          key: 7,\n          name: \"Alexa\",\n          age: 24,\n          address: \"London Park no.6\"\n        }, {\n          key: 8,\n          name: \"Donald\",\n          age: 27,\n          address: \"London Park no.7\"\n        }, {\n          key: 9,\n          name: \"Pavel\",\n          age: 17,\n          address: \"London Park no.9\"\n        }, {\n          key: 10,\n          name: \"Nick\",\n          age: 18,\n          address: \"London Park no.1\"\n        }, {\n          key: 11,\n          name: \"Dasha\",\n          age: 25,\n          address: \"London Park no.2\"\n        }, {\n          key: 12,\n          name: \"Alex\",\n          age: 27,\n          address: \"London Park no.3\"\n        }, {\n          key: 13,\n          name: \"Vic\",\n          age: 29,\n          address: \"London Park no.2\"\n        }, {\n          key: 14,\n          name: \"Natalia\",\n          age: 25,\n          address: \"London Park no.4\"\n        }, {\n          key: 15,\n          name: \"Zack\",\n          age: 27,\n          address: \"London Park no.1\"\n        }, {\n          key: 16,\n          name: \"Jack\",\n          age: 31,\n          address: \"London Park no.4\"\n        }],\n        pagination: _objectSpread(_objectSpread({}, pagination), {}, {\n          total: 16\n        })\n      });\n    }, 1000);\n  });\n};","map":{"version":3,"names":["Priority","getBasicTableData","pagination","Promise","res","setTimeout","data","key","name","age","address","tags","value","priority","LOW","MEDIUM","HIGH","INFO","total","getTreeTableData","children","getEditableTableData"],"sources":["/workspace/ant-design-react-template/src/api/table.api.ts"],"sourcesContent":["import { Priority } from '../constants/enums/priorities';\n\nexport interface Tag {\n  value: string;\n  priority: Priority;\n}\n\nexport interface BasicTableRow {\n  key: number;\n  name: string;\n  age: number;\n  address: string;\n  tags?: Tag[];\n}\n\nexport interface Pagination {\n  current?: number;\n  pageSize?: number;\n  total?: number;\n}\n\nexport interface BasicTableData {\n  data: BasicTableRow[];\n  pagination: Pagination;\n}\n\nexport interface TreeTableRow extends BasicTableRow {\n  children?: TreeTableRow[];\n}\n\nexport interface TreeTableData extends BasicTableData {\n  data: TreeTableRow[];\n}\n\nexport interface EditableTableData extends BasicTableData {\n  data: BasicTableRow[];\n}\n\nexport const getBasicTableData = (pagination: Pagination): Promise<BasicTableData> => {\n  return new Promise((res) => {\n    setTimeout(() => {\n      res({\n        data: [\n          {\n            key: 1,\n            name: 'John Brown',\n            age: 32,\n            address: 'New York No. 1 Lake Park',\n            tags: [\n              { value: 'Architect', priority: Priority.LOW },\n              { value: 'Engineer', priority: Priority.MEDIUM },\n            ],\n          },\n          {\n            key: 2,\n            name: 'Jim Green',\n            age: 42,\n            address: 'London No. 1 Lake Park',\n            tags: [{ value: 'Doctor', priority: Priority.HIGH }],\n          },\n          {\n            key: 3,\n            name: 'Joe Black',\n            age: 32,\n            address: 'Sidney No. 1 Lake Park',\n            tags: [\n              { value: 'Professor', priority: Priority.INFO },\n              { value: 'Architect', priority: Priority.LOW },\n            ],\n          },\n          {\n            key: 4,\n            name: 'Pavel Green',\n            age: 30,\n            address: 'New York No. 1 Lake Park',\n            tags: [\n              { value: 'Engineer', priority: Priority.MEDIUM },\n              { value: 'Architect', priority: Priority.LOW },\n            ],\n          },\n          {\n            key: 5,\n            name: 'Alex Brown',\n            age: 26,\n            address: 'Minsk',\n            tags: [{ value: 'Engineer', priority: Priority.MEDIUM }],\n          },\n          {\n            key: 6,\n            name: 'Josh Black',\n            age: 21,\n            address: 'New York No. 1 Lake Park',\n            tags: [\n              { value: 'Teacher', priority: Priority.INFO },\n              { value: 'Architect', priority: Priority.LOW },\n            ],\n          },\n          {\n            key: 7,\n            name: 'Cris Green',\n            age: 22,\n            address: 'Sidney No. 1 Lake Park',\n            tags: [{ value: 'Architect', priority: Priority.LOW }],\n          },\n          {\n            key: 8,\n            name: 'Jaime Black',\n            age: 23,\n            address: 'New York No. 1 Lake Park',\n            tags: [{ value: 'Engineer', priority: Priority.MEDIUM }],\n          },\n          {\n            key: 9,\n            name: 'Alina Brown',\n            age: 19,\n            address: 'Minsk',\n            tags: [\n              { value: 'Professor', priority: Priority.LOW },\n              { value: 'Teacher', priority: Priority.INFO },\n            ],\n          },\n          {\n            key: 10,\n            name: 'Cris Brown',\n            age: 25,\n            address: 'London',\n            tags: [\n              { value: 'Engineer', priority: Priority.MEDIUM },\n              { value: 'Teacher', priority: Priority.INFO },\n            ],\n          },\n          {\n            key: 11,\n            name: 'Alina Fens',\n            age: 19,\n            address: 'Minsk',\n            tags: [\n              { value: 'Professor', priority: Priority.LOW },\n              { value: 'Teacher', priority: Priority.INFO },\n            ],\n          },\n          {\n            key: 12,\n            name: 'Alex Snak',\n            age: 28,\n            address: 'Brest',\n            tags: [\n              { value: 'Professor', priority: Priority.LOW },\n              { value: 'Doctor', priority: Priority.HIGH },\n            ],\n          },\n          {\n            key: 13,\n            name: 'Pavel Dubrouski',\n            age: 26,\n            address: 'Minsk',\n            tags: [\n              { value: 'Professor', priority: Priority.LOW },\n              { value: 'Doctor', priority: Priority.HIGH },\n              { value: 'Teacher', priority: Priority.INFO },\n              { value: 'Engineer', priority: Priority.MEDIUM },\n            ],\n          },\n          {\n            key: 14,\n            name: 'Jack Donald',\n            age: 24,\n            address: 'New York',\n            tags: [{ value: 'Professor', priority: Priority.LOW }],\n          },\n          {\n            key: 15,\n            name: 'Nik Nest',\n            age: 34,\n            address: 'London',\n            tags: [\n              { value: 'Doctor', priority: Priority.HIGH },\n              { value: 'Engineer', priority: Priority.MEDIUM },\n            ],\n          },\n          {\n            key: 16,\n            name: 'Zak Nikls',\n            age: 32,\n            address: 'Minsk',\n            tags: [\n              { value: 'Doctor', priority: Priority.HIGH },\n              { value: 'Teacher', priority: Priority.INFO },\n            ],\n          },\n          {\n            key: 17,\n            name: 'Petr Dan',\n            age: 29,\n            address: 'Gomel',\n            tags: [\n              { value: 'Engineer', priority: Priority.MEDIUM },\n              { value: 'Teacher', priority: Priority.INFO },\n            ],\n          },\n          {\n            key: 18,\n            name: 'Alexa Pirs',\n            age: 19,\n            address: 'Moscow',\n            tags: [\n              { value: 'Professor', priority: Priority.LOW },\n              { value: 'Doctor', priority: Priority.HIGH },\n            ],\n          },\n          {\n            key: 19,\n            name: 'Mark Brown',\n            age: 25,\n            address: 'London',\n            tags: [\n              { value: 'Teacher', priority: Priority.INFO },\n              { value: 'Doctor', priority: Priority.HIGH },\n            ],\n          },\n          {\n            key: 20,\n            name: 'Alex Brons',\n            age: 45,\n            address: 'Bronx',\n            tags: [{ value: 'Professor', priority: Priority.LOW }],\n          },\n        ],\n        pagination: { ...pagination, total: 20 },\n      });\n    }, 1000);\n  });\n};\n\nexport const getTreeTableData = (pagination: Pagination): Promise<TreeTableData> => {\n  return new Promise((res) => {\n    setTimeout(() => {\n      res({\n        data: [\n          {\n            key: 1,\n            name: 'John Brown sr.',\n            age: 60,\n            address: 'New York No. 1 Lake Park',\n            children: [\n              {\n                key: 11,\n                name: 'John Brown',\n                age: 42,\n                address: 'New York No. 2 Lake Park',\n              },\n              {\n                key: 12,\n                name: 'John Brown jr.',\n                age: 30,\n                address: 'New York No. 3 Lake Park',\n                children: [\n                  {\n                    key: 121,\n                    name: 'Jimmy Brown',\n                    age: 16,\n                    address: 'New York No. 3 Lake Park',\n                  },\n                ],\n              },\n              {\n                key: 13,\n                name: 'Jim Green sr.',\n                age: 72,\n                address: 'London No. 1 Lake Park',\n                children: [\n                  {\n                    key: 131,\n                    name: 'Jim Green',\n                    age: 42,\n                    address: 'London No. 2 Lake Park',\n                    children: [\n                      {\n                        key: 1311,\n                        name: 'Jim Green jr.',\n                        age: 25,\n                        address: 'London No. 3 Lake Park',\n                      },\n                      {\n                        key: 1312,\n                        name: 'Jimmy Green sr.',\n                        age: 18,\n                        address: 'London No. 4 Lake Park',\n                      },\n                    ],\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            key: 200,\n            name: 'Joe Black',\n            age: 32,\n            address: 'Sidney No. 1 Lake Park',\n            children: [\n              {\n                key: 201,\n                name: 'Joe Green',\n                age: 42,\n                address: 'London No. 2 Lake Park',\n                children: [\n                  {\n                    key: 202,\n                    name: 'Joe Green jr.',\n                    age: 25,\n                    address: 'London No. 3 Lake Park',\n                  },\n                  {\n                    key: 203,\n                    name: 'Joe Green sr.',\n                    age: 18,\n                    address: 'London No. 4 Lake Park',\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            key: 300,\n            name: 'Jaime Black',\n            age: 22,\n            address: 'Sidney No. 1 Lake Park',\n            children: [\n              {\n                key: 301,\n                name: 'Jaime Green',\n                age: 52,\n                address: 'London No. 2 Lake Park',\n                children: [\n                  {\n                    key: 302,\n                    name: 'Jaime Green jr.',\n                    age: 21,\n                    address: 'London No. 3 Lake Park',\n                  },\n                  {\n                    key: 303,\n                    name: 'Jaime Green sr.',\n                    age: 18,\n                    address: 'London No. 4 Lake Park',\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            key: 400,\n            name: 'Pavel Brown',\n            age: 26,\n            address: 'London No. 2 Lake Park',\n            children: [\n              {\n                key: 401,\n                name: 'Pavel Brown',\n                age: 22,\n                address: 'London No. 2 Lake Park',\n                children: [\n                  {\n                    key: 402,\n                    name: 'Pavel Brown jr.',\n                    age: 24,\n                    address: 'London No. 1 Lake Park',\n                  },\n                  {\n                    key: 403,\n                    name: 'Pavel Brown sr.',\n                    age: 19,\n                    address: 'London No. 4 Lake Park',\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            key: 500,\n            name: 'Alex Nickls',\n            age: 45,\n            address: 'London No. 2 Lake Park',\n            children: [\n              {\n                key: 501,\n                name: 'Marta Nickls',\n                age: 25,\n                address: 'London No. 2 Lake Park',\n                children: [\n                  {\n                    key: 502,\n                    name: 'Pavel Nickls jr.',\n                    age: 12,\n                    address: 'London No. 1 Lake Park',\n                  },\n                  {\n                    key: 503,\n                    name: 'Alina Nickls sr.',\n                    age: 19,\n                    address: 'London No. 4 Lake Park',\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            key: 600,\n            name: 'Nick Donald',\n            age: 45,\n            address: 'London No. 2 Lake Park',\n            children: [\n              {\n                key: 601,\n                name: 'Alexsa Donald',\n                age: 34,\n                address: 'London No. 2 Lake Park',\n                children: [\n                  {\n                    key: 602,\n                    name: 'Marta Donald jr.',\n                    age: 24,\n                    address: 'London No. 1 Lake Park',\n                  },\n                  {\n                    key: 603,\n                    name: 'Alex Donald sr.',\n                    age: 19,\n                    address: 'London No. 4 Lake Park',\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            key: 700,\n            name: 'Jo Snider',\n            age: 26,\n            address: 'London No. 2 Lake Park',\n            children: [\n              {\n                key: 701,\n                name: 'Jo Snider',\n                age: 22,\n                address: 'London No. 2 Lake Park',\n                children: [\n                  {\n                    key: 702,\n                    name: 'Jaems Snider jr.',\n                    age: 24,\n                    address: 'London No. 1 Lake Park',\n                  },\n                  {\n                    key: 703,\n                    name: 'Jin Snider sr.',\n                    age: 19,\n                    address: 'London No. 4 Lake Park',\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            key: 800,\n            name: 'Jon Brown',\n            age: 26,\n            address: 'London No. 2 Lake Park',\n            children: [\n              {\n                key: 801,\n                name: 'Kitana Brown',\n                age: 22,\n                address: 'London No. 2 Lake Park',\n                children: [\n                  {\n                    key: 802,\n                    name: 'Cris Brown jr.',\n                    age: 24,\n                    address: 'London No. 1 Lake Park',\n                  },\n                  {\n                    key: 803,\n                    name: 'Jon Brown sr.',\n                    age: 19,\n                    address: 'London No. 4 Lake Park',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        pagination: { ...pagination, total: 8 },\n      });\n    }, 1000);\n  });\n};\n\nexport const getEditableTableData = (pagination: Pagination): Promise<EditableTableData> => {\n  return new Promise((res) => {\n    setTimeout(() => {\n      res({\n        data: [\n          {\n            key: 1,\n            name: `Edward`,\n            age: 32,\n            address: `London Park no.1`,\n          },\n          {\n            key: 2,\n            name: `Alex`,\n            age: 45,\n            address: `London Park no.2`,\n          },\n          {\n            key: 3,\n            name: `Niko`,\n            age: 21,\n            address: `London Park no.3`,\n          },\n          {\n            key: 4,\n            name: `Josh`,\n            age: 18,\n            address: `London Park no.4`,\n          },\n          {\n            key: 5,\n            name: `Jo`,\n            age: 15,\n            address: `Minsk Park no.1`,\n          },\n          {\n            key: 6,\n            name: `Jaimi`,\n            age: 18,\n            address: `London Park no.2`,\n          },\n          {\n            key: 7,\n            name: `Alexa`,\n            age: 24,\n            address: `London Park no.6`,\n          },\n          {\n            key: 8,\n            name: `Donald`,\n            age: 27,\n            address: `London Park no.7`,\n          },\n          {\n            key: 9,\n            name: `Pavel`,\n            age: 17,\n            address: `London Park no.9`,\n          },\n          {\n            key: 10,\n            name: `Nick`,\n            age: 18,\n            address: `London Park no.1`,\n          },\n          {\n            key: 11,\n            name: `Dasha`,\n            age: 25,\n            address: `London Park no.2`,\n          },\n          {\n            key: 12,\n            name: `Alex`,\n            age: 27,\n            address: `London Park no.3`,\n          },\n          {\n            key: 13,\n            name: `Vic`,\n            age: 29,\n            address: `London Park no.2`,\n          },\n          {\n            key: 14,\n            name: `Natalia`,\n            age: 25,\n            address: `London Park no.4`,\n          },\n          {\n            key: 15,\n            name: `Zack`,\n            age: 27,\n            address: `London Park no.1`,\n          },\n          {\n            key: 16,\n            name: `Jack`,\n            age: 31,\n            address: `London Park no.4`,\n          },\n        ],\n        pagination: { ...pagination, total: 16 },\n      });\n    }, 1000);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}