{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/settingsOverlay/nightModeSettings/NightModeSettings.tsx\",\n  _this = this,\n  _s = $RefreshSig$(),\n  _templateObject;\nimport React from 'react';\nimport { NightTimePicker } from './NightTimePicker/NightTimePicker';\nimport { Switch } from '@app/components/common/Switch/Switch';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setNightMode, setNightTime } from '@app/store/slices/nightModeSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var NightModeSettings = function NightModeSettings() {\n  _s();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var dispatch = useAppDispatch();\n  var nightModeState = useAppSelector(function (state) {\n    return state.nightMode;\n  });\n  var isNightMode = nightModeState.isNightMode;\n  var nightTime = nightModeState.nightTime;\n  var handleChange = function handleChange(isNightMode) {\n    dispatch(setNightMode(isNightMode));\n  };\n  var handleNightTime = function handleNightTime(nightTime) {\n    dispatch(setNightTime(nightTime));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwitchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: t('common.auto')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n        checkedChildren: \"On\",\n        unCheckedChildren: \"Off\",\n        checked: isNightMode,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), isNightMode && /*#__PURE__*/_jsxDEV(NightTimePicker, {\n      nightTime: nightTime,\n      setNightTime: handleNightTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, _this)]\n  }, void 0, true);\n};\n_s(NightModeSettings, \"b767xlPBzJpyZB3f52t6MjB9xik=\", false, function () {\n  return [useTranslation, useAppDispatch, useAppSelector];\n});\n_c = NightModeSettings;\nexport var SwitchContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\"])));\n_c2 = SwitchContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"NightModeSettings\");\n$RefreshReg$(_c2, \"SwitchContainer\");","map":{"version":3,"names":["React","NightTimePicker","Switch","styled","useTranslation","useAppDispatch","useAppSelector","setNightMode","setNightTime","NightModeSettings","t","dispatch","nightModeState","state","nightMode","isNightMode","nightTime","handleChange","handleNightTime","SwitchContainer","div"],"sources":["/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/settingsOverlay/nightModeSettings/NightModeSettings.tsx"],"sourcesContent":["import React from 'react';\nimport { NightTimePicker } from './NightTimePicker/NightTimePicker';\nimport { Switch } from '@app/components/common/Switch/Switch';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setNightMode, setNightTime } from '@app/store/slices/nightModeSlice';\n\nexport const NightModeSettings: React.FC = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useAppDispatch();\n  const nightModeState = useAppSelector((state) => state.nightMode);\n  const isNightMode = nightModeState.isNightMode;\n  const nightTime = nightModeState.nightTime;\n\n  const handleChange = (isNightMode: boolean) => {\n    dispatch(setNightMode(isNightMode));\n  };\n\n  const handleNightTime = (nightTime: number[]) => {\n    dispatch(setNightTime(nightTime));\n  };\n\n  return (\n    <>\n      <SwitchContainer>\n        <span>{t('common.auto')}</span>\n        <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\" checked={isNightMode} onChange={handleChange} />\n      </SwitchContainer>\n      {isNightMode && <NightTimePicker nightTime={nightTime} setNightTime={handleNightTime} />}\n    </>\n  );\n};\n\nexport const SwitchContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,MAAM,QAAQ,sCAAsC;AAC7D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,cAAc,EAAEC,cAAc,QAAQ,uBAAuB;AACtE,SAASC,YAAY,EAAEC,YAAY,QAAQ,kCAAkC;AAAC;AAAA;AAE9E,OAAO,IAAMC,iBAA2B,GAAG,SAA9BA,iBAA2B,GAAS;EAAA;EAC/C,sBAAcL,cAAc,EAAE;IAAtBM,CAAC,mBAADA,CAAC;EAET,IAAMC,QAAQ,GAAGN,cAAc,EAAE;EACjC,IAAMO,cAAc,GAAGN,cAAc,CAAC,UAACO,KAAK;IAAA,OAAKA,KAAK,CAACC,SAAS;EAAA,EAAC;EACjE,IAAMC,WAAW,GAAGH,cAAc,CAACG,WAAW;EAC9C,IAAMC,SAAS,GAAGJ,cAAc,CAACI,SAAS;EAE1C,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIF,WAAoB,EAAK;IAC7CJ,QAAQ,CAACJ,YAAY,CAACQ,WAAW,CAAC,CAAC;EACrC,CAAC;EAED,IAAMG,eAAe,GAAG,SAAlBA,eAAe,CAAIF,SAAmB,EAAK;IAC/CL,QAAQ,CAACH,YAAY,CAACQ,SAAS,CAAC,CAAC;EACnC,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,eAAe;MAAA,wBACd;QAAA,UAAON,CAAC,CAAC,aAAa;MAAC;QAAA;QAAA;QAAA;MAAA,SAAQ,eAC/B,QAAC,MAAM;QAAC,eAAe,EAAC,IAAI;QAAC,iBAAiB,EAAC,KAAK;QAAC,OAAO,EAAEK,WAAY;QAAC,QAAQ,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,SAAG;IAAA;MAAA;MAAA;MAAA;IAAA,SACrF,EACjBF,WAAW,iBAAI,QAAC,eAAe;MAAC,SAAS,EAAEC,SAAU;MAAC,YAAY,EAAEE;IAAgB;MAAA;MAAA;MAAA;IAAA,SAAG;EAAA,gBACvF;AAEP,CAAC;AAAC,GAzBWT,iBAA2B;EAAA,QACxBL,cAAc,EAEXC,cAAc,EACRC,cAAc;AAAA;AAAA,KAJ1BG,iBAA2B;AA2BxC,OAAO,IAAMU,eAAe,GAAGhB,MAAM,CAACiB,GAAG,4HAGxC;AAAC,MAHWD,eAAe;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}