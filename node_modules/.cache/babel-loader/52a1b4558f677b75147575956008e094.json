{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/header/components/settingsDropdown/SettingsDropdown.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { HeaderActionWrapper } from '@app/components/header/Header.styles';\nimport { SettingsOverlay } from './settingsOverlay/SettingsOverlay/SettingsOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var SettingsDropdown = function SettingsDropdown() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpened = _useState2[0],\n      setOpened = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    overlay: /*#__PURE__*/_jsxDEV(SettingsOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 24\n    }, _this),\n    trigger: ['click'],\n    onVisibleChange: setOpened,\n    children: /*#__PURE__*/_jsxDEV(HeaderActionWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: isOpened ? 'ghost' : 'text',\n        icon: /*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 58\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SettingsDropdown, \"WWUtLdQ/RY5dBKZJHZe9zCNFrvE=\");\n\n_c = SettingsDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsDropdown\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/header/components/settingsDropdown/SettingsDropdown.tsx"],"names":["React","useState","SettingOutlined","Dropdown","Button","HeaderActionWrapper","SettingsOverlay","SettingsDropdown","isOpened","setOpened"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,QAAT,QAAyB,0CAAzB;AACA,SAASC,MAAT,QAAuB,8CAAvB;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAASC,eAAT,QAAgC,mDAAhC;;AAEA,OAAO,IAAMC,gBAA0B,GAAG,SAA7BA,gBAA6B,GAAM;AAAA;;AAC9C,kBAA8BN,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,SAAjB;;AAEA,sBACE,QAAC,QAAD;AAAU,IAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,aAAnB;AAAwC,IAAA,OAAO,EAAE,CAAC,OAAD,CAAjD;AAA4D,IAAA,eAAe,EAAEA,SAA7E;AAAA,2BACE,QAAC,mBAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAED,QAAQ,GAAG,OAAH,GAAa,MAAnC;AAA2C,QAAA,IAAI,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAVM;;GAAMD,gB;;KAAAA,gB","sourcesContent":["import React, { useState } from 'react';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { HeaderActionWrapper } from '@app/components/header/Header.styles';\nimport { SettingsOverlay } from './settingsOverlay/SettingsOverlay/SettingsOverlay';\n\nexport const SettingsDropdown: React.FC = () => {\n  const [isOpened, setOpened] = useState(false);\n\n  return (\n    <Dropdown overlay={<SettingsOverlay />} trigger={['click']} onVisibleChange={setOpened}>\n      <HeaderActionWrapper>\n        <Button type={isOpened ? 'ghost' : 'text'} icon={<SettingOutlined />} />\n      </HeaderActionWrapper>\n    </Dropdown>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}