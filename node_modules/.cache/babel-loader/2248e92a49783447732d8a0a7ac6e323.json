{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recently-added/RecentlyAddedNft.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport { Carousel } from '@app/components/common/Carousel/Carousel';\nimport { NFTCardHeader } from '@app/components/nft-dashboard/common/NFTCardHeader/NFTCardHeader';\nimport { ViewAll } from '@app/components/nft-dashboard/common/ViewAll/ViewAll';\nimport { NftCard } from '@app/components/nft-dashboard/recently-added/nft-card/NftCard';\nimport { getRecentlyAddedNfts } from '@app/api/nftDashboard.api';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport * as S from './RecentlyAddedNft.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var RecentlyAddedNft = function RecentlyAddedNft() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      nfts = _useState2[0],\n      setNfts = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useResponsive = useResponsive(),\n      mobileOnly = _useResponsive.mobileOnly,\n      isTablet = _useResponsive.isTablet;\n\n  useEffect(function () {\n    getRecentlyAddedNfts().then(function (result) {\n      setNfts(result);\n    });\n  }, []);\n  var cards = useMemo(function () {\n    return {\n      mobile: nfts.slice(0, 3).map(function (nft) {\n        return /*#__PURE__*/_jsxDEV(NftCard, {\n          nftItem: nft\n        }, nft.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 45\n        }, _this);\n      }),\n      tablet: nfts.map(function (nft) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(S.CardWrapper, {\n            children: /*#__PURE__*/_jsxDEV(NftCard, {\n              nftItem: nft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, _this)\n        }, nft.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, _this);\n      })\n    };\n  }, [nfts]); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var sliderRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NFTCardHeader, {\n      title: t('nft.recentlyAddedNFTs'),\n      children: isTablet && /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(ViewAll, {\n            bordered: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(S.ArrowBtn, {\n            type: \"text\",\n            size: \"small\",\n            onClick: function onClick() {\n              return sliderRef.current && sliderRef.current.slickPrev();\n            },\n            children: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(S.ArrowBtn, {\n            type: \"text\",\n            size: \"small\",\n            onClick: function onClick() {\n              return sliderRef.current && sliderRef.current.slickNext();\n            },\n            children: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.SectionWrapper, {\n      children: [mobileOnly && cards.mobile, isTablet && nfts.length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n        ref: sliderRef,\n        slidesToShow: 3,\n        responsive: [{\n          breakpoint: 1900,\n          settings: {\n            slidesToShow: 2\n          }\n        }],\n        children: cards.tablet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), mobileOnly && /*#__PURE__*/_jsxDEV(S.ViewAllWrapper, {\n      children: /*#__PURE__*/_jsxDEV(ViewAll, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(RecentlyAddedNft, \"7CMyseCsxxQiJe2BEaRWOnzyKnE=\", false, function () {\n  return [useTranslation, useResponsive];\n});\n\n_c = RecentlyAddedNft;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentlyAddedNft\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recently-added/RecentlyAddedNft.tsx"],"names":["React","useEffect","useMemo","useRef","useState","useTranslation","Col","Row","LeftOutlined","RightOutlined","Carousel","NFTCardHeader","ViewAll","NftCard","getRecentlyAddedNfts","useResponsive","S","RecentlyAddedNft","nfts","setNfts","t","mobileOnly","isTablet","then","result","cards","mobile","slice","map","nft","title","tablet","sliderRef","current","slickPrev","slickNext","length","breakpoint","settings","slidesToShow"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport { Carousel } from '@app/components/common/Carousel/Carousel';\nimport { NFTCardHeader } from '@app/components/nft-dashboard/common/NFTCardHeader/NFTCardHeader';\nimport { ViewAll } from '@app/components/nft-dashboard/common/ViewAll/ViewAll';\nimport { NftCard } from '@app/components/nft-dashboard/recently-added/nft-card/NftCard';\nimport { getRecentlyAddedNfts, NftItem } from '@app/api/nftDashboard.api';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport * as S from './RecentlyAddedNft.styles';\n\nexport const RecentlyAddedNft: React.FC = () => {\n  const [nfts, setNfts] = useState<NftItem[]>([]);\n\n  const { t } = useTranslation();\n  const { mobileOnly, isTablet } = useResponsive();\n\n  useEffect(() => {\n    getRecentlyAddedNfts().then((result) => {\n      setNfts(result);\n    });\n  }, []);\n\n  const cards = useMemo(() => {\n    return {\n      mobile: nfts.slice(0, 3).map((nft) => <NftCard key={nft.title} nftItem={nft} />),\n      tablet: nfts.map((nft) => (\n        <div key={nft.title}>\n          <S.CardWrapper>\n            <NftCard nftItem={nft} />\n          </S.CardWrapper>\n        </div>\n      )),\n    };\n  }, [nfts]);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sliderRef = useRef<any>();\n\n  return (\n    <>\n      <NFTCardHeader title={t('nft.recentlyAddedNFTs')}>\n        {isTablet && (\n          <Row align=\"middle\">\n            <Col>\n              <ViewAll bordered={false} />\n            </Col>\n\n            <Col>\n              <S.ArrowBtn type=\"text\" size=\"small\" onClick={() => sliderRef.current && sliderRef.current.slickPrev()}>\n                <LeftOutlined />\n              </S.ArrowBtn>\n            </Col>\n\n            <Col>\n              <S.ArrowBtn type=\"text\" size=\"small\" onClick={() => sliderRef.current && sliderRef.current.slickNext()}>\n                <RightOutlined />\n              </S.ArrowBtn>\n            </Col>\n          </Row>\n        )}\n      </NFTCardHeader>\n\n      <S.SectionWrapper>\n        {mobileOnly && cards.mobile}\n\n        {isTablet && nfts.length > 0 && (\n          <Carousel\n            ref={sliderRef}\n            slidesToShow={3}\n            responsive={[\n              {\n                breakpoint: 1900,\n                settings: {\n                  slidesToShow: 2,\n                },\n              },\n            ]}\n          >\n            {cards.tablet}\n          </Carousel>\n        )}\n      </S.SectionWrapper>\n\n      {mobileOnly && (\n        <S.ViewAllWrapper>\n          <ViewAll />\n        </S.ViewAllWrapper>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}