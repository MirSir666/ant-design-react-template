{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/PatientResultsCard/PatientResultsCard.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BarChartOutlined, CheckOutlined, FileTextOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Steps, Step } from '@app/components/common/Steps/Steps';\nimport { Dates } from '@app/constants/Dates';\nimport { patientResultsData } from '@app/constants/patientResultsData';\nimport { patientResultStatus } from '@app/constants/patientResultStatus';\nimport { DashboardCard } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport * as S from './PatientResultsCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar icons = [/*#__PURE__*/_jsxDEV(CheckOutlined, {}, 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 16\n}, this), /*#__PURE__*/_jsxDEV(BarChartOutlined, {}, 1, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 43\n}, this), /*#__PURE__*/_jsxDEV(FileTextOutlined, {}, 2, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 73\n}, this)];\nexport var PatientResultsCard = function PatientResultsCard() {\n  _s();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  return /*#__PURE__*/_jsxDEV(DashboardCard, {\n    children: /*#__PURE__*/_jsxDEV(Steps, {\n      direction: \"vertical\",\n      current: 0,\n      children: patientResultStatus.map(function (status, index) {\n        var patientResult = patientResultsData.find(function (item) {\n          return item.status === status.id;\n        }) || {\n          isActive: false,\n          date: Date.now()\n        };\n        return /*#__PURE__*/_jsxDEV(Step, {\n          title: /*#__PURE__*/_jsxDEV(S.TitleWrapper, {\n            children: t(status.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 22\n          }, _this),\n          description: /*#__PURE__*/_jsxDEV(S.InfoWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(S.DateWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(S.CalendarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(S.Text, {\n                children: Dates.format(patientResult === null || patientResult === void 0 ? void 0 : patientResult.date, 'D MMMM YYYY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(S.Description, {\n              children: t(status.desc)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, _this),\n          icon: /*#__PURE__*/_jsxDEV(S.IconWrapper, {\n            isActive: patientResult.isActive,\n            children: icons[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, _this)\n        }, status.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n_s(PatientResultsCard, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = PatientResultsCard;\nvar _c;\n$RefreshReg$(_c, \"PatientResultsCard\");","map":{"version":3,"names":["React","BarChartOutlined","CheckOutlined","FileTextOutlined","useTranslation","Steps","Step","Dates","patientResultsData","patientResultStatus","DashboardCard","S","icons","PatientResultsCard","t","map","status","index","patientResult","find","item","id","isActive","date","Date","now","name","format","desc"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/PatientResultsCard/PatientResultsCard.tsx"],"sourcesContent":["import React from 'react';\nimport { BarChartOutlined, CheckOutlined, FileTextOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Steps, Step } from '@app/components/common/Steps/Steps';\nimport { Dates } from '@app/constants/Dates';\nimport { patientResultsData } from '@app/constants/patientResultsData';\nimport { patientResultStatus } from '@app/constants/patientResultStatus';\nimport { DashboardCard } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport * as S from './PatientResultsCard.styles';\n\nconst icons = [<CheckOutlined key={0} />, <BarChartOutlined key={1} />, <FileTextOutlined key={2} />];\n\nexport const PatientResultsCard: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <DashboardCard>\n      <Steps direction=\"vertical\" current={0}>\n        {patientResultStatus.map((status, index) => {\n          const patientResult = patientResultsData.find((item) => item.status === status.id) || {\n            isActive: false,\n            date: Date.now(),\n          };\n          return (\n            <Step\n              title={<S.TitleWrapper>{t(status.name)}</S.TitleWrapper>}\n              description={\n                <S.InfoWrapper>\n                  <S.DateWrapper>\n                    <S.CalendarIcon />\n                    <S.Text>{Dates.format(patientResult?.date, 'D MMMM YYYY')}</S.Text>\n                  </S.DateWrapper>\n                  <S.Description>{t(status.desc)}</S.Description>\n                </S.InfoWrapper>\n              }\n              key={status.id}\n              icon={<S.IconWrapper isActive={patientResult.isActive}>{icons[index]}</S.IconWrapper>}\n            />\n          );\n        })}\n      </Steps>\n    </DashboardCard>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,mBAAmB;AACrF,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,KAAK,EAAEC,IAAI,QAAQ,oCAAoC;AAChE,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,SAASC,aAAa,QAAQ,+DAA+D;AAC7F,OAAO,KAAKC,CAAC,MAAM,6BAA6B;AAAC;AAEjD,IAAMC,KAAK,GAAG,cAAC,QAAC,aAAa,MAAM,CAAC;EAAA;EAAA;EAAA;AAAA,QAAI,eAAE,QAAC,gBAAgB,MAAM,CAAC;EAAA;EAAA;EAAA;AAAA,QAAI,eAAE,QAAC,gBAAgB,MAAM,CAAC;EAAA;EAAA;EAAA;AAAA,QAAI,CAAC;AAErG,OAAO,IAAMC,kBAA4B,GAAG,SAA/BA,kBAA4B,GAAS;EAAA;EAChD,sBAAcT,cAAc,EAAE;IAAtBU,CAAC,mBAADA,CAAC;EAET,oBACE,QAAC,aAAa;IAAA,uBACZ,QAAC,KAAK;MAAC,SAAS,EAAC,UAAU;MAAC,OAAO,EAAE,CAAE;MAAA,UACpCL,mBAAmB,CAACM,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK,EAAK;QAC1C,IAAMC,aAAa,GAAGV,kBAAkB,CAACW,IAAI,CAAC,UAACC,IAAI;UAAA,OAAKA,IAAI,CAACJ,MAAM,KAAKA,MAAM,CAACK,EAAE;QAAA,EAAC,IAAI;UACpFC,QAAQ,EAAE,KAAK;UACfC,IAAI,EAAEC,IAAI,CAACC,GAAG;QAChB,CAAC;QACD,oBACE,QAAC,IAAI;UACH,KAAK,eAAE,QAAC,CAAC,CAAC,YAAY;YAAA,UAAEX,CAAC,CAACE,MAAM,CAACU,IAAI;UAAC;YAAA;YAAA;YAAA;UAAA,SAAmB;UACzD,WAAW,eACT,QAAC,CAAC,CAAC,WAAW;YAAA,wBACZ,QAAC,CAAC,CAAC,WAAW;cAAA,wBACZ,QAAC,CAAC,CAAC,YAAY;gBAAA;gBAAA;gBAAA;cAAA,SAAG,eAClB,QAAC,CAAC,CAAC,IAAI;gBAAA,UAAEnB,KAAK,CAACoB,MAAM,CAACT,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,IAAI,EAAE,aAAa;cAAC;gBAAA;gBAAA;gBAAA;cAAA,SAAU;YAAA;cAAA;cAAA;cAAA;YAAA,SACrD,eAChB,QAAC,CAAC,CAAC,WAAW;cAAA,UAAET,CAAC,CAACE,MAAM,CAACY,IAAI;YAAC;cAAA;cAAA;cAAA;YAAA,SAAiB;UAAA;YAAA;YAAA;YAAA;UAAA,SAElD;UAED,IAAI,eAAE,QAAC,CAAC,CAAC,WAAW;YAAC,QAAQ,EAAEV,aAAa,CAACI,QAAS;YAAA,UAAEV,KAAK,CAACK,KAAK;UAAC;YAAA;YAAA;YAAA;UAAA;QAAkB,GADjFD,MAAM,CAACK,EAAE;UAAA;UAAA;UAAA;QAAA,SAEd;MAEN,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,SACM;AAEpB,CAAC;AAAC,GA/BWR,kBAA4B;EAAA,QACzBT,cAAc;AAAA;AAAA,KADjBS,kBAA4B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}