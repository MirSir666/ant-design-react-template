{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/common/Burger/BurgerIcon.tsx\",\n  _this = this,\n  _templateObject,\n  _templateObject2;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Burger = function Burger(_ref) {\n  var className = _ref.className,\n    onClick = _ref.onClick;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"280 215 400 220\",\n    fill: \"currentColor\",\n    className: className,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M300,220 C300,220 520,220 540,220 C740,220 640,540 520,420 C440,340 300,200 300,200\",\n      id: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M300,320 L540,320\",\n      id: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M300,210 C300,210 520,210 540,210 C740,210 640,530 520,410 C440,330 300,190 300,190\",\n      id: \"bottom\",\n      transform: \"translate(480, 320) scale(1, -1) translate(-480, -318) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, _this);\n};\n_c = Burger;\nexport var BurgerIcon = styled(Burger)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  transform: translate3d(0, 0, 0);\\n\\n  path {\\n    fill: none;\\n    transition: stroke-dashoffset 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25),\\n      stroke-dasharray 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25);\\n    stroke-width: 30px;\\n    stroke-linecap: round;\\n    stroke: currentColor;\\n    stroke-dashoffset: 0;\\n\\n    &#top,\\n    &#bottom {\\n      stroke-dasharray: 240px 950px;\\n    }\\n    &#middle {\\n      stroke-dasharray: 240px 240px;\\n    }\\n\\n    \", \"\\n  }\\n\"])), function (props) {\n  return props.isCross && css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n        &#top,\\n        &#bottom {\\n          stroke-dashoffset: -650px;\\n        }\\n        &#middle {\\n          stroke-dashoffset: -115px;\\n          stroke-dasharray: 1px 220px;\\n        }\\n      \"])));\n});\nvar _c;\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"names":["React","styled","css","Burger","className","onClick","BurgerIcon","props","isCross"],"sources":["/workspace/ant-design-react-template/src/components/common/Burger/BurgerIcon.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface BurgerProps {\n  className?: string;\n  onClick: () => void;\n}\nexport const Burger: React.FC<BurgerProps> = ({ className, onClick }) => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"280 215 400 220\" fill=\"currentColor\" className={className} onClick={onClick}>\n    <path d=\"M300,220 C300,220 520,220 540,220 C740,220 640,540 520,420 C440,340 300,200 300,200\" id=\"top\" />\n    <path d=\"M300,320 L540,320\" id=\"middle\" />\n    <path\n      d=\"M300,210 C300,210 520,210 540,210 C740,210 640,530 520,410 C440,330 300,190 300,190\"\n      id=\"bottom\"\n      transform=\"translate(480, 320) scale(1, -1) translate(-480, -318) \"\n    />\n  </svg>\n);\n\nexport const BurgerIcon = styled(Burger)<{ isCross: boolean }>`\n  cursor: pointer;\n  transform: translate3d(0, 0, 0);\n\n  path {\n    fill: none;\n    transition: stroke-dashoffset 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25),\n      stroke-dasharray 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25);\n    stroke-width: 30px;\n    stroke-linecap: round;\n    stroke: currentColor;\n    stroke-dashoffset: 0;\n\n    &#top,\n    &#bottom {\n      stroke-dasharray: 240px 950px;\n    }\n    &#middle {\n      stroke-dasharray: 240px 240px;\n    }\n\n    ${(props) =>\n      props.isCross &&\n      css`\n        &#top,\n        &#bottom {\n          stroke-dashoffset: -650px;\n        }\n        &#middle {\n          stroke-dashoffset: -115px;\n          stroke-dasharray: 1px 220px;\n        }\n      `}\n  }\n`;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAAC;AAMhD,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAA6B;EAAA,IAAMC,SAAS,QAATA,SAAS;IAAEC,OAAO,QAAPA,OAAO;EAAA,oBAChE;IAAK,KAAK,EAAC,KAAK;IAAC,MAAM,EAAC,KAAK;IAAC,OAAO,EAAC,iBAAiB;IAAC,IAAI,EAAC,cAAc;IAAC,SAAS,EAAED,SAAU;IAAC,OAAO,EAAEC,OAAQ;IAAA,wBACjH;MAAM,CAAC,EAAC,qFAAqF;MAAC,EAAE,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,SAAG,eACzG;MAAM,CAAC,EAAC,mBAAmB;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,SAAG,eAC1C;MACE,CAAC,EAAC,qFAAqF;MACvF,EAAE,EAAC,QAAQ;MACX,SAAS,EAAC;IAAyD;MAAA;MAAA;MAAA;IAAA,SACnE;EAAA;IAAA;IAAA;IAAA;EAAA,SACE;AAAA,CACP;AAAC,KAVWF,MAA6B;AAY1C,OAAO,IAAMG,UAAU,GAAGL,MAAM,CAACE,MAAM,CAAC,ojBAqBlC,UAACI,KAAK;EAAA,OACNA,KAAK,CAACC,OAAO,IACbN,GAAG,iRASF;AAAA,EAEN;AAAC;AAAA"},"metadata":{},"sourceType":"module"}