{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{useTranslation}from'react-i18next';import{BaseForm}from'@app/components/common/forms/BaseForm/BaseForm';import*as S from'./ForgotPasswordForm.styles';import*as Auth from'@app/components/layouts/AuthLayout/AuthLayout.styles';import{useAppDispatch}from'@app/hooks/reduxHooks';import{doResetPassword}from'@app/store/slices/authSlice';import{notificationController}from'@app/controllers/notificationController';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initValues={email:'chris.johnson@altence.com'};export var ForgotPasswordForm=function ForgotPasswordForm(){var _useTranslation=useTranslation(),t=_useTranslation.t;var navigate=useNavigate();var dispatch=useAppDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];var handleSubmit=function handleSubmit(values){setLoading(true);dispatch(doResetPassword(values)).unwrap().then(function(){navigate('/auth/security-code');}).catch(function(err){notificationController.error({message:err.message});setLoading(false);});};return/*#__PURE__*/_jsx(Auth.FormWrapper,{children:/*#__PURE__*/_jsxs(BaseForm,{layout:\"vertical\",onFinish:handleSubmit,requiredMark:\"optional\",initialValues:initValues,children:[/*#__PURE__*/_jsxs(Auth.BackWrapper,{onClick:function onClick(){return navigate(-1);},children:[/*#__PURE__*/_jsx(Auth.BackIcon,{}),t('common.back')]}),/*#__PURE__*/_jsx(Auth.FormTitle,{children:t('common.resetPassword')}),/*#__PURE__*/_jsx(S.Description,{children:t('forgotPassword.description')}),/*#__PURE__*/_jsx(Auth.FormItem,{name:\"email\",label:t('common.email'),rules:[{required:true,message:t('common.emailError')}],children:/*#__PURE__*/_jsx(Auth.FormInput,{placeholder:t('common.email')})}),/*#__PURE__*/_jsx(BaseForm.Item,{noStyle:true,children:/*#__PURE__*/_jsx(S.SubmitButton,{type:\"primary\",htmlType:\"submit\",loading:isLoading,children:t('forgotPassword.sendInstructions')})})]})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/auth/ForgotPasswordForm/ForgotPasswordForm.tsx"],"names":["React","useState","useNavigate","useTranslation","BaseForm","S","Auth","useAppDispatch","doResetPassword","notificationController","initValues","email","ForgotPasswordForm","t","navigate","dispatch","isLoading","setLoading","handleSubmit","values","unwrap","then","catch","err","error","message","required"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,QAAT,KAAyB,gDAAzB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,6BAAnB,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,sDAAtB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,eAAT,KAAgC,6BAAhC,CACA,OAASC,sBAAT,KAAuC,yCAAvC,C,wFAMA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,KAAK,CAAE,2BADU,CAAnB,CAIA,MAAO,IAAMC,CAAAA,kBAA4B,CAAG,QAA/BA,CAAAA,kBAA+B,EAAM,CAChD,oBAAcT,cAAc,EAA5B,CAAQU,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,GAAMa,CAAAA,QAAQ,CAAGR,cAAc,EAA/B,CACA,cAAgCN,QAAQ,CAAC,KAAD,CAAxC,wCAAOe,SAAP,eAAkBC,UAAlB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAoC,CACvDF,UAAU,CAAC,IAAD,CAAV,CACAF,QAAQ,CAACP,eAAe,CAACW,MAAD,CAAhB,CAAR,CACGC,MADH,GAEGC,IAFH,CAEQ,UAAM,CACVP,QAAQ,CAAC,qBAAD,CAAR,CACD,CAJH,EAKGQ,KALH,CAKS,SAACC,GAAD,CAAS,CACdd,sBAAsB,CAACe,KAAvB,CAA6B,CAAEC,OAAO,CAAEF,GAAG,CAACE,OAAf,CAA7B,EACAR,UAAU,CAAC,KAAD,CAAV,CACD,CARH,EASD,CAXD,CAaA,mBACE,KAAC,IAAD,CAAM,WAAN,wBACE,MAAC,QAAD,EAAU,MAAM,CAAC,UAAjB,CAA4B,QAAQ,CAAEC,YAAtC,CAAoD,YAAY,CAAC,UAAjE,CAA4E,aAAa,CAAER,UAA3F,wBACE,MAAC,IAAD,CAAM,WAAN,EAAkB,OAAO,CAAE,yBAAMI,CAAAA,QAAQ,CAAC,CAAC,CAAF,CAAd,EAA3B,wBACE,KAAC,IAAD,CAAM,QAAN,IADF,CAEGD,CAAC,CAAC,aAAD,CAFJ,GADF,cAKE,KAAC,IAAD,CAAM,SAAN,WAAiBA,CAAC,CAAC,sBAAD,CAAlB,EALF,cAME,KAAC,CAAD,CAAG,WAAH,WAAgBA,CAAC,CAAC,4BAAD,CAAjB,EANF,cAOE,KAAC,IAAD,CAAM,QAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAEA,CAAC,CAAC,cAAD,CAFV,CAGE,KAAK,CAAE,CAAC,CAAEa,QAAQ,CAAE,IAAZ,CAAkBD,OAAO,CAAEZ,CAAC,CAAC,mBAAD,CAA5B,CAAD,CAHT,uBAKE,KAAC,IAAD,CAAM,SAAN,EAAgB,WAAW,CAAEA,CAAC,CAAC,cAAD,CAA9B,EALF,EAPF,cAcE,KAAC,QAAD,CAAU,IAAV,EAAe,OAAO,KAAtB,uBACE,KAAC,CAAD,CAAG,YAAH,EAAgB,IAAI,CAAC,SAArB,CAA+B,QAAQ,CAAC,QAAxC,CAAiD,OAAO,CAAEG,SAA1D,UACGH,CAAC,CAAC,iCAAD,CADJ,EADF,EAdF,GADF,EADF,CAwBD,CA3CM","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport * as S from './ForgotPasswordForm.styles';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\nimport { doResetPassword } from '@app/store/slices/authSlice';\nimport { notificationController } from '@app/controllers/notificationController';\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\nconst initValues = {\n  email: 'chris.johnson@altence.com',\n};\n\nexport const ForgotPasswordForm: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = (values: ForgotPasswordFormData) => {\n    setLoading(true);\n    dispatch(doResetPassword(values))\n      .unwrap()\n      .then(() => {\n        navigate('/auth/security-code');\n      })\n      .catch((err) => {\n        notificationController.error({ message: err.message });\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Auth.FormWrapper>\n      <BaseForm layout=\"vertical\" onFinish={handleSubmit} requiredMark=\"optional\" initialValues={initValues}>\n        <Auth.BackWrapper onClick={() => navigate(-1)}>\n          <Auth.BackIcon />\n          {t('common.back')}\n        </Auth.BackWrapper>\n        <Auth.FormTitle>{t('common.resetPassword')}</Auth.FormTitle>\n        <S.Description>{t('forgotPassword.description')}</S.Description>\n        <Auth.FormItem\n          name=\"email\"\n          label={t('common.email')}\n          rules={[{ required: true, message: t('common.emailError') }]}\n        >\n          <Auth.FormInput placeholder={t('common.email')} />\n        </Auth.FormItem>\n        <BaseForm.Item noStyle>\n          <S.SubmitButton type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('forgotPassword.sendInstructions')}\n          </S.SubmitButton>\n        </BaseForm.Item>\n      </BaseForm>\n    </Auth.FormWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}