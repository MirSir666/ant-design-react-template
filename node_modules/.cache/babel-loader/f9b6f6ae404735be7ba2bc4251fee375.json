{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"isCollapsed\",\"setCollapsed\"];import React,{useMemo}from'react';import Overlay from'../../../../common/Overlay';import{useResponsive}from'hooks/useResponsive';import*as S from'./MainSider.styles';import{SiderLogo}from'../SiderLogo';import SiderMenu from'../SiderMenu/SiderMenu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MainSider=function MainSider(_ref){var isCollapsed=_ref.isCollapsed,setCollapsed=_ref.setCollapsed,props=_objectWithoutProperties(_ref,_excluded);var _useResponsive=useResponsive(),isDesktop=_useResponsive.isDesktop,mobileOnly=_useResponsive.mobileOnly,tabletOnly=_useResponsive.tabletOnly;var isCollapsible=useMemo(function(){return mobileOnly&&tabletOnly;},[mobileOnly,tabletOnly]);var toggleSider=function toggleSider(){return setCollapsed(!isCollapsed);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(S.Sider,_objectSpread(_objectSpread({trigger:null,collapsed:!isDesktop&&isCollapsed,collapsedWidth:tabletOnly?80:0,collapsible:isCollapsible,width:260},props),{},{children:[/*#__PURE__*/_jsx(SiderLogo,{isSiderCollapsed:isCollapsed,toggleSider:toggleSider}),/*#__PURE__*/_jsx(S.SiderContent,{children:/*#__PURE__*/_jsx(SiderMenu,{setCollapsed:setCollapsed})})]})),mobileOnly&&/*#__PURE__*/_jsx(Overlay,{onClick:toggleSider,show:!isCollapsed})]});};export default MainSider;","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/layouts/main/sider/MainSider/MainSider.tsx"],"names":["React","useMemo","Overlay","useResponsive","S","SiderLogo","SiderMenu","MainSider","isCollapsed","setCollapsed","props","isDesktop","mobileOnly","tabletOnly","isCollapsible","toggleSider"],"mappings":"gZAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CACA,OAASC,aAAT,KAA8B,qBAA9B,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,oBAAnB,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,C,6IAOA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAA6C,IAA1CC,CAAAA,WAA0C,MAA1CA,WAA0C,CAA7BC,YAA6B,MAA7BA,YAA6B,CAAZC,KAAY,0CACvF,mBAA8CP,aAAa,EAA3D,CAAQQ,SAAR,gBAAQA,SAAR,CAAmBC,UAAnB,gBAAmBA,UAAnB,CAA+BC,UAA/B,gBAA+BA,UAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAGb,OAAO,CAAC,iBAAMW,CAAAA,UAAU,EAAIC,UAApB,EAAD,CAAiC,CAACD,UAAD,CAAaC,UAAb,CAAjC,CAA7B,CAEA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMN,CAAAA,YAAY,CAAC,CAACD,WAAF,CAAlB,EAApB,CAEA,mBACE,wCACE,MAAC,CAAD,CAAG,KAAH,8BACE,OAAO,CAAE,IADX,CAEE,SAAS,CAAE,CAACG,SAAD,EAAcH,WAF3B,CAGE,cAAc,CAAEK,UAAU,CAAG,EAAH,CAAQ,CAHpC,CAIE,WAAW,CAAEC,aAJf,CAKE,KAAK,CAAE,GALT,EAMMJ,KANN,6BAQE,KAAC,SAAD,EAAW,gBAAgB,CAAEF,WAA7B,CAA0C,WAAW,CAAEO,WAAvD,EARF,cASE,KAAC,CAAD,CAAG,YAAH,wBACE,KAAC,SAAD,EAAW,YAAY,CAAEN,YAAzB,EADF,EATF,IADF,CAcGG,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEG,WAAlB,CAA+B,IAAI,CAAE,CAACP,WAAtC,EAdjB,GADF,CAkBD,CAzBD,CA2BA,cAAeD,CAAAA,SAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport Overlay from '../../../../common/Overlay';\nimport { useResponsive } from 'hooks/useResponsive';\nimport * as S from './MainSider.styles';\nimport { SiderLogo } from '../SiderLogo';\nimport SiderMenu from '../SiderMenu/SiderMenu';\n\ninterface MainSiderProps {\n  isCollapsed: boolean;\n  setCollapsed: (isCollapsed: boolean) => void;\n}\n\nconst MainSider: React.FC<MainSiderProps> = ({ isCollapsed, setCollapsed, ...props }) => {\n  const { isDesktop, mobileOnly, tabletOnly } = useResponsive();\n\n  const isCollapsible = useMemo(() => mobileOnly && tabletOnly, [mobileOnly, tabletOnly]);\n\n  const toggleSider = () => setCollapsed(!isCollapsed);\n\n  return (\n    <>\n      <S.Sider\n        trigger={null}\n        collapsed={!isDesktop && isCollapsed}\n        collapsedWidth={tabletOnly ? 80 : 0}\n        collapsible={isCollapsible}\n        width={260}\n        {...props}\n      >\n        <SiderLogo isSiderCollapsed={isCollapsed} toggleSider={toggleSider} />\n        <S.SiderContent>\n          <SiderMenu setCollapsed={setCollapsed} />\n        </S.SiderContent>\n      </S.Sider>\n      {mobileOnly && <Overlay onClick={toggleSider} show={!isCollapsed} />}\n    </>\n  );\n};\n\nexport default MainSider;\n"]},"metadata":{},"sourceType":"module"}