{"ast":null,"code":"import { httpApiMock } from '@app/api/mocks/http.api.mock';\nimport { initValues } from '@app/components/auth/LoginForm/LoginForm';\nvar avatarImg = process.env.REACT_APP_ASSETS_BUCKET + '/avatars/avatar5.webp';\nhttpApiMock.onPost('login').reply(function (config) {\n  var data = JSON.parse(config.data || '');\n  if (data.password === initValues.password) {\n    return [200, {\n      token: 'bearerToken',\n      user: {\n        id: 1,\n        firstName: 'Chris',\n        lastName: 'Johnson',\n        imgUrl: avatarImg,\n        userName: '@john1989',\n        email: {\n          name: 'chris.johnson@altence.com',\n          verified: false\n        },\n        phone: {\n          number: '+18143519459',\n          verified: true\n        },\n        sex: 'male',\n        birthday: '01/26/2022',\n        lang: 'en',\n        country: 'GB',\n        city: 'London',\n        address1: '14 London Road',\n        zipcode: 5211,\n        website: 'altence.com',\n        socials: {\n          twitter: '@altence_team',\n          facebook: 'https://facebook.com/groups/1076577369582221',\n          linkedin: 'https://linkedin.com/company/altence'\n        }\n      }\n    }];\n  } else return [401, {\n    message: 'Invalid Credentials'\n  }];\n});\nhttpApiMock.onPost('signUp').reply(200);\nhttpApiMock.onPost('forgotPassword').reply(200);\nhttpApiMock.onPost('verifySecurityCode').reply(200);\nhttpApiMock.onPost('setNewPassword').reply(200);","map":{"version":3,"names":["httpApiMock","initValues","avatarImg","process","env","REACT_APP_ASSETS_BUCKET","onPost","reply","config","data","JSON","parse","password","token","user","id","firstName","lastName","imgUrl","userName","email","name","verified","phone","number","sex","birthday","lang","country","city","address1","zipcode","website","socials","twitter","facebook","linkedin","message"],"sources":["/workspace/ant-design-react-template/src/api/mocks/auth.api.mock.ts"],"sourcesContent":["import { httpApiMock } from '@app/api/mocks/http.api.mock';\nimport { AuthData } from '@app/api/auth.api';\nimport { initValues } from '@app/components/auth/LoginForm/LoginForm';\n\nconst avatarImg = process.env.REACT_APP_ASSETS_BUCKET + '/avatars/avatar5.webp';\n\nhttpApiMock.onPost('login').reply((config) => {\n  const data: AuthData = JSON.parse(config.data || '');\n  if (data.password === initValues.password) {\n    return [\n      200,\n      {\n        token: 'bearerToken',\n        user: {\n          id: 1,\n          firstName: 'Chris',\n          lastName: 'Johnson',\n          imgUrl: avatarImg,\n          userName: '@john1989',\n          email: {\n            name: 'chris.johnson@altence.com',\n            verified: false,\n          },\n          phone: {\n            number: '+18143519459',\n            verified: true,\n          },\n          sex: 'male',\n          birthday: '01/26/2022',\n          lang: 'en',\n          country: 'GB',\n          city: 'London',\n          address1: '14 London Road',\n          zipcode: 5211,\n          website: 'altence.com',\n          socials: {\n            twitter: '@altence_team',\n            facebook: 'https://facebook.com/groups/1076577369582221',\n            linkedin: 'https://linkedin.com/company/altence',\n          },\n        },\n      },\n    ];\n  } else return [401, { message: 'Invalid Credentials' }];\n});\n\nhttpApiMock.onPost('signUp').reply(200);\n\nhttpApiMock.onPost('forgotPassword').reply(200);\n\nhttpApiMock.onPost('verifySecurityCode').reply(200);\n\nhttpApiMock.onPost('setNewPassword').reply(200);\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;AAE1D,SAASC,UAAU,QAAQ,0CAA0C;AAErE,IAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,GAAG,uBAAuB;AAE/EL,WAAW,CAACM,MAAM,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,UAACC,MAAM,EAAK;EAC5C,IAAMC,IAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACC,IAAI,IAAI,EAAE,CAAC;EACpD,IAAIA,IAAI,CAACG,QAAQ,KAAKX,UAAU,CAACW,QAAQ,EAAE;IACzC,OAAO,CACL,GAAG,EACH;MACEC,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAE;QACJC,EAAE,EAAE,CAAC;QACLC,SAAS,EAAE,OAAO;QAClBC,QAAQ,EAAE,SAAS;QACnBC,MAAM,EAAEhB,SAAS;QACjBiB,QAAQ,EAAE,WAAW;QACrBC,KAAK,EAAE;UACLC,IAAI,EAAE,2BAA2B;UACjCC,QAAQ,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACLC,MAAM,EAAE,cAAc;UACtBF,QAAQ,EAAE;QACZ,CAAC;QACDG,GAAG,EAAE,MAAM;QACXC,QAAQ,EAAE,YAAY;QACtBC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAE,gBAAgB;QAC1BC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,aAAa;QACtBC,OAAO,EAAE;UACPC,OAAO,EAAE,eAAe;UACxBC,QAAQ,EAAE,8CAA8C;UACxDC,QAAQ,EAAE;QACZ;MACF;IACF,CAAC,CACF;EACH,CAAC,MAAM,OAAO,CAAC,GAAG,EAAE;IAAEC,OAAO,EAAE;EAAsB,CAAC,CAAC;AACzD,CAAC,CAAC;AAEFrC,WAAW,CAACM,MAAM,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;AAEvCP,WAAW,CAACM,MAAM,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;AAE/CP,WAAW,CAACM,MAAM,CAAC,oBAAoB,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;AAEnDP,WAAW,CAACM,MAAM,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC"},"metadata":{},"sourceType":"module"}