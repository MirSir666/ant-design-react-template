{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport { paymentStatuses } from 'constants/paymentStatuses';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport * as S from './PaymentsTable.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var PaymentsTable = function PaymentsTable(_ref) {\n  _s();\n  var payments = _ref.payments;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var columns = useMemo(function () {\n    return [{\n      title: t('profile.nav.payments.recipient'),\n      dataIndex: 'recipient',\n      key: 'recipient',\n      render: function render(recipient) {\n        return /*#__PURE__*/_jsxDEV(S.RecipientWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: recipient.img,\n            alt: recipient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this), recipient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this);\n      },\n      align: 'center'\n    }, {\n      title: t('profile.nav.payments.date'),\n      dataIndex: 'date',\n      key: 'date',\n      render: function render(text) {\n        return Dates.format(text, 'LL');\n      },\n      sorter: function sorter(a, b) {\n        return a.date - b.date;\n      },\n      align: 'center'\n    }, {\n      title: t('profile.nav.payments.status.title'),\n      dataIndex: 'status',\n      key: 'status',\n      render: function render(status) {\n        return /*#__PURE__*/_jsxDEV(Status, {\n          color: defineColorByPriority(status.priority),\n          text: t(status.name).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this);\n      },\n      align: 'center'\n    }, {\n      title: t('profile.nav.payments.totalAmount'),\n      dataIndex: 'totalAmount',\n      key: 'totalAmount',\n      align: 'center'\n    }, {\n      title: '',\n      dataIndex: 'details',\n      key: 'details',\n      align: 'center',\n      render: function render() {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          children: t('profile.nav.payments.details')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }, _this);\n      }\n    }];\n  }, [t]);\n  var dataSource = useMemo(function () {\n    return payments.map(function (payment, index) {\n      return {\n        key: index,\n        recipient: {\n          name: payment.recipient,\n          img: payment.imgUrl\n        },\n        date: payment.date,\n        status: paymentStatuses.find(function (status) {\n          return status.id === payment.status;\n        }),\n        totalAmount: getCurrencyPrice(payment.amount, payment.currency),\n        details: payment\n      };\n    });\n  }, [payments]);\n  return /*#__PURE__*/_jsxDEV(S.PaymentHistoryTable, {\n    size: \"middle\",\n    columns: columns,\n    dataSource: dataSource,\n    pagination: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, _this);\n};\n_s(PaymentsTable, \"LvUgU8Z45hqRosydTer8RlwidJU=\", false, function () {\n  return [useTranslation];\n});\n_c = PaymentsTable;\nvar _c;\n$RefreshReg$(_c, \"PaymentsTable\");","map":{"version":3,"names":["React","useMemo","Avatar","useTranslation","Dates","Status","paymentStatuses","defineColorByPriority","getCurrencyPrice","S","Button","PaymentsTable","payments","t","columns","title","dataIndex","key","render","recipient","img","name","align","text","format","sorter","a","b","date","status","priority","toUpperCase","dataSource","map","payment","index","imgUrl","find","id","totalAmount","amount","currency","details"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { ColumnType } from 'antd/lib/table';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport { paymentStatuses, PaymentStatus } from 'constants/paymentStatuses';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport { Payment } from 'api/paymentHistory.api';\nimport * as S from './PaymentsTable.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\n\ninterface Recipient {\n  name: string;\n  img: string;\n}\n\ninterface Status {\n  key: number;\n  recipient: Recipient;\n  date: number;\n  status: PaymentStatus | undefined;\n  totalAmount: string | React.ReactNode;\n}\n\ninterface PaymentsTableProps {\n  payments: Payment[];\n}\n\nexport const PaymentsTable: React.FC<PaymentsTableProps> = ({ payments }) => {\n  const { t } = useTranslation();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const columns: ColumnType<any>[] = useMemo(() => {\n    return [\n      {\n        title: t('profile.nav.payments.recipient'),\n        dataIndex: 'recipient',\n        key: 'recipient',\n        render: (recipient: Recipient) => (\n          <S.RecipientWrapper>\n            <Avatar src={recipient.img} alt={recipient.name} />\n            {recipient.name}\n          </S.RecipientWrapper>\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.date'),\n        dataIndex: 'date',\n        key: 'date',\n        render: (text: string) => Dates.format(text, 'LL'),\n        sorter: (a, b) => a.date - b.date,\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.status.title'),\n        dataIndex: 'status',\n        key: 'status',\n        render: (status: PaymentStatus) => (\n          <Status color={defineColorByPriority(status.priority)} text={t(status.name).toUpperCase()} />\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.totalAmount'),\n        dataIndex: 'totalAmount',\n        key: 'totalAmount',\n        align: 'center',\n      },\n      {\n        title: '',\n        dataIndex: 'details',\n        key: 'details',\n        align: 'center',\n        render: () => <Button type=\"link\">{t('profile.nav.payments.details')}</Button>,\n      },\n    ];\n  }, [t]);\n\n  const dataSource: Status[] = useMemo(\n    () =>\n      payments.map((payment, index) => {\n        return {\n          key: index,\n          recipient: {\n            name: payment.recipient,\n            img: payment.imgUrl,\n          },\n          date: payment.date,\n          status: paymentStatuses.find((status) => status.id === payment.status),\n          totalAmount: getCurrencyPrice(payment.amount, payment.currency),\n          details: payment,\n        };\n      }),\n    [payments],\n  );\n\n  return <S.PaymentHistoryTable size=\"middle\" columns={columns} dataSource={dataSource} pagination={false} />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}