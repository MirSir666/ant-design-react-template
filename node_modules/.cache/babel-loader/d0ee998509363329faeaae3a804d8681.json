{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"option\", \"width\", \"height\", \"onEvents\", \"style\"];\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/common/charts/BaseChart.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { Loading } from '../Loading';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { BORDER_RADIUS } from '@app/styles/themes/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var getChartColors = function getChartColors(theme) {\n  return [theme.chartColor1, theme.chartColor2, theme.chartColor3, theme.chartColor4, theme.chartColor5];\n};\nexport var getDefaultTooltipStyles = function getDefaultTooltipStyles(theme) {\n  return {\n    borderColor: theme.chartColor1,\n    borderWidth: 2,\n    borderRadius: Number.parseInt(BORDER_RADIUS),\n    textStyle: {\n      fontWeight: 600,\n      fontSize: 16,\n      color: theme.chartColor1\n    }\n  };\n};\nexport var BaseChart = function BaseChart(_ref) {\n  _s();\n  var option = _ref.option,\n    width = _ref.width,\n    height = _ref.height,\n    onEvents = _ref.onEvents,\n    style = _ref.style,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var chartHeight = height || '400px';\n  var defaultOption = {\n    color: getChartColors(themeObject[theme])\n  };\n  useEffect(function () {\n    // TODO FIXME workaround to make sure that parent container is initialized before the chart\n    setTimeout(function () {\n      setLoading(false);\n    }, 1000 / 2);\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this) : /*#__PURE__*/_jsxDEV(ReactECharts, _objectSpread(_objectSpread({}, props), {}, {\n    option: _objectSpread(_objectSpread({}, defaultOption), option),\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      height: chartHeight,\n      minHeight: height === '100%' ? 400 : 'unset',\n      width: width,\n      zIndex: 0\n    }),\n    onEvents: onEvents\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, _this);\n};\n_s(BaseChart, \"rt20TtK6rBcQFnuSn3XoGNk6XxE=\", false, function () {\n  return [useAppSelector];\n});\n_c = BaseChart;\nvar _c;\n$RefreshReg$(_c, \"BaseChart\");","map":{"version":3,"names":["React","useEffect","useState","ReactECharts","Loading","useAppSelector","themeObject","BORDER_RADIUS","getChartColors","theme","chartColor1","chartColor2","chartColor3","chartColor4","chartColor5","getDefaultTooltipStyles","borderColor","borderWidth","borderRadius","Number","parseInt","textStyle","fontWeight","fontSize","color","BaseChart","option","width","height","onEvents","style","props","state","loading","setLoading","chartHeight","defaultOption","setTimeout","minHeight","zIndex"],"sources":["/workspace/ant-design-react-template/src/components/common/charts/BaseChart.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useState } from 'react';\nimport { EChartsOption } from 'echarts-for-react';\nimport ReactECharts from 'echarts-for-react';\nimport { Loading } from '../Loading';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { ITheme } from '@app/styles/themes/types';\nimport { BORDER_RADIUS } from '@app/styles/themes/constants';\n\nexport interface BaseChartProps {\n  option?: EChartsOption;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onEvents?: Record<string, (e: any) => void>;\n  width?: string | number;\n  height?: string | number;\n  style?: CSSProperties;\n  classname?: string;\n}\n\ninterface DefaultTooltipStyles {\n  borderColor: string;\n  borderWidth: number;\n  borderRadius: number;\n  textStyle: {\n    fontWeight: number;\n    fontSize: number;\n    color: string;\n  };\n}\n\nexport const getChartColors = (theme: ITheme): string[] => [\n  theme.chartColor1,\n  theme.chartColor2,\n  theme.chartColor3,\n  theme.chartColor4,\n  theme.chartColor5,\n];\n\nexport const getDefaultTooltipStyles = (theme: ITheme): DefaultTooltipStyles => ({\n  borderColor: theme.chartColor1,\n  borderWidth: 2,\n  borderRadius: Number.parseInt(BORDER_RADIUS),\n  textStyle: {\n    fontWeight: 600,\n    fontSize: 16,\n    color: theme.chartColor1,\n  },\n});\n\nexport const BaseChart: React.FC<BaseChartProps> = ({ option, width, height, onEvents, style, ...props }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const [loading, setLoading] = useState(true);\n\n  const chartHeight = height || '400px';\n\n  const defaultOption = {\n    color: getChartColors(themeObject[theme]),\n  };\n\n  useEffect(() => {\n    // TODO FIXME workaround to make sure that parent container is initialized before the chart\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000 / 2);\n  }, []);\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <ReactECharts\n      {...props}\n      option={{ ...defaultOption, ...option }}\n      style={{ ...style, height: chartHeight, minHeight: height === '100%' ? 400 : 'unset', width, zIndex: 0 }}\n      onEvents={onEvents}\n    />\n  );\n};\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAmBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEjE,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,mCAAmC;AAE/D,SAASC,aAAa,QAAQ,8BAA8B;AAAC;AAuB7D,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAa;EAAA,OAAe,CACzDA,KAAK,CAACC,WAAW,EACjBD,KAAK,CAACE,WAAW,EACjBF,KAAK,CAACG,WAAW,EACjBH,KAAK,CAACI,WAAW,EACjBJ,KAAK,CAACK,WAAW,CAClB;AAAA;AAED,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIN,KAAa;EAAA,OAA4B;IAC/EO,WAAW,EAAEP,KAAK,CAACC,WAAW;IAC9BO,WAAW,EAAE,CAAC;IACdC,YAAY,EAAEC,MAAM,CAACC,QAAQ,CAACb,aAAa,CAAC;IAC5Cc,SAAS,EAAE;MACTC,UAAU,EAAE,GAAG;MACfC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAEf,KAAK,CAACC;IACf;EACF,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMe,SAAmC,GAAG,SAAtCA,SAAmC,OAA6D;EAAA;EAAA,IAAvDC,MAAM,QAANA,MAAM;IAAEC,KAAK,QAALA,KAAK;IAAEC,MAAM,QAANA,MAAM;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,KAAK,QAALA,KAAK;IAAKC,KAAK;EACpG,IAAMtB,KAAK,GAAGJ,cAAc,CAAC,UAAC2B,KAAK;IAAA,OAAKA,KAAK,CAACvB,KAAK,CAACA,KAAK;EAAA,EAAC;EAC1D,gBAA8BP,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArC+B,OAAO;IAAEC,UAAU;EAE1B,IAAMC,WAAW,GAAGP,MAAM,IAAI,OAAO;EAErC,IAAMQ,aAAa,GAAG;IACpBZ,KAAK,EAAEhB,cAAc,CAACF,WAAW,CAACG,KAAK,CAAC;EAC1C,CAAC;EAEDR,SAAS,CAAC,YAAM;IACd;IACAoC,UAAU,CAAC,YAAM;MACfH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOD,OAAO,gBACZ,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,SAAG,gBAEX,QAAC,YAAY,kCACPF,KAAK;IACT,MAAM,kCAAOK,aAAa,GAAKV,MAAM,CAAG;IACxC,KAAK,kCAAOI,KAAK;MAAEF,MAAM,EAAEO,WAAW;MAAEG,SAAS,EAAEV,MAAM,KAAK,MAAM,GAAG,GAAG,GAAG,OAAO;MAAED,KAAK,EAALA,KAAK;MAAEY,MAAM,EAAE;IAAC,EAAG;IACzG,QAAQ,EAAEV;EAAS;IAAA;IAAA;IAAA;EAAA,SAEtB;AACH,CAAC;AAAC,GA3BWJ,SAAmC;EAAA,QAChCpB,cAAc;AAAA;AAAA,KADjBoB,SAAmC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}