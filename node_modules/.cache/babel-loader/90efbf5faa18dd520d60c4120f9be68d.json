{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar } from 'antd';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport { paymentStatuses } from 'constants/paymentStatuses';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport * as S from './Payment.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var Payment = function Payment(_ref) {\n  _s();\n\n  var src = _ref.src,\n      recipient = _ref.recipient,\n      date = _ref.date,\n      status = _ref.status,\n      price = _ref.price,\n      currency = _ref.currency;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var paymentStatus = useMemo(function () {\n    return paymentStatuses.find(function (item) {\n      return item.id === status;\n    });\n  }, [status]);\n  return paymentStatus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.Header, {\n      children: [/*#__PURE__*/_jsxDEV(S.AvatarWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: src,\n          alt: recipient,\n          shape: \"circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Text, {\n        children: recipient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.ContentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(S.Item, {\n        children: [/*#__PURE__*/_jsxDEV(S.Subtitle, {\n          children: t('profile.nav.payments.date')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.Text, {\n          children: Dates.format(date, 'LL')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Item, {\n        children: [/*#__PURE__*/_jsxDEV(S.Subtitle, {\n          children: t('profile.nav.payments.status.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Status, {\n          color: defineColorByPriority(paymentStatus.priority),\n          text: t(paymentStatus.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Item, {\n        children: [/*#__PURE__*/_jsxDEV(S.Subtitle, {\n          children: t('profile.nav.payments.date')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.Text, {\n          children: getCurrencyPrice(price, currency)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.DetailsWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        children: t('profile.nav.payments.details')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true) : null;\n};\n\n_s(Payment, \"QnVwRh+AgA9uUAqsqwLWClTZRmg=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment.tsx"],"names":["React","useMemo","useTranslation","Avatar","defineColorByPriority","getCurrencyPrice","paymentStatuses","Dates","Status","S","Button","Payment","src","recipient","date","status","price","currency","t","paymentStatus","find","item","id","format","priority","name"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar } from 'antd';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport { paymentStatuses } from 'constants/paymentStatuses';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport * as S from './Payment.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { CurrencyType } from '@app/interfaces/interfaces';\n\ninterface PaymentProps {\n  src: string;\n  recipient: string;\n  date: number;\n  status: number;\n  price: number;\n  currency: CurrencyType;\n}\n\nexport const Payment: React.FC<PaymentProps> = ({ src, recipient, date, status, price, currency }) => {\n  const { t } = useTranslation();\n\n  const paymentStatus = useMemo(() => paymentStatuses.find((item) => item.id === status), [status]);\n\n  return paymentStatus ? (\n    <>\n      <S.Header>\n        <S.AvatarWrapper>\n          <Avatar src={src} alt={recipient} shape=\"circle\" />\n        </S.AvatarWrapper>\n        <S.Text>{recipient}</S.Text>\n      </S.Header>\n      <S.ContentWrapper>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{Dates.format(date, 'LL')}</S.Text>\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.status.title')}</S.Subtitle>\n          <Status color={defineColorByPriority(paymentStatus.priority)} text={t(paymentStatus.name)} />\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{getCurrencyPrice(price, currency)}</S.Text>\n        </S.Item>\n      </S.ContentWrapper>\n      <S.DetailsWrapper>\n        <Button type=\"link\">{t('profile.nav.payments.details')}</Button>\n      </S.DetailsWrapper>\n    </>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}