{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nimport _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2,\n    _templateObject3;\n\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { TreatmentCalendar } from './TreatmentCalendar/TreatmentCalendar';\nimport { TreatmentPanel } from './TreatmentPanel';\nimport { Dates } from 'constants/Dates';\nimport { Col, Row } from 'antd';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { getUserCalendar } from 'api/calendar.api';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var TreatmentCard = function TreatmentCard() {\n  _s();\n\n  var _useResponsive = useResponsive(),\n      isTablet = _useResponsive.isTablet;\n\n  var _useState = useState(Dates.getToday()),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDate = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDateClicked = _useState4[0],\n      setDateClicked = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      calendar = _useState6[0],\n      setCalendar = _useState6[1];\n\n  var user = useAppSelector(function (state) {\n    return state.user.user;\n  });\n  useEffect(function () {\n    user && getUserCalendar(user === null || user === void 0 ? void 0 : user.id).then(function (res) {\n      return setCalendar(res);\n    });\n  }, [user]);\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n,\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    setDate(function (selectedDate) {\n      return selectedDate.locale(i18n.language);\n    });\n  }, [i18n.language]);\n\n  var handleDecreaseMonth = function handleDecreaseMonth() {\n    setDate(selectedDate.month(selectedDate.month() - 1));\n  };\n\n  var handleIncreaseMonth = function handleIncreaseMonth() {\n    setDate(selectedDate.month(selectedDate.month() + 1));\n  };\n\n  var handleToday = function handleToday() {\n    setDate(Dates.getToday());\n  };\n\n  var calendarItem = /*#__PURE__*/_jsxDEV(TreatmentCalendar, {\n    calendar: calendar,\n    date: selectedDate,\n    setDate: setDate,\n    onDecrease: handleDecreaseMonth,\n    onIncrease: handleIncreaseMonth,\n    onToday: handleToday,\n    setDateClicked: setDateClicked\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n\n  var currentEvent = calendar.find(function (event) {\n    return Dates.getDate(event.date).isSame(selectedDate, 'date');\n  });\n\n  var panelItem = /*#__PURE__*/_jsxDEV(TreatmentPanel, {\n    event: currentEvent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(DashboardCard, {\n    title: t('medical-dashboard.treatmentPlan.title'),\n    children: /*#__PURE__*/_jsxDEV(RowStyled, {\n      gutter: [10, 10],\n      wrap: false,\n      children: isTablet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: calendarItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: panelItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true) : isDateClicked && calendar.some(function (event) {\n        return Dates.getDate(event.date).isSame(selectedDate, 'date');\n      }) ? /*#__PURE__*/_jsxDEV(BackButtonWrapper, {\n        span: 24,\n        children: [panelItem, /*#__PURE__*/_jsxDEV(BackButton, {\n          type: \"text\",\n          icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 43\n          }, _this),\n          onClick: function onClick() {\n            return setDateClicked(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: calendarItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TreatmentCard, \"EV77Ijh7Uzs1D/nvXt211piEXpY=\", false, function () {\n  return [useResponsive, useAppSelector, useTranslation];\n});\n\n_c = TreatmentCard;\nvar BackButtonWrapper = styled(Col)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"])));\n_c2 = BackButtonWrapper;\nvar BackButton = styled(Button)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  color: var(--white);\\n\"])));\n_c3 = BackButton;\nvar RowStyled = styled(Row)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  min-height: 21.75rem;\\n\"])));\n_c4 = RowStyled;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TreatmentCard\");\n$RefreshReg$(_c2, \"BackButtonWrapper\");\n$RefreshReg$(_c3, \"BackButton\");\n$RefreshReg$(_c4, \"RowStyled\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentCard.tsx"],"names":["React","useEffect","useState","useTranslation","useResponsive","TreatmentCalendar","TreatmentPanel","Dates","Col","Row","DashboardCard","getUserCalendar","ArrowLeftOutlined","styled","Button","useAppSelector","TreatmentCard","isTablet","getToday","selectedDate","setDate","isDateClicked","setDateClicked","calendar","setCalendar","user","state","id","then","res","i18n","t","locale","language","handleDecreaseMonth","month","handleIncreaseMonth","handleToday","calendarItem","currentEvent","find","event","getDate","date","isSame","panelItem","some","BackButtonWrapper","BackButton","RowStyled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { TreatmentCalendar } from './TreatmentCalendar/TreatmentCalendar';\nimport { TreatmentPanel } from './TreatmentPanel';\nimport { AppDate, Dates } from 'constants/Dates';\nimport { Col, Row } from 'antd';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { CalendarEvent, getUserCalendar } from 'api/calendar.api';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\n\nexport const TreatmentCard: React.FC = () => {\n  const { isTablet } = useResponsive();\n\n  const [selectedDate, setDate] = useState<AppDate>(Dates.getToday());\n  const [isDateClicked, setDateClicked] = useState(false);\n  const [calendar, setCalendar] = useState<CalendarEvent[]>([]);\n\n  const user = useAppSelector((state) => state.user.user);\n\n  useEffect(() => {\n    user && getUserCalendar(user?.id).then((res) => setCalendar(res));\n  }, [user]);\n\n  const { i18n, t } = useTranslation();\n\n  useEffect(() => {\n    setDate((selectedDate) => selectedDate.locale(i18n.language));\n  }, [i18n.language]);\n\n  const handleDecreaseMonth = () => {\n    setDate(selectedDate.month(selectedDate.month() - 1));\n  };\n\n  const handleIncreaseMonth = () => {\n    setDate(selectedDate.month(selectedDate.month() + 1));\n  };\n\n  const handleToday = () => {\n    setDate(Dates.getToday());\n  };\n\n  const calendarItem = (\n    <TreatmentCalendar\n      calendar={calendar}\n      date={selectedDate}\n      setDate={setDate}\n      onDecrease={handleDecreaseMonth}\n      onIncrease={handleIncreaseMonth}\n      onToday={handleToday}\n      setDateClicked={setDateClicked}\n    />\n  );\n\n  const currentEvent = calendar.find((event) => Dates.getDate(event.date).isSame(selectedDate, 'date'));\n\n  const panelItem = <TreatmentPanel event={currentEvent} />;\n\n  return (\n    <DashboardCard title={t('medical-dashboard.treatmentPlan.title')}>\n      <RowStyled gutter={[10, 10]} wrap={false}>\n        {isTablet ? (\n          <>\n            <Col md={12}>{calendarItem}</Col>\n            <Col md={12}>{panelItem}</Col>\n          </>\n        ) : isDateClicked && calendar.some((event) => Dates.getDate(event.date).isSame(selectedDate, 'date')) ? (\n          <BackButtonWrapper span={24}>\n            {panelItem}\n            <BackButton type=\"text\" icon={<ArrowLeftOutlined />} onClick={() => setDateClicked(false)} />\n          </BackButtonWrapper>\n        ) : (\n          <Col span={24}>{calendarItem}</Col>\n        )}\n      </RowStyled>\n    </DashboardCard>\n  );\n};\n\nconst BackButtonWrapper = styled(Col)`\n  position: relative;\n`;\n\nconst BackButton = styled(Button)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: var(--white);\n`;\n\nconst RowStyled = styled(Row)`\n  min-height: 21.75rem;\n`;\n"]},"metadata":{},"sourceType":"module"}