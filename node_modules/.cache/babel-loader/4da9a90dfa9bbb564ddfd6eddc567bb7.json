{"ast":null,"code":"import _slicedToArray from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useMemo,useState}from'react';import{getCovidData}from'@app/api/covid.api';import{useTranslation}from'react-i18next';import{DashboardCard}from'../DashboardCard/DashboardCard';import{CovidChart}from'./CovidChart';import{Dates}from'@app/constants/Dates';import{notification}from'antd';import{NotFound}from'@app/components/common/NotFound/NotFound';import{jsx as _jsx}from\"react/jsx-runtime\";export var CovidCard=function CovidCard(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(function(){getCovidData().then(function(res){return setData(res===null||res===void 0?void 0:res.data.splice(0,100).reverse());}).catch(function(e){return notification.error({message:e.message});});},[]);var _useMemo=useMemo(function(){var confirmedArr=[];var deathsArr=[];var dateArr=[];data&&(data===null||data===void 0?void 0:data.forEach(function(el){confirmedArr.push(el.new_confirmed);deathsArr.push(el.new_deaths);dateArr.push(Dates.getDate(el.date).format('LL'));}));return{confirmedArr:confirmedArr,deathsArr:deathsArr,dateArr:dateArr};},[data]),confirmedArr=_useMemo.confirmedArr,deathsArr=_useMemo.deathsArr,dateArr=_useMemo.dateArr;var _useMemo2=useMemo(function(){return{confirmed:{title:t('medical-dashboard.covid.casesPerDay'),data:confirmedArr},deaths:{title:t('medical-dashboard.covid.deaths'),data:deathsArr}};},[confirmedArr,deathsArr,t]),confirmed=_useMemo2.confirmed,deaths=_useMemo2.deaths;return/*#__PURE__*/_jsx(DashboardCard,{id:\"covid\",title:t('medical-dashboard.covid.title'),padding:0,children:data?/*#__PURE__*/_jsx(CovidChart,{confirmed:confirmed,deaths:deaths,dateArr:dateArr}):/*#__PURE__*/_jsx(NotFound,{})});};","map":{"version":3,"names":["React","useEffect","useMemo","useState","getCovidData","useTranslation","DashboardCard","CovidChart","Dates","notification","NotFound","CovidCard","data","setData","t","then","res","splice","reverse","catch","e","error","message","confirmedArr","deathsArr","dateArr","forEach","el","push","new_confirmed","new_deaths","getDate","date","format","confirmed","title","deaths"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/covidCard/CovidCard.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { getCovidData, CoronaData } from '@app/api/covid.api';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { CovidChart } from './CovidChart';\nimport { Dates } from '@app/constants/Dates';\nimport { notification } from 'antd';\nimport { NotFound } from '@app/components/common/NotFound/NotFound';\n\nexport const CovidCard: React.FC = () => {\n  const [data, setData] = useState<CoronaData[]>();\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    getCovidData()\n      .then((res) => setData(res?.data.splice(0, 100).reverse()))\n      .catch((e) => notification.error({ message: e.message }));\n  }, []);\n\n  const { confirmedArr, deathsArr, dateArr } = useMemo(() => {\n    const confirmedArr: number[] = [];\n    const deathsArr: number[] = [];\n    const dateArr: string[] = [];\n\n    data &&\n      data?.forEach((el) => {\n        confirmedArr.push(el.new_confirmed);\n        deathsArr.push(el.new_deaths);\n        dateArr.push(Dates.getDate(el.date).format('LL'));\n      });\n\n    return {\n      confirmedArr,\n      deathsArr,\n      dateArr,\n    };\n  }, [data]);\n\n  const { confirmed, deaths } = useMemo(\n    () => ({\n      confirmed: {\n        title: t('medical-dashboard.covid.casesPerDay'),\n        data: confirmedArr,\n      },\n      deaths: {\n        title: t('medical-dashboard.covid.deaths'),\n        data: deathsArr,\n      },\n    }),\n    [confirmedArr, deathsArr, t],\n  );\n\n  return (\n    <DashboardCard id=\"covid\" title={t('medical-dashboard.covid.title')} padding={0}>\n      {data ? <CovidChart confirmed={confirmed} deaths={deaths} dateArr={dateArr} /> : <NotFound />}\n    </DashboardCard>\n  );\n};\n"],"mappings":"0HAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAC3D,OAASC,YAAY,KAAoB,oBAAoB,CAC7D,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,aAAa,KAAQ,gCAAgC,CAC9D,OAASC,UAAU,KAAQ,cAAc,CACzC,OAASC,KAAK,KAAQ,sBAAsB,CAC5C,OAASC,YAAY,KAAQ,MAAM,CACnC,OAASC,QAAQ,KAAQ,0CAA0C,CAAC,2CAEpE,MAAO,IAAMC,UAAmB,CAAG,QAAtBA,UAAmB,EAAS,CACvC,cAAwBR,QAAQ,EAAgB,wCAAzCS,IAAI,eAAEC,OAAO,eAEpB,oBAAcR,cAAc,EAAE,CAAtBS,CAAC,iBAADA,CAAC,CAETb,SAAS,CAAC,UAAM,CACdG,YAAY,EAAE,CACXW,IAAI,CAAC,SAACC,GAAG,QAAKH,QAAO,CAACG,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAE,GAAG,CAAC,CAACC,OAAO,EAAE,CAAC,GAAC,CAC1DC,KAAK,CAAC,SAACC,CAAC,QAAKX,aAAY,CAACY,KAAK,CAAC,CAAEC,OAAO,CAAEF,CAAC,CAACE,OAAQ,CAAC,CAAC,GAAC,CAC7D,CAAC,CAAE,EAAE,CAAC,CAEN,aAA6CpB,OAAO,CAAC,UAAM,CACzD,GAAMqB,aAAsB,CAAG,EAAE,CACjC,GAAMC,UAAmB,CAAG,EAAE,CAC9B,GAAMC,QAAiB,CAAG,EAAE,CAE5Bb,IAAI,GACFA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEc,OAAO,CAAC,SAACC,EAAE,CAAK,CACpBJ,YAAY,CAACK,IAAI,CAACD,EAAE,CAACE,aAAa,CAAC,CACnCL,SAAS,CAACI,IAAI,CAACD,EAAE,CAACG,UAAU,CAAC,CAC7BL,OAAO,CAACG,IAAI,CAACpB,KAAK,CAACuB,OAAO,CAACJ,EAAE,CAACK,IAAI,CAAC,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC,CACnD,CAAC,CAAC,EAEJ,MAAO,CACLV,YAAY,CAAZA,YAAY,CACZC,SAAS,CAATA,SAAS,CACTC,OAAO,CAAPA,OACF,CAAC,CACH,CAAC,CAAE,CAACb,IAAI,CAAC,CAAC,CAjBFW,YAAY,UAAZA,YAAY,CAAEC,SAAS,UAATA,SAAS,CAAEC,OAAO,UAAPA,OAAO,CAmBxC,cAA8BvB,OAAO,CACnC,iBAAO,CACLgC,SAAS,CAAE,CACTC,KAAK,CAAErB,CAAC,CAAC,qCAAqC,CAAC,CAC/CF,IAAI,CAAEW,YACR,CAAC,CACDa,MAAM,CAAE,CACND,KAAK,CAAErB,CAAC,CAAC,gCAAgC,CAAC,CAC1CF,IAAI,CAAEY,SACR,CACF,CAAC,EAAC,CACF,CAACD,YAAY,CAAEC,SAAS,CAAEV,CAAC,CAAC,CAC7B,CAZOoB,SAAS,WAATA,SAAS,CAAEE,MAAM,WAANA,MAAM,CAczB,mBACE,KAAC,aAAa,EAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAEtB,CAAC,CAAC,+BAA+B,CAAE,CAAC,OAAO,CAAE,CAAE,UAC7EF,IAAI,cAAG,KAAC,UAAU,EAAC,SAAS,CAAEsB,SAAU,CAAC,MAAM,CAAEE,MAAO,CAAC,OAAO,CAAEX,OAAQ,EAAG,cAAG,KAAC,QAAQ,IAAG,EAC/E,CAEpB,CAAC"},"metadata":{},"sourceType":"module"}