{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useMemo,useState}from'react';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{Input}from'antd';import{useTranslation}from'react-i18next';import{TagDropdown}from'../TagDropdown/TagDropdown';import*as S from'./NewCardForm.styles';import{ParticipantsDropdown}from'../ParticipantsDropdown/ParticipantsDropdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var formInputs=[{title:'kanban.title',name:'title'},{title:'kanban.description',name:'description'}];export var NewCardForm=function NewCardForm(_ref){var onAdd=_ref.onAdd,onCancel=_ref.onCancel;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedTags=_useState2[0],setSelectedTags=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedParticipants=_useState4[0],setSelectedParticipants=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setLoading=_useState6[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var onFinish=function onFinish(values){setLoading(true);setTimeout(function(){onAdd(_objectSpread(_objectSpread({},values),{},{tags:selectedTags,participants:selectedParticipants}));setLoading(false);},1000);};var formItems=useMemo(function(){return formInputs.map(function(item,index){return/*#__PURE__*/_jsx(S.FormInput,{name:item.name,children:/*#__PURE__*/_jsx(Input,{placeholder:t(item.title),bordered:false})},index);});},[t]);return/*#__PURE__*/_jsx(S.CardWrapper,{children:/*#__PURE__*/_jsxs(BaseButtonsForm,{name:\"addCard\",isFieldsChanged:true,footer:/*#__PURE__*/_jsx(S.FooterButtons,{loading:isLoading,size:\"small\",onCancel:onCancel}),onFinish:onFinish,children:[formItems,/*#__PURE__*/_jsx(TagDropdown,{selectedTags:selectedTags,setSelectedTags:setSelectedTags}),/*#__PURE__*/_jsx(ParticipantsDropdown,{selectedParticipants:selectedParticipants,setSelectedParticipants:setSelectedParticipants})]})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/apps/kanban/newCardForm/NewCardForm/NewCardForm.tsx"],"names":["React","useMemo","useState","BaseButtonsForm","Input","useTranslation","TagDropdown","S","ParticipantsDropdown","formInputs","title","name","NewCardForm","onAdd","onCancel","selectedTags","setSelectedTags","selectedParticipants","setSelectedParticipants","isLoading","setLoading","t","onFinish","values","setTimeout","tags","participants","formItems","map","item","index"],"mappings":"+UAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,CAAyBC,QAAzB,KAAyC,OAAzC,CACA,OAASC,eAAT,KAAgC,8DAAhC,CACA,OAASC,KAAT,KAAsB,MAAtB,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,OAASC,WAAT,KAA4B,4BAA5B,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,sBAAnB,CACA,OAASC,oBAAT,KAAqC,8CAArC,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,CACjB,CACEC,KAAK,CAAE,cADT,CAEEC,IAAI,CAAE,OAFR,CADiB,CAKjB,CACED,KAAK,CAAE,oBADT,CAEEC,IAAI,CAAE,aAFR,CALiB,CAAnB,CAgBA,MAAO,IAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CAC9E,cAAwCZ,QAAQ,CAAQ,EAAR,CAAhD,wCAAOa,YAAP,eAAqBC,eAArB,eACA,eAAwDd,QAAQ,CAAgB,EAAhB,CAAhE,yCAAOe,oBAAP,eAA6BC,uBAA7B,eACA,eAAgChB,QAAQ,CAAC,KAAD,CAAxC,yCAAOiB,SAAP,eAAkBC,UAAlB,eAEA,oBAAcf,cAAc,EAA5B,CAAQgB,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAgB,CAC/BH,UAAU,CAAC,IAAD,CAAV,CACAI,UAAU,CAAC,UAAM,CACfX,KAAK,gCAAMU,MAAN,MAAcE,IAAI,CAAEV,YAApB,CAAkCW,YAAY,CAAET,oBAAhD,GAAL,CACAG,UAAU,CAAC,KAAD,CAAV,CACD,CAHS,CAGP,IAHO,CAAV,CAID,CAND,CAQA,GAAMO,CAAAA,SAAS,CAAG1B,OAAO,CACvB,iBACEQ,CAAAA,UAAU,CAACmB,GAAX,CAAe,SAACC,IAAD,CAAOC,KAAP,qBACb,KAAC,CAAD,CAAG,SAAH,EAAyB,IAAI,CAAED,IAAI,CAAClB,IAApC,uBACE,KAAC,KAAD,EAAO,WAAW,CAAEU,CAAC,CAACQ,IAAI,CAACnB,KAAN,CAArB,CAAmC,QAAQ,CAAE,KAA7C,EADF,EAAkBoB,KAAlB,CADa,EAAf,CADF,EADuB,CAOvB,CAACT,CAAD,CAPuB,CAAzB,CAUA,mBACE,KAAC,CAAD,CAAG,WAAH,wBACE,MAAC,eAAD,EACE,IAAI,CAAC,SADP,CAEE,eAAe,KAFjB,CAGE,MAAM,cAAE,KAAC,CAAD,CAAG,aAAH,EAAiB,OAAO,CAAEF,SAA1B,CAAqC,IAAI,CAAC,OAA1C,CAAkD,QAAQ,CAAEL,QAA5D,EAHV,CAIE,QAAQ,CAAEQ,QAJZ,WAMGK,SANH,cAOE,KAAC,WAAD,EAAa,YAAY,CAAEZ,YAA3B,CAAyC,eAAe,CAAEC,eAA1D,EAPF,cAQE,KAAC,oBAAD,EACE,oBAAoB,CAAEC,oBADxB,CAEE,uBAAuB,CAAEC,uBAF3B,EARF,GADF,EADF,CAiBD,CA1CM","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CardState, Tag, Participant } from '../../interfaces';\nimport { TagDropdown } from '../TagDropdown/TagDropdown';\nimport * as S from './NewCardForm.styles';\nimport { ParticipantsDropdown } from '../ParticipantsDropdown/ParticipantsDropdown';\n\nconst formInputs = [\n  {\n    title: 'kanban.title',\n    name: 'title',\n  },\n  {\n    title: 'kanban.description',\n    name: 'description',\n  },\n];\n\ninterface NewCardFormProps {\n  onAdd: (state: CardState) => void;\n  onCancel: () => void;\n}\n\nexport const NewCardForm: React.FC<NewCardFormProps> = ({ onAdd, onCancel }) => {\n  const [selectedTags, setSelectedTags] = useState<Tag[]>([]);\n  const [selectedParticipants, setSelectedParticipants] = useState<Participant[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const { t } = useTranslation();\n\n  const onFinish = (values: []) => {\n    setLoading(true);\n    setTimeout(() => {\n      onAdd({ ...values, tags: selectedTags, participants: selectedParticipants });\n      setLoading(false);\n    }, 1000);\n  };\n\n  const formItems = useMemo(\n    () =>\n      formInputs.map((item, index) => (\n        <S.FormInput key={index} name={item.name}>\n          <Input placeholder={t(item.title)} bordered={false} />\n        </S.FormInput>\n      )),\n    [t],\n  );\n\n  return (\n    <S.CardWrapper>\n      <BaseButtonsForm\n        name=\"addCard\"\n        isFieldsChanged\n        footer={<S.FooterButtons loading={isLoading} size=\"small\" onCancel={onCancel} />}\n        onFinish={onFinish}\n      >\n        {formItems}\n        <TagDropdown selectedTags={selectedTags} setSelectedTags={setSelectedTags} />\n        <ParticipantsDropdown\n          selectedParticipants={selectedParticipants}\n          setSelectedParticipants={setSelectedParticipants}\n        />\n      </BaseButtonsForm>\n    </S.CardWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}