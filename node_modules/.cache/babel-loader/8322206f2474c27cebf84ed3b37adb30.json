{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Col,Row}from'antd';import{RecentActivityHeader}from'@app/components/nft-dashboard/recentActivity/RecentActivityHeader/RecentActivityHeader';import{RecentActivityFeed}from'@app/components/nft-dashboard/recentActivity/recentActivityFeed/RecentActivityFeed';import{RecentActivityFilter}from'@app/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityFilter';import{useResponsive}from'@app/hooks/useResponsive';import{getActivities}from'@app/api/activity.api';import*as S from'./RecentActivity.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var RecentActivity=function RecentActivity(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),activity=_useState2[0],setActivity=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filteredActivity=_useState4[0],setFilteredActivity=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,1),hasMore=_useState6[0];var _useState7=useState({status:[]}),_useState8=_slicedToArray(_useState7,2),filters=_useState8[0],setFilters=_useState8[1];var _useResponsive=useResponsive(),isDesktop=_useResponsive.isDesktop;useEffect(function(){getActivities().then(function(res){return setActivity(res);});},[]);var next=function next(){getActivities().then(function(newActivity){return setActivity(activity.concat(newActivity));});};useEffect(function(){if(filters.status.length>0){setFilteredActivity(activity.filter(function(item){return filters.status.some(function(filter){return filter===item.status;});}));}else{setFilteredActivity(activity);}},[filters.status,activity]);return/*#__PURE__*/_jsxs(Row,{gutter:[30,0],children:[/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(RecentActivityHeader,{filters:filters,setFilters:setFilters})}),/*#__PURE__*/_jsx(Col,{xs:24,sm:24,md:24,xl:16,children:/*#__PURE__*/_jsx(RecentActivityFeed,{activity:filteredActivity,hasMore:hasMore,next:next})}),isDesktop&&/*#__PURE__*/_jsx(S.FilterCol,{span:8,children:/*#__PURE__*/_jsx(RecentActivityFilter,{filters:filters,setFilters:setFilters,withWrapper:true})})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recentActivity/RecentActivity.tsx"],"names":["React","useEffect","useState","Col","Row","RecentActivityHeader","RecentActivityFeed","RecentActivityFilter","useResponsive","getActivities","S","RecentActivity","activity","setActivity","filteredActivity","setFilteredActivity","hasMore","status","filters","setFilters","isDesktop","then","res","next","newActivity","concat","length","filter","item","some"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,MAAzB,CACA,OAASC,oBAAT,KAAqC,wFAArC,CACA,OAASC,kBAAT,KAAmC,oFAAnC,CACA,OAASC,oBAAT,KAAqC,yFAArC,CACA,OAASC,aAAT,KAA8B,0BAA9B,CACA,OAAmBC,aAAnB,KAAwC,uBAAxC,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,yBAAnB,C,wFAMA,MAAO,IAAMC,CAAAA,cAAwB,CAAG,QAA3BA,CAAAA,cAA2B,EAAM,CAC5C,cAAgCT,QAAQ,CAAa,EAAb,CAAxC,wCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAAgDX,QAAQ,CAAa,EAAb,CAAxD,yCAAOY,gBAAP,eAAyBC,mBAAzB,eACA,eAAkBb,QAAQ,CAAC,IAAD,CAA1B,yCAAOc,OAAP,eAEA,eAA8Bd,QAAQ,CAA4B,CAChEe,MAAM,CAAE,EADwD,CAA5B,CAAtC,yCAAOC,OAAP,eAAgBC,UAAhB,eAIA,mBAAsBX,aAAa,EAAnC,CAAQY,SAAR,gBAAQA,SAAR,CAEAnB,SAAS,CAAC,UAAM,CACdQ,aAAa,GAAGY,IAAhB,CAAqB,SAACC,GAAD,QAAST,CAAAA,WAAW,CAACS,GAAD,CAApB,EAArB,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjBd,aAAa,GAAGY,IAAhB,CAAqB,SAACG,WAAD,QAAiBX,CAAAA,WAAW,CAACD,QAAQ,CAACa,MAAT,CAAgBD,WAAhB,CAAD,CAA5B,EAArB,EACD,CAFD,CAIAvB,SAAS,CAAC,UAAM,CACd,GAAIiB,OAAO,CAACD,MAAR,CAAeS,MAAf,CAAwB,CAA5B,CAA+B,CAC7BX,mBAAmB,CAACH,QAAQ,CAACe,MAAT,CAAgB,SAACC,IAAD,QAAUV,CAAAA,OAAO,CAACD,MAAR,CAAeY,IAAf,CAAoB,SAACF,MAAD,QAAYA,CAAAA,MAAM,GAAKC,IAAI,CAACX,MAA5B,EAApB,CAAV,EAAhB,CAAD,CAAnB,CACD,CAFD,IAEO,CACLF,mBAAmB,CAACH,QAAD,CAAnB,CACD,CACF,CANQ,CAMN,CAACM,OAAO,CAACD,MAAT,CAAiBL,QAAjB,CANM,CAAT,CAQA,mBACE,MAAC,GAAD,EAAK,MAAM,CAAE,CAAC,EAAD,CAAK,CAAL,CAAb,wBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,oBAAD,EAAsB,OAAO,CAAEM,OAA/B,CAAwC,UAAU,CAAEC,UAApD,EADF,EADF,cAKE,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,CAAqB,EAAE,CAAE,EAAzB,CAA6B,EAAE,CAAE,EAAjC,uBACE,KAAC,kBAAD,EAAoB,QAAQ,CAAEL,gBAA9B,CAAgD,OAAO,CAAEE,OAAzD,CAAkE,IAAI,CAAEO,IAAxE,EADF,EALF,CASGH,SAAS,eACR,KAAC,CAAD,CAAG,SAAH,EAAa,IAAI,CAAE,CAAnB,uBACE,KAAC,oBAAD,EAAsB,OAAO,CAAEF,OAA/B,CAAwC,UAAU,CAAEC,UAApD,CAAgE,WAAW,KAA3E,EADF,EAVJ,GADF,CAiBD,CA5CM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { RecentActivityHeader } from '@app/components/nft-dashboard/recentActivity/RecentActivityHeader/RecentActivityHeader';\nimport { RecentActivityFeed } from '@app/components/nft-dashboard/recentActivity/recentActivityFeed/RecentActivityFeed';\nimport { RecentActivityFilter } from '@app/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityFilter';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { Activity, getActivities } from '@app/api/activity.api';\nimport * as S from './RecentActivity.styles';\n\nexport interface RecentActivityFilterState {\n  status: string[];\n}\n\nexport const RecentActivity: React.FC = () => {\n  const [activity, setActivity] = useState<Activity[]>([]);\n  const [filteredActivity, setFilteredActivity] = useState<Activity[]>([]);\n  const [hasMore] = useState(true);\n\n  const [filters, setFilters] = useState<RecentActivityFilterState>({\n    status: [],\n  });\n\n  const { isDesktop } = useResponsive();\n\n  useEffect(() => {\n    getActivities().then((res) => setActivity(res));\n  }, []);\n\n  const next = () => {\n    getActivities().then((newActivity) => setActivity(activity.concat(newActivity)));\n  };\n\n  useEffect(() => {\n    if (filters.status.length > 0) {\n      setFilteredActivity(activity.filter((item) => filters.status.some((filter) => filter === item.status)));\n    } else {\n      setFilteredActivity(activity);\n    }\n  }, [filters.status, activity]);\n\n  return (\n    <Row gutter={[30, 0]}>\n      <Col span={24}>\n        <RecentActivityHeader filters={filters} setFilters={setFilters} />\n      </Col>\n\n      <Col xs={24} sm={24} md={24} xl={16}>\n        <RecentActivityFeed activity={filteredActivity} hasMore={hasMore} next={next} />\n      </Col>\n\n      {isDesktop && (\n        <S.FilterCol span={8}>\n          <RecentActivityFilter filters={filters} setFilters={setFilters} withWrapper />\n        </S.FilterCol>\n      )}\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}