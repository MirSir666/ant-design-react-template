{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React from'react';import styled,{css}from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Burger=function Burger(_ref){var className=_ref.className,onClick=_ref.onClick;return/*#__PURE__*/_jsxs(\"svg\",{width:\"1em\",height:\"1em\",viewBox:\"280 215 400 220\",fill:\"currentColor\",className:className,onClick:onClick,children:[/*#__PURE__*/_jsx(\"path\",{d:\"M300,220 C300,220 520,220 540,220 C740,220 640,540 520,420 C440,340 300,200 300,200\",id:\"top\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M300,320 L540,320\",id:\"middle\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M300,210 C300,210 520,210 540,210 C740,210 640,530 520,410 C440,330 300,190 300,190\",id:\"bottom\",transform:\"translate(480, 320) scale(1, -1) translate(-480, -318) \"})]});};export var BurgerIcon=styled(Burger)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  transform: translate3d(0, 0, 0);\\n\\n  path {\\n    fill: none;\\n    transition: stroke-dashoffset 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25),\\n      stroke-dasharray 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25);\\n    stroke-width: 30px;\\n    stroke-linecap: round;\\n    stroke: currentColor;\\n    stroke-dashoffset: 0;\\n\\n    &#top,\\n    &#bottom {\\n      stroke-dasharray: 240px 950px;\\n    }\\n    &#middle {\\n      stroke-dasharray: 240px 240px;\\n    }\\n\\n    \",\"\\n  }\\n\"])),function(props){return props.isCross&&css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n        &#top,\\n        &#bottom {\\n          stroke-dashoffset: -650px;\\n        }\\n        &#middle {\\n          stroke-dashoffset: -115px;\\n          stroke-dasharray: 1px 220px;\\n        }\\n      \"])));});","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/Burger/BurgerIcon.tsx"],"names":["React","styled","css","Burger","className","onClick","BurgerIcon","props","isCross"],"mappings":"6NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,mBAA5B,C,wFAMA,MAAO,IAAMC,CAAAA,MAA6B,CAAG,QAAhCA,CAAAA,MAAgC,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,OAAd,MAAcA,OAAd,oBAC3C,aAAK,KAAK,CAAC,KAAX,CAAiB,MAAM,CAAC,KAAxB,CAA8B,OAAO,CAAC,iBAAtC,CAAwD,IAAI,CAAC,cAA7D,CAA4E,SAAS,CAAED,SAAvF,CAAkG,OAAO,CAAEC,OAA3G,wBACE,aAAM,CAAC,CAAC,qFAAR,CAA8F,EAAE,CAAC,KAAjG,EADF,cAEE,aAAM,CAAC,CAAC,mBAAR,CAA4B,EAAE,CAAC,QAA/B,EAFF,cAGE,aACE,CAAC,CAAC,qFADJ,CAEE,EAAE,CAAC,QAFL,CAGE,SAAS,CAAC,yDAHZ,EAHF,GAD2C,EAAtC,CAYP,MAAO,IAAMC,CAAAA,UAAU,CAAGL,MAAM,CAACE,MAAD,CAAT,8iBAqBjB,SAACI,KAAD,QACAA,CAAAA,KAAK,CAACC,OAAN,EACAN,GADA,6QADA,EArBiB,CAAhB","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface BurgerProps {\n  className?: string;\n  onClick: () => void;\n}\nexport const Burger: React.FC<BurgerProps> = ({ className, onClick }) => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"280 215 400 220\" fill=\"currentColor\" className={className} onClick={onClick}>\n    <path d=\"M300,220 C300,220 520,220 540,220 C740,220 640,540 520,420 C440,340 300,200 300,200\" id=\"top\" />\n    <path d=\"M300,320 L540,320\" id=\"middle\" />\n    <path\n      d=\"M300,210 C300,210 520,210 540,210 C740,210 640,530 520,410 C440,330 300,190 300,190\"\n      id=\"bottom\"\n      transform=\"translate(480, 320) scale(1, -1) translate(-480, -318) \"\n    />\n  </svg>\n);\n\nexport const BurgerIcon = styled(Burger)<{ isCross: boolean }>`\n  cursor: pointer;\n  transform: translate3d(0, 0, 0);\n\n  path {\n    fill: none;\n    transition: stroke-dashoffset 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25),\n      stroke-dasharray 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25);\n    stroke-width: 30px;\n    stroke-linecap: round;\n    stroke: currentColor;\n    stroke-dashoffset: 0;\n\n    &#top,\n    &#bottom {\n      stroke-dasharray: 240px 950px;\n    }\n    &#middle {\n      stroke-dasharray: 240px 240px;\n    }\n\n    ${(props) =>\n      props.isCross &&\n      css`\n        &#top,\n        &#bottom {\n          stroke-dashoffset: -650px;\n        }\n        &#middle {\n          stroke-dashoffset: -115px;\n          stroke-dasharray: 1px 220px;\n        }\n      `}\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}