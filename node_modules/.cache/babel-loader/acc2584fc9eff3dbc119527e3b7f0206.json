{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { useAppSelector } from './reduxHooks';\nimport { ConfigProvider } from 'antd';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nexport var useThemeWatcher = function useThemeWatcher() {\n  _s();\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var root = useRef(document.querySelector(':root'));\n  useEffect(function () {\n    var html = root.current;\n    if (html) {\n      html.setAttribute('data-no-transition', '');\n      html.setAttribute('data-theme', theme);\n      // remove transition after layout update\n      requestAnimationFrame(function () {\n        html.removeAttribute('data-no-transition');\n      });\n    }\n    ConfigProvider.config({\n      theme: {\n        primaryColor: themeObject[theme].primary,\n        infoColor: themeObject[theme].primary,\n        successColor: themeObject[theme].success,\n        errorColor: themeObject[theme].error,\n        warningColor: themeObject[theme].warning\n      }\n    });\n  }, [theme]);\n};\n_s(useThemeWatcher, \"P/0THYSQfWr1fXDuacStdoSnEP8=\", false, function () {\n  return [useAppSelector];\n});","map":{"version":3,"names":["useEffect","useRef","useAppSelector","ConfigProvider","themeObject","useThemeWatcher","theme","state","root","document","querySelector","html","current","setAttribute","requestAnimationFrame","removeAttribute","config","primaryColor","primary","infoColor","successColor","success","errorColor","error","warningColor","warning"],"sources":["/workspace/ant-design-react-template/src/hooks/useThemeWatcher.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useAppSelector } from './reduxHooks';\nimport { ConfigProvider } from 'antd';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\nexport const useThemeWatcher = (): void => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const root = useRef(document.querySelector(':root'));\n\n  useEffect(() => {\n    const html = root.current;\n    if (html) {\n      html.setAttribute('data-no-transition', '');\n      html.setAttribute('data-theme', theme);\n      // remove transition after layout update\n      requestAnimationFrame(() => {\n        html.removeAttribute('data-no-transition');\n      });\n    }\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: themeObject[theme].primary,\n        infoColor: themeObject[theme].primary,\n        successColor: themeObject[theme].success,\n        errorColor: themeObject[theme].error,\n        warningColor: themeObject[theme].warning,\n      },\n    });\n  }, [theme]);\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,cAAc,QAAQ,cAAc;AAC7C,SAASC,cAAc,QAAQ,MAAM;AACrC,SAASC,WAAW,QAAQ,mCAAmC;AAE/D,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAe;EAAA;EACzC,IAAMC,KAAK,GAAGJ,cAAc,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK,CAACD,KAAK,CAACA,KAAK;EAAA,EAAC;EAC1D,IAAME,IAAI,GAAGP,MAAM,CAACQ,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAAC;EAEpDV,SAAS,CAAC,YAAM;IACd,IAAMW,IAAI,GAAGH,IAAI,CAACI,OAAO;IACzB,IAAID,IAAI,EAAE;MACRA,IAAI,CAACE,YAAY,CAAC,oBAAoB,EAAE,EAAE,CAAC;MAC3CF,IAAI,CAACE,YAAY,CAAC,YAAY,EAAEP,KAAK,CAAC;MACtC;MACAQ,qBAAqB,CAAC,YAAM;QAC1BH,IAAI,CAACI,eAAe,CAAC,oBAAoB,CAAC;MAC5C,CAAC,CAAC;IACJ;IAEAZ,cAAc,CAACa,MAAM,CAAC;MACpBV,KAAK,EAAE;QACLW,YAAY,EAAEb,WAAW,CAACE,KAAK,CAAC,CAACY,OAAO;QACxCC,SAAS,EAAEf,WAAW,CAACE,KAAK,CAAC,CAACY,OAAO;QACrCE,YAAY,EAAEhB,WAAW,CAACE,KAAK,CAAC,CAACe,OAAO;QACxCC,UAAU,EAAElB,WAAW,CAACE,KAAK,CAAC,CAACiB,KAAK;QACpCC,YAAY,EAAEpB,WAAW,CAACE,KAAK,CAAC,CAACmB;MACnC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACnB,KAAK,CAAC,CAAC;AACb,CAAC;AAAC,GAzBWD,eAAe;EAAA,QACZH,cAAc;AAAA"},"metadata":{},"sourceType":"module"}