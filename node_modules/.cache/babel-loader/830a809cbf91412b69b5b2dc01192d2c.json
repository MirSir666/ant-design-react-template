{"ast":null,"code":"import React,{useMemo}from'react';import{DayjsDatePicker}from'@app/components/common/pickers/DayjsDatePicker';import{Dates}from'@app/constants/Dates';import{jsx as _jsx}from\"react/jsx-runtime\";var clearDate=Dates.getToday().hour(0).minute(0).second(0).millisecond(0);var clearDateMs=+clearDate;export var TimeRangePicker=function TimeRangePicker(_ref){var timeRange=_ref.timeRange,setTimeRange=_ref.setTimeRange;var timeRangePrepared=useMemo(function(){return timeRange.map(function(time){return clearDate.add(time);});},[timeRange]);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar onChange=function onChange(timeRange){var timeRangeSinceTodayMs=timeRange.map(function(time){return time.subtract(clearDateMs,'ms');}).map(function(time){return+time;});setTimeRange(timeRangeSinceTodayMs);};return/*#__PURE__*/_jsx(DayjsDatePicker.RangePicker,{value:[timeRangePrepared[0],timeRangePrepared[1]],picker:\"time\",format:\"HH:mm\",onChange:onChange,allowClear:false,order:false});};","map":{"version":3,"names":["React","useMemo","DayjsDatePicker","Dates","clearDate","getToday","hour","minute","second","millisecond","clearDateMs","TimeRangePicker","timeRange","setTimeRange","timeRangePrepared","map","time","add","onChange","timeRangeSinceTodayMs","subtract"],"sources":["/workspace/ant-design-react-template/src/components/common/pickers/TimeRangePicker.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { DayjsDatePicker } from '@app/components/common/pickers/DayjsDatePicker';\nimport { AppDate, Dates } from '@app/constants/Dates';\n\nconst clearDate = Dates.getToday().hour(0).minute(0).second(0).millisecond(0);\nconst clearDateMs = +clearDate;\n\ninterface TimePickerProps {\n  timeRange: number[];\n  setTimeRange: (timeRange: number[]) => void;\n}\n\nexport const TimeRangePicker: React.FC<TimePickerProps> = ({ timeRange, setTimeRange }) => {\n  const timeRangePrepared = useMemo(() => timeRange.map((time) => clearDate.add(time)), [timeRange]);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onChange = (timeRange: any) => {\n    const timeRangeSinceTodayMs = timeRange\n      .map((time: AppDate) => time.subtract(clearDateMs, 'ms'))\n      .map((time: AppDate) => +time);\n\n    setTimeRange(timeRangeSinceTodayMs);\n  };\n\n  return (\n    <DayjsDatePicker.RangePicker\n      value={[timeRangePrepared[0], timeRangePrepared[1]]}\n      picker=\"time\"\n      format=\"HH:mm\"\n      onChange={onChange}\n      allowClear={false}\n      order={false}\n    />\n  );\n};\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,OAAO,KAAQ,OAAO,CACtC,OAASC,eAAe,KAAQ,gDAAgD,CAChF,OAAkBC,KAAK,KAAQ,sBAAsB,CAAC,2CAEtD,GAAMC,UAAS,CAAGD,KAAK,CAACE,QAAQ,EAAE,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAC7E,GAAMC,YAAW,CAAG,CAACN,SAAS,CAO9B,MAAO,IAAMO,gBAA0C,CAAG,QAA7CA,gBAA0C,MAAoC,IAA9BC,UAAS,MAATA,SAAS,CAAEC,YAAY,MAAZA,YAAY,CAClF,GAAMC,kBAAiB,CAAGb,OAAO,CAAC,iBAAMW,UAAS,CAACG,GAAG,CAAC,SAACC,IAAI,QAAKZ,UAAS,CAACa,GAAG,CAACD,IAAI,CAAC,GAAC,GAAE,CAACJ,SAAS,CAAC,CAAC,CAElG;AACA,GAAMM,SAAQ,CAAG,QAAXA,SAAQ,CAAIN,SAAc,CAAK,CACnC,GAAMO,sBAAqB,CAAGP,SAAS,CACpCG,GAAG,CAAC,SAACC,IAAa,QAAKA,KAAI,CAACI,QAAQ,CAACV,WAAW,CAAE,IAAI,CAAC,GAAC,CACxDK,GAAG,CAAC,SAACC,IAAa,QAAK,CAACA,IAAI,GAAC,CAEhCH,YAAY,CAACM,qBAAqB,CAAC,CACrC,CAAC,CAED,mBACE,KAAC,eAAe,CAAC,WAAW,EAC1B,KAAK,CAAE,CAACL,iBAAiB,CAAC,CAAC,CAAC,CAAEA,iBAAiB,CAAC,CAAC,CAAC,CAAE,CACpD,MAAM,CAAC,MAAM,CACb,MAAM,CAAC,OAAO,CACd,QAAQ,CAAEI,QAAS,CACnB,UAAU,CAAE,KAAM,CAClB,KAAK,CAAE,KAAM,EACb,CAEN,CAAC"},"metadata":{},"sourceType":"module"}