{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import styled from'styled-components';import{CloseOutlined}from'@ant-design/icons';import{Checkbox}from'antd';import{FONT_SIZE}from'@app/styles/themes/constants';export var EditTagPopover=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 1.25rem 1.5625rem;\\n  max-width: 14.375rem;\\n  min-width: 14.375rem;\\n  gap: 0.625rem;\\n  display: flex;\\n  background: var(--background-color);\\n  flex-direction: column;\\n  border-radius: 0.625rem;\\n  z-index: 1;\\n  filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.2));\\n\"])));export var EditTagPopoverLine=styled.span(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  line-height: 1.25rem;\\n  display: flex;\\n  &:last-child {\\n    padding-bottom: 0;\\n  }\\n  align-items: center;\\n  cursor: pointer;\\n\"])));export var PopoverCheckbox=styled(Checkbox)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  & .ant-checkbox .ant-checkbox-inner {\\n    border-radius: 3px;\\n    height: 1.375rem;\\n    width: 1.375rem;\\n    border-color: var(--primary-color);\\n  }\\n  & .ant-checkbox-checked .ant-checkbox-inner::after {\\n    left: 0.375rem;\\n  }\\n\"])));export var TagWrapper=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  height: 1.875rem;\\n  background-color: \",\";\\n  padding: 0.3125rem 0.625rem;\\n  color: var(--text-secondary-color);\\n  border-radius: 0.5rem;\\n  font-size: \",\";\\n  margin-left: 1rem;\\n\"])),function(props){return\"var(--\".concat(props.backgroundColor,\"-color)\");},FONT_SIZE.xs);export var RemoveTagWrapper=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 1rem;\\n  top: 1rem;\\n  cursor: pointer;\\n\"])));export var RemoveTag=styled(CloseOutlined)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  color: var(--primary-color);\\n  width: 0.875rem;\\n  height: 0.875rem;\\n\"])));export var TagsWrapper=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 0.625rem;\\n  margin-bottom: 1rem;\\n  min-height: 1.25rem;\\n  align-items: center;\\n\"])));export var TagPlusWrapper=styled.span(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n  height: 1.875rem;\\n  align-items: center;\\n  color: var(--lightgrey);\\n  font-size: \",\";\\n\"])),FONT_SIZE.xxl);export var AddTag=styled.span(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  font-size: \",\";\\n  line-height: 1.25rem;\\n  text-decoration: underline;\\n  color: var(--text-light-color);\\n\"])),FONT_SIZE.xs);","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/apps/kanban/newCardForm/TagDropdown/TagDropdown.styles.ts"],"names":["styled","CloseOutlined","Checkbox","FONT_SIZE","EditTagPopover","div","EditTagPopoverLine","span","PopoverCheckbox","TagWrapper","props","backgroundColor","xs","RemoveTagWrapper","RemoveTag","TagsWrapper","TagPlusWrapper","xxl","AddTag"],"mappings":"oVAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,aAAT,KAA8B,mBAA9B,CACA,OAASC,QAAT,KAAyB,MAAzB,CACA,OAASC,SAAT,KAA0B,8BAA1B,CAMA,MAAO,IAAMC,CAAAA,cAAc,CAAGJ,MAAM,CAACK,GAAV,0VAApB,CAaP,MAAO,IAAMC,CAAAA,kBAAkB,CAAGN,MAAM,CAACO,IAAV,2MAAxB,CAUP,MAAO,IAAMC,CAAAA,eAAe,CAAGR,MAAM,CAACE,QAAD,CAAT,oTAArB,CAYP,MAAO,IAAMO,CAAAA,UAAU,CAAGT,MAAM,CAACO,IAAV,8PAED,SAACG,KAAD,wBAAoBA,KAAK,CAACC,eAA1B,aAFC,CAMRR,SAAS,CAACS,EANF,CAAhB,CAUP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGb,MAAM,CAACK,GAAV,8IAAtB,CAOP,MAAO,IAAMS,CAAAA,SAAS,CAAGd,MAAM,CAACC,aAAD,CAAT,8IAAf,CAMP,MAAO,IAAMc,CAAAA,WAAW,CAAGf,MAAM,CAACK,GAAV,qMAAjB,CASP,MAAO,IAAMW,CAAAA,cAAc,CAAGhB,MAAM,CAACO,IAAV,mLAKZJ,SAAS,CAACc,GALE,CAApB,CAQP,MAAO,IAAMC,CAAAA,MAAM,CAAGlB,MAAM,CAACO,IAAV,mLACJJ,SAAS,CAACS,EADN,CAAZ","sourcesContent":["import styled from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Checkbox } from 'antd';\nimport { FONT_SIZE } from '@app/styles/themes/constants';\n\ninterface TagProps {\n  backgroundColor: 'error' | 'warning' | 'success' | 'primary';\n}\n\nexport const EditTagPopover = styled.div`\n  padding: 1.25rem 1.5625rem;\n  max-width: 14.375rem;\n  min-width: 14.375rem;\n  gap: 0.625rem;\n  display: flex;\n  background: var(--background-color);\n  flex-direction: column;\n  border-radius: 0.625rem;\n  z-index: 1;\n  filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.2));\n`;\n\nexport const EditTagPopoverLine = styled.span`\n  line-height: 1.25rem;\n  display: flex;\n  &:last-child {\n    padding-bottom: 0;\n  }\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const PopoverCheckbox = styled(Checkbox)`\n  & .ant-checkbox .ant-checkbox-inner {\n    border-radius: 3px;\n    height: 1.375rem;\n    width: 1.375rem;\n    border-color: var(--primary-color);\n  }\n  & .ant-checkbox-checked .ant-checkbox-inner::after {\n    left: 0.375rem;\n  }\n`;\n\nexport const TagWrapper = styled.span<TagProps>`\n  height: 1.875rem;\n  background-color: ${(props) => `var(--${props.backgroundColor}-color)`};\n  padding: 0.3125rem 0.625rem;\n  color: var(--text-secondary-color);\n  border-radius: 0.5rem;\n  font-size: ${FONT_SIZE.xs};\n  margin-left: 1rem;\n`;\n\nexport const RemoveTagWrapper = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n  cursor: pointer;\n`;\n\nexport const RemoveTag = styled(CloseOutlined)`\n  color: var(--primary-color);\n  width: 0.875rem;\n  height: 0.875rem;\n`;\n\nexport const TagsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.625rem;\n  margin-bottom: 1rem;\n  min-height: 1.25rem;\n  align-items: center;\n`;\n\nexport const TagPlusWrapper = styled.span`\n  display: flex;\n  height: 1.875rem;\n  align-items: center;\n  color: var(--lightgrey);\n  font-size: ${FONT_SIZE.xxl};\n`;\n\nexport const AddTag = styled.span`\n  font-size: ${FONT_SIZE.xs};\n  line-height: 1.25rem;\n  text-decoration: underline;\n  color: var(--text-light-color);\n`;\n"]},"metadata":{},"sourceType":"module"}