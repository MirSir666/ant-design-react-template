{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Header}from'../../../header/Header';import MainSider from'../sider/MainSider/MainSider';import MainContent from'../MainContent/MainContent';import{MainHeader}from'../MainHeader/MainHeader';import*as S from'./MainLayout.styles';import{Outlet,useLocation}from'react-router-dom';import{MEDICAL_DASHBOARD_PATH,NFT_DASHBOARD_PATH}from'@app/components/router/AppRouter';import{useResponsive}from'@app/hooks/useResponsive';import{References}from'@app/components/common/References/References';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainLayout=function MainLayout(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isTwoColumnsLayout=_useState2[0],setIsTwoColumnsLayout=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),siderCollapsed=_useState4[0],setSiderCollapsed=_useState4[1];var _useResponsive=useResponsive(),isDesktop=_useResponsive.isDesktop;var location=useLocation();var toggleSider=function toggleSider(){return setSiderCollapsed(!siderCollapsed);};useEffect(function(){setIsTwoColumnsLayout([MEDICAL_DASHBOARD_PATH,NFT_DASHBOARD_PATH].includes(location.pathname)&&isDesktop);},[location.pathname,isDesktop]);return/*#__PURE__*/_jsxs(S.LayoutMaster,{children:[/*#__PURE__*/_jsx(MainSider,{isCollapsed:siderCollapsed,setCollapsed:setSiderCollapsed}),/*#__PURE__*/_jsxs(S.LayoutMain,{children:[/*#__PURE__*/_jsx(MainHeader,{isTwoColumnsLayout:isTwoColumnsLayout,children:/*#__PURE__*/_jsx(Header,{toggleSider:toggleSider,isSiderOpened:!siderCollapsed,isTwoColumnsLayout:isTwoColumnsLayout})}),/*#__PURE__*/_jsxs(MainContent,{id:\"main-content\",$isTwoColumnsLayout:isTwoColumnsLayout,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Outlet,{})}),!isTwoColumnsLayout&&/*#__PURE__*/_jsx(References,{})]})]})]});};export default MainLayout;","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/layouts/main/MainLayout/MainLayout.tsx"],"names":["React","useEffect","useState","Header","MainSider","MainContent","MainHeader","S","Outlet","useLocation","MEDICAL_DASHBOARD_PATH","NFT_DASHBOARD_PATH","useResponsive","References","MainLayout","isTwoColumnsLayout","setIsTwoColumnsLayout","siderCollapsed","setSiderCollapsed","isDesktop","location","toggleSider","includes","pathname"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,qBAAnB,CACA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,kBAApC,CACA,OAASC,sBAAT,CAAiCC,kBAAjC,KAA2D,kCAA3D,CACA,OAASC,aAAT,KAA8B,0BAA9B,CACA,OAASC,UAAT,KAA2B,8CAA3B,C,wFAEA,GAAMC,CAAAA,UAAoB,CAAG,QAAvBA,CAAAA,UAAuB,EAAM,CACjC,cAAoDZ,QAAQ,CAAC,IAAD,CAA5D,wCAAOa,kBAAP,eAA2BC,qBAA3B,eACA,eAA4Cd,QAAQ,CAAC,IAAD,CAApD,yCAAOe,cAAP,eAAuBC,iBAAvB,eACA,mBAAsBN,aAAa,EAAnC,CAAQO,SAAR,gBAAQA,SAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA,GAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMH,CAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAvB,EAApB,CAEAhB,SAAS,CAAC,UAAM,CACde,qBAAqB,CAAC,CAACN,sBAAD,CAAyBC,kBAAzB,EAA6CW,QAA7C,CAAsDF,QAAQ,CAACG,QAA/D,GAA4EJ,SAA7E,CAArB,CACD,CAFQ,CAEN,CAACC,QAAQ,CAACG,QAAV,CAAoBJ,SAApB,CAFM,CAAT,CAIA,mBACE,MAAC,CAAD,CAAG,YAAH,yBACE,KAAC,SAAD,EAAW,WAAW,CAAEF,cAAxB,CAAwC,YAAY,CAAEC,iBAAtD,EADF,cAEE,MAAC,CAAD,CAAG,UAAH,yBACE,KAAC,UAAD,EAAY,kBAAkB,CAAEH,kBAAhC,uBACE,KAAC,MAAD,EAAQ,WAAW,CAAEM,WAArB,CAAkC,aAAa,CAAE,CAACJ,cAAlD,CAAkE,kBAAkB,CAAEF,kBAAtF,EADF,EADF,cAIE,MAAC,WAAD,EAAa,EAAE,CAAC,cAAhB,CAA+B,mBAAmB,CAAEA,kBAApD,wBACE,kCACE,KAAC,MAAD,IADF,EADF,CAIG,CAACA,kBAAD,eAAuB,KAAC,UAAD,IAJ1B,GAJF,GAFF,GADF,CAgBD,CA5BD,CA8BA,cAAeD,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Header } from '../../../header/Header';\nimport MainSider from '../sider/MainSider/MainSider';\nimport MainContent from '../MainContent/MainContent';\nimport { MainHeader } from '../MainHeader/MainHeader';\nimport * as S from './MainLayout.styles';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { MEDICAL_DASHBOARD_PATH, NFT_DASHBOARD_PATH } from '@app/components/router/AppRouter';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { References } from '@app/components/common/References/References';\n\nconst MainLayout: React.FC = () => {\n  const [isTwoColumnsLayout, setIsTwoColumnsLayout] = useState(true);\n  const [siderCollapsed, setSiderCollapsed] = useState(true);\n  const { isDesktop } = useResponsive();\n  const location = useLocation();\n\n  const toggleSider = () => setSiderCollapsed(!siderCollapsed);\n\n  useEffect(() => {\n    setIsTwoColumnsLayout([MEDICAL_DASHBOARD_PATH, NFT_DASHBOARD_PATH].includes(location.pathname) && isDesktop);\n  }, [location.pathname, isDesktop]);\n\n  return (\n    <S.LayoutMaster>\n      <MainSider isCollapsed={siderCollapsed} setCollapsed={setSiderCollapsed} />\n      <S.LayoutMain>\n        <MainHeader isTwoColumnsLayout={isTwoColumnsLayout}>\n          <Header toggleSider={toggleSider} isSiderOpened={!siderCollapsed} isTwoColumnsLayout={isTwoColumnsLayout} />\n        </MainHeader>\n        <MainContent id=\"main-content\" $isTwoColumnsLayout={isTwoColumnsLayout}>\n          <div>\n            <Outlet />\n          </div>\n          {!isTwoColumnsLayout && <References />}\n        </MainContent>\n      </S.LayoutMain>\n    </S.LayoutMaster>\n  );\n};\n\nexport default MainLayout;\n"]},"metadata":{},"sourceType":"module"}