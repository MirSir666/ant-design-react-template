{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nimport { Avatar, Space, Typography } from 'antd';\nimport styled, { css } from 'styled-components';\nexport var NotificationIcon = styled(Avatar)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\"])));\nexport var Title = styled(Typography.Text)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-size: 0.875rem;\\n  font-weight: 600;\\n\"])));\nexport var Description = styled(Typography.Text)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  font-size: 0.875rem;\\n\"])));\nexport var SpaceWrapper = styled(Space)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  background-color: var(--background-color);\\n\\n  & \", \", span[role='img'] {\\n    \", \"\\n  }\\n\\n  & span[role='img'] {\\n    font-size: 2rem;\\n  }\\n\"])), Title, function (props) {\n  switch (props.type) {\n    case 'error':\n    case 'warning':\n    case 'success':\n      return css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n            color: var(--\", \"-color);\\n          \"])), props.type);\n\n    case 'info':\n    case 'mention':\n      return css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n            color: var(--primary-color);\\n          \"])));\n\n    default:\n      return '';\n  }\n});","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/Notification/Notification.styles.ts"],"names":["Avatar","Space","Typography","styled","css","NotificationIcon","Title","Text","Description","SpaceWrapper","props","type"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,MAA1C;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAOA,OAAO,IAAMC,gBAAgB,GAAGF,MAAM,CAACH,MAAD,CAAT,qEAAtB;AAEP,OAAO,IAAMM,KAAK,GAAGH,MAAM,CAACD,UAAU,CAACK,IAAZ,CAAT,sHAAX;AAKP,OAAO,IAAMC,WAAW,GAAGL,MAAM,CAACD,UAAU,CAACK,IAAZ,CAAT,iGAAjB;AAIP,OAAO,IAAME,YAAY,GAAGN,MAAM,CAACF,KAAD,CAAT,4NAGnBK,KAHmB,EAInB,UAACI,KAAD,EAAW;AACX,UAAQA,KAAK,CAACC,IAAd;AACE,SAAK,OAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AACE,aAAOP,GAAP,2HACiBM,KAAK,CAACC,IADvB;;AAGF,SAAK,MAAL;AACA,SAAK,SAAL;AACE,aAAOP,GAAP;;AAGF;AACE,aAAO,EAAP;AAbJ;AAeD,CApBoB,CAAlB","sourcesContent":["import { Avatar, Space, Typography } from 'antd';\nimport styled, { css } from 'styled-components';\nimport { NotificationType } from './Notification';\n\ninterface SpacewWrapperProps {\n  type: NotificationType;\n}\n\nexport const NotificationIcon = styled(Avatar)``;\n\nexport const Title = styled(Typography.Text)`\n  font-size: 0.875rem;\n  font-weight: 600;\n`;\n\nexport const Description = styled(Typography.Text)`\n  font-size: 0.875rem;\n`;\n\nexport const SpaceWrapper = styled(Space)<SpacewWrapperProps>`\n  background-color: var(--background-color);\n\n  & ${Title}, span[role='img'] {\n    ${(props) => {\n      switch (props.type) {\n        case 'error':\n        case 'warning':\n        case 'success':\n          return css`\n            color: var(--${props.type}-color);\n          `;\n        case 'info':\n        case 'mention':\n          return css`\n            color: var(--primary-color);\n          `;\n        default:\n          return '';\n      }\n    }}\n  }\n\n  & span[role='img'] {\n    font-size: 2rem;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}