{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/activityStory/ActivityStoryItem/ActivityStoryItem.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { activityStatuses } from '@app/constants/config/activityStatuses';\nimport { Dates } from '@app/constants/Dates';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport * as S from './ActivityStoryItem.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ActivityStoryItem = function ActivityStoryItem(_ref) {\n  _s();\n\n  var image = _ref.image,\n      title = _ref.title,\n      status = _ref.status,\n      date = _ref.date,\n      usd_value = _ref.usd_value;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var currentStatus = activityStatuses.find(function (configStatus) {\n    return configStatus.name === status;\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [20, 20],\n    wrap: false,\n    align: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        width: 80,\n        height: 80,\n        src: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      flex: 1,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        wrap: false,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(S.Title, {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(S.Status, {\n                $color: (currentStatus === null || currentStatus === void 0 ? void 0 : currentStatus.color) || 'primary',\n                children: t((currentStatus === null || currentStatus === void 0 ? void 0 : currentStatus.title) || '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(S.DateText, {\n                children: Dates.getDate(date).format('L')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(S.Text, {\n                children: getCurrencyPrice(formatNumberWithCommas(usd_value), 'USD')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActivityStoryItem, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ActivityStoryItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityStoryItem\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/activityStory/ActivityStoryItem/ActivityStoryItem.tsx"],"names":["React","Col","Row","useTranslation","activityStatuses","Dates","formatNumberWithCommas","getCurrencyPrice","S","ActivityStoryItem","image","title","status","date","usd_value","t","currentStatus","find","configStatus","name","color","getDate","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { activityStatuses } from '@app/constants/config/activityStatuses';\nimport { UserActivity } from '@app/api/activity.api';\nimport { Dates } from '@app/constants/Dates';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport * as S from './ActivityStoryItem.styles';\n\nexport const ActivityStoryItem: React.FC<UserActivity> = ({ image, title, status, date, usd_value }) => {\n  const { t } = useTranslation();\n\n  const currentStatus = activityStatuses.find((configStatus) => configStatus.name === status);\n\n  return (\n    <Row gutter={[20, 20]} wrap={false} align=\"middle\">\n      <Col>\n        <img width={80} height={80} src={image} alt={title} />\n      </Col>\n\n      <Col flex={1}>\n        <Row justify=\"space-between\" wrap={false}>\n          <Col>\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <S.Title>{title}</S.Title>\n              </Col>\n\n              <Col span={24}>\n                <S.Status $color={currentStatus?.color || 'primary'}>{t(currentStatus?.title || '')}</S.Status>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col span={8}>\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <S.DateText>{Dates.getDate(date).format('L')}</S.DateText>\n              </Col>\n\n              <Col span={24}>\n                <S.Text>{getCurrencyPrice(formatNumberWithCommas(usd_value), 'USD')}</S.Text>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}