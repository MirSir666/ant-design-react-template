{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/forms/StepForm/Steps/Step1.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport * as S from '../StepForm.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Step1 = function Step1() {\n  _s();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  return /*#__PURE__*/_jsxDEV(S.FormContent, {\n    children: [/*#__PURE__*/_jsxDEV(BaseForm.Item, {\n      name: \"login\",\n      label: t('forms.stepFormLabels.login'),\n      rules: [{\n        required: true,\n        message: t('forms.stepFormLabels.loginError')\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseForm.Item, {\n      name: \"password\",\n      label: t('common.password'),\n      rules: [{\n        required: true,\n        message: t('forms.stepFormLabels.passwordError')\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputPassword, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BaseForm.Item, {\n      name: \"confirmPassword\",\n      label: t('common.confirmPassword'),\n      dependencies: ['password'],\n      rules: [{\n        required: true,\n        message: t('common.confirmPasswordError')\n      }, function (_ref) {\n        var getFieldValue = _ref.getFieldValue;\n        return {\n          validator: function validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('common.confirmPasswordError')));\n          }\n        };\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputPassword, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, _this);\n};\n_s(Step1, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = Step1;\nvar _c;\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"names":["useTranslation","BaseForm","Input","InputPassword","S","Step1","t","required","message","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"sources":["/workspace/ant-design-react-template/src/components/forms/StepForm/Steps/Step1.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport * as S from '../StepForm.styles';\n\nexport const Step1: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <S.FormContent>\n      <BaseForm.Item\n        name=\"login\"\n        label={t('forms.stepFormLabels.login')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.loginError') }]}\n      >\n        <Input />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"password\"\n        label={t('common.password')}\n        rules={[{ required: true, message: t('forms.stepFormLabels.passwordError') }]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n      <BaseForm.Item\n        name=\"confirmPassword\"\n        label={t('common.confirmPassword')}\n        dependencies={['password']}\n        rules={[\n          { required: true, message: t('common.confirmPasswordError') },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('common.confirmPasswordError')));\n            },\n          }),\n        ]}\n      >\n        <InputPassword />\n      </BaseForm.Item>\n    </S.FormContent>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,cAAc,QAAQ,eAAe;AAC9C,SAASC,QAAQ,QAAQ,gDAAgD;AACzE,SAASC,KAAK,QAAQ,2CAA2C;AACjE,SAASC,aAAa,QAAQ,2DAA2D;AACzF,OAAO,KAAKC,CAAC,MAAM,oBAAoB;AAAC;AAExC,OAAO,IAAMC,KAAe,GAAG,SAAlBA,KAAe,GAAS;EAAA;EACnC,sBAAcL,cAAc,EAAE;IAAtBM,CAAC,mBAADA,CAAC;EACT,oBACE,QAAC,CAAC,CAAC,WAAW;IAAA,wBACZ,QAAC,QAAQ,CAAC,IAAI;MACZ,IAAI,EAAC,OAAO;MACZ,KAAK,EAAEA,CAAC,CAAC,4BAA4B,CAAE;MACvC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAEF,CAAC,CAAC,iCAAiC;MAAE,CAAC,CAAE;MAAA,uBAE3E,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,SACK,eAChB,QAAC,QAAQ,CAAC,IAAI;MACZ,IAAI,EAAC,UAAU;MACf,KAAK,EAAEA,CAAC,CAAC,iBAAiB,CAAE;MAC5B,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAEF,CAAC,CAAC,oCAAoC;MAAE,CAAC,CAAE;MAAA,uBAE9E,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,SACH,eAChB,QAAC,QAAQ,CAAC,IAAI;MACZ,IAAI,EAAC,iBAAiB;MACtB,KAAK,EAAEA,CAAC,CAAC,wBAAwB,CAAE;MACnC,YAAY,EAAE,CAAC,UAAU,CAAE;MAC3B,KAAK,EAAE,CACL;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAEF,CAAC,CAAC,6BAA6B;MAAE,CAAC,EAC7D;QAAA,IAAGG,aAAa,QAAbA,aAAa;QAAA,OAAQ;UACtBC,SAAS,qBAACC,CAAC,EAAEC,KAAK,EAAE;YAClB,IAAI,CAACA,KAAK,IAAIH,aAAa,CAAC,UAAU,CAAC,KAAKG,KAAK,EAAE;cACjD,OAAOC,OAAO,CAACC,OAAO,EAAE;YAC1B;YACA,OAAOD,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAACV,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;UACpE;QACF,CAAC;MAAA,CAAC,CACF;MAAA,uBAEF,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,SACH;EAAA;IAAA;IAAA;IAAA;EAAA,SACF;AAEpB,CAAC;AAAC,GAtCWD,KAAe;EAAA,QACZL,cAAc;AAAA;AAAA,KADjBK,KAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}