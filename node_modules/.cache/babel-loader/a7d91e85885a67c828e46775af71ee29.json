{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { useAppSelector } from './reduxHooks';\nimport { ConfigProvider } from 'antd';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nexport var useThemeWatcher = function useThemeWatcher() {\n  _s();\n\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var root = useRef(document.querySelector(':root'));\n  useEffect(function () {\n    var html = root.current;\n\n    if (html) {\n      html.setAttribute('data-no-transition', '');\n      html.setAttribute('data-theme', theme); // remove transition after layout update\n\n      requestAnimationFrame(function () {\n        html.removeAttribute('data-no-transition');\n      });\n    }\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: themeObject[theme].primary,\n        infoColor: themeObject[theme].primary,\n        successColor: themeObject[theme].success,\n        errorColor: themeObject[theme].error,\n        warningColor: themeObject[theme].warning\n      }\n    });\n  }, [theme]);\n};\n\n_s(useThemeWatcher, \"P/0THYSQfWr1fXDuacStdoSnEP8=\", false, function () {\n  return [useAppSelector];\n});","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/hooks/useThemeWatcher.ts"],"names":["useEffect","useRef","useAppSelector","ConfigProvider","themeObject","useThemeWatcher","theme","state","root","document","querySelector","html","current","setAttribute","requestAnimationFrame","removeAttribute","config","primaryColor","primary","infoColor","successColor","success","errorColor","error","warningColor","warning"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,WAAT,QAA4B,mCAA5B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAY;AAAA;;AACzC,MAAMC,KAAK,GAAGJ,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACD,KAAN,CAAYA,KAAvB;AAAA,GAAD,CAA5B;AACA,MAAME,IAAI,GAAGP,MAAM,CAACQ,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAD,CAAnB;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,IAAI,GAAGH,IAAI,CAACI,OAAlB;;AACA,QAAID,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACE,YAAL,CAAkB,oBAAlB,EAAwC,EAAxC;AACAF,MAAAA,IAAI,CAACE,YAAL,CAAkB,YAAlB,EAAgCP,KAAhC,EAFQ,CAGR;;AACAQ,MAAAA,qBAAqB,CAAC,YAAM;AAC1BH,QAAAA,IAAI,CAACI,eAAL,CAAqB,oBAArB;AACD,OAFoB,CAArB;AAGD;;AAEDZ,IAAAA,cAAc,CAACa,MAAf,CAAsB;AACpBV,MAAAA,KAAK,EAAE;AACLW,QAAAA,YAAY,EAAEb,WAAW,CAACE,KAAD,CAAX,CAAmBY,OAD5B;AAELC,QAAAA,SAAS,EAAEf,WAAW,CAACE,KAAD,CAAX,CAAmBY,OAFzB;AAGLE,QAAAA,YAAY,EAAEhB,WAAW,CAACE,KAAD,CAAX,CAAmBe,OAH5B;AAILC,QAAAA,UAAU,EAAElB,WAAW,CAACE,KAAD,CAAX,CAAmBiB,KAJ1B;AAKLC,QAAAA,YAAY,EAAEpB,WAAW,CAACE,KAAD,CAAX,CAAmBmB;AAL5B;AADa,KAAtB;AASD,GApBQ,EAoBN,CAACnB,KAAD,CApBM,CAAT;AAqBD,CAzBM;;GAAMD,e;UACGH,c","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useAppSelector } from './reduxHooks';\nimport { ConfigProvider } from 'antd';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\nexport const useThemeWatcher = (): void => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const root = useRef(document.querySelector(':root'));\n\n  useEffect(() => {\n    const html = root.current;\n    if (html) {\n      html.setAttribute('data-no-transition', '');\n      html.setAttribute('data-theme', theme);\n      // remove transition after layout update\n      requestAnimationFrame(() => {\n        html.removeAttribute('data-no-transition');\n      });\n    }\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: themeObject[theme].primary,\n        infoColor: themeObject[theme].primary,\n        successColor: themeObject[theme].success,\n        errorColor: themeObject[theme].error,\n        warningColor: themeObject[theme].warning,\n      },\n    });\n  }, [theme]);\n};\n"]},"metadata":{},"sourceType":"module"}