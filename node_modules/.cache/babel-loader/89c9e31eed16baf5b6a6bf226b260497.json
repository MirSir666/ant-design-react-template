{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/favoriteDoctors/FavoriteDoctorsCard/FavoritesDoctorsCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardCard } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport { Carousel } from '@app/components/common/Carousel/Carousel';\nimport { DoctorCard } from '../DoctorCard/DoctorCard';\nimport { Dates } from '@app/constants/Dates';\nimport { getUserCalendar } from '@app/api/calendar.api';\nimport { getDoctorsData } from '@app/api/doctors.api';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './FavoritesDoctorsCard.styles';\nimport { BREAKPOINTS } from '@app/styles/themes/constants';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar NextArrow = function NextArrow(props) {\n  var className = props.className,\n      style = props.style,\n      onClick = props.onClick;\n  return /*#__PURE__*/_jsxDEV(S.SliderArrow, {\n    className: className,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      display: 'block'\n    }),\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = NextArrow;\n\nvar PrevArrow = function PrevArrow(props) {\n  var className = props.className,\n      style = props.style,\n      onClick = props.onClick;\n  return /*#__PURE__*/_jsxDEV(S.SliderArrow, {\n    className: className,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      display: 'block'\n    }),\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, _this);\n};\n\n_c2 = PrevArrow;\nexport var FavoritesDoctorsCard = function FavoritesDoctorsCard() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      doctors = _useState2[0],\n      setDoctors = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      calendar = _useState4[0],\n      setCalendar = _useState4[1];\n\n  var user = useAppSelector(function (state) {\n    return state.user.user;\n  });\n  var today = Dates.getToday();\n  useEffect(function () {\n    getDoctorsData().then(function (res) {\n      return setDoctors(res);\n    });\n  }, []);\n  useEffect(function () {\n    user && getUserCalendar(user.id).then(function (res) {\n      return setCalendar(res);\n    });\n  }, [user]);\n  var pastEvents = useMemo(function () {\n    return calendar.filter(function (event) {\n      return Dates.getDate(event.date).isBefore(today);\n    });\n  }, [calendar, today]);\n  return /*#__PURE__*/_jsxDEV(DashboardCard, {\n    title: t('medical-dashboard.favoriteDoctors.title'),\n    padding: \"0 20px\",\n    children: doctors.length > 0 && calendar.length > 0 && /*#__PURE__*/_jsxDEV(S.CarouselWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        arrows: true,\n        nextArrow: /*#__PURE__*/_jsxDEV(NextArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, _this),\n        prevArrow: /*#__PURE__*/_jsxDEV(PrevArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, _this),\n        slidesToShow: 4,\n        responsive: [{\n          breakpoint: 1931,\n          settings: {\n            slidesToShow: 3\n          }\n        }, {\n          breakpoint: 1530,\n          settings: {\n            slidesToShow: 2\n          }\n        }, {\n          breakpoint: BREAKPOINTS.xl - 1,\n          settings: {\n            slidesToShow: 4\n          }\n        }, {\n          breakpoint: 1140,\n          settings: {\n            slidesToShow: 3\n          }\n        }, {\n          breakpoint: 920,\n          settings: {\n            slidesToShow: 2\n          }\n        }, {\n          breakpoint: BREAKPOINTS.md - 1,\n          settings: {\n            slidesToShow: 3\n          }\n        }, {\n          breakpoint: 720,\n          settings: {\n            slidesToShow: 2\n          }\n        }, {\n          breakpoint: 520,\n          settings: {\n            slidesToShow: 1\n          }\n        }],\n        children: pastEvents.map(function (event) {\n          var currentDoctor = doctors.find(function (doctor) {\n            return doctor.id === event.doctor;\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DoctorCard, {\n              imgUrl: currentDoctor === null || currentDoctor === void 0 ? void 0 : currentDoctor.imgUrl,\n              name: currentDoctor === null || currentDoctor === void 0 ? void 0 : currentDoctor.name,\n              speciality: currentDoctor === null || currentDoctor === void 0 ? void 0 : currentDoctor.specifity,\n              rating: currentDoctor === null || currentDoctor === void 0 ? void 0 : currentDoctor.rating,\n              date: event.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, _this)\n          }, currentDoctor === null || currentDoctor === void 0 ? void 0 : currentDoctor.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FavoritesDoctorsCard, \"g6l1MGGdv4GrVnakgGAZYPnhxrk=\", false, function () {\n  return [useTranslation, useAppSelector];\n});\n\n_c3 = FavoritesDoctorsCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NextArrow\");\n$RefreshReg$(_c2, \"PrevArrow\");\n$RefreshReg$(_c3, \"FavoritesDoctorsCard\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/favoriteDoctors/FavoriteDoctorsCard/FavoritesDoctorsCard.tsx"],"names":["React","useEffect","useMemo","useState","useTranslation","DashboardCard","Carousel","DoctorCard","Dates","getUserCalendar","getDoctorsData","useAppSelector","S","BREAKPOINTS","NextArrow","props","className","style","onClick","display","PrevArrow","FavoritesDoctorsCard","t","doctors","setDoctors","calendar","setCalendar","user","state","today","getToday","then","res","id","pastEvents","filter","event","getDate","date","isBefore","length","breakpoint","settings","slidesToShow","xl","md","map","currentDoctor","find","doctor","imgUrl","name","specifity","rating"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardCard } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport { Carousel } from '@app/components/common/Carousel/Carousel';\nimport { DoctorCard } from '../DoctorCard/DoctorCard';\nimport { Dates } from '@app/constants/Dates';\nimport { CalendarEvent, getUserCalendar } from '@app/api/calendar.api';\nimport { Doctor, getDoctorsData } from '@app/api/doctors.api';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './FavoritesDoctorsCard.styles';\nimport { BREAKPOINTS } from '@app/styles/themes/constants';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst NextArrow = (props: any) => {\n  const { className, style, onClick } = props;\n  return <S.SliderArrow className={className} style={{ ...style, display: 'block' }} onClick={onClick} />;\n};\n\nconst PrevArrow = (props: any) => {\n  const { className, style, onClick } = props;\n  return <S.SliderArrow className={className} style={{ ...style, display: 'block' }} onClick={onClick} />;\n};\n\nexport const FavoritesDoctorsCard: React.FC = () => {\n  const { t } = useTranslation();\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [calendar, setCalendar] = useState<CalendarEvent[]>([]);\n\n  const user = useAppSelector((state) => state.user.user);\n\n  const today = Dates.getToday();\n\n  useEffect(() => {\n    getDoctorsData().then((res) => setDoctors(res));\n  }, []);\n\n  useEffect(() => {\n    user && getUserCalendar(user.id).then((res) => setCalendar(res));\n  }, [user]);\n\n  const pastEvents = useMemo(\n    () => calendar.filter((event) => Dates.getDate(event.date).isBefore(today)),\n    [calendar, today],\n  );\n\n  return (\n    <DashboardCard title={t('medical-dashboard.favoriteDoctors.title')} padding=\"0 20px\">\n      {doctors.length > 0 && calendar.length > 0 && (\n        <S.CarouselWrapper>\n          <Carousel\n            arrows={true}\n            nextArrow={<NextArrow />}\n            prevArrow={<PrevArrow />}\n            slidesToShow={4}\n            responsive={[\n              {\n                breakpoint: 1931,\n                settings: {\n                  slidesToShow: 3,\n                },\n              },\n              {\n                breakpoint: 1530,\n                settings: {\n                  slidesToShow: 2,\n                },\n              },\n              {\n                breakpoint: BREAKPOINTS.xl - 1,\n                settings: {\n                  slidesToShow: 4,\n                },\n              },\n              {\n                breakpoint: 1140,\n                settings: {\n                  slidesToShow: 3,\n                },\n              },\n              {\n                breakpoint: 920,\n                settings: {\n                  slidesToShow: 2,\n                },\n              },\n              {\n                breakpoint: BREAKPOINTS.md - 1,\n                settings: {\n                  slidesToShow: 3,\n                },\n              },\n              {\n                breakpoint: 720,\n                settings: {\n                  slidesToShow: 2,\n                },\n              },\n              {\n                breakpoint: 520,\n                settings: {\n                  slidesToShow: 1,\n                },\n              },\n            ]}\n          >\n            {pastEvents.map((event) => {\n              const currentDoctor = doctors.find((doctor) => doctor.id === event.doctor);\n\n              return (\n                <div key={currentDoctor?.id}>\n                  <DoctorCard\n                    imgUrl={currentDoctor?.imgUrl}\n                    name={currentDoctor?.name}\n                    speciality={currentDoctor?.specifity}\n                    rating={currentDoctor?.rating}\n                    date={event.date}\n                  />\n                </div>\n              );\n            })}\n          </Carousel>\n        </S.CarouselWrapper>\n      )}\n    </DashboardCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}