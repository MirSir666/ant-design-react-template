{"ast":null,"code":"var _s = $RefreshSig$();\nimport { BREAKPOINTS, media } from '@app/styles/themes/constants';\nimport { useMediaQuery } from 'react-responsive';\nexport var useResponsive = function useResponsive() {\n  _s();\n  var isMobile = useMediaQuery({\n    query: media.xs\n  });\n  var isTablet = useMediaQuery({\n    query: media.md\n  });\n  var isDesktop = useMediaQuery({\n    query: media.xl\n  });\n  var isBigScreen = useMediaQuery({\n    query: media.xxl\n  });\n  var mobileOnly = useMediaQuery({\n    query: \"(max-width: \".concat(BREAKPOINTS.md - 0.02, \"px)\")\n  });\n  var tabletOnly = useMediaQuery({\n    query: \"(min-width: \".concat(BREAKPOINTS.md, \"px) and (max-width: \").concat(BREAKPOINTS.xl - 0.02, \"px)\")\n  });\n  var desktopOnly = useMediaQuery({\n    query: \"(min-width: \".concat(BREAKPOINTS.xl, \"px) and (max-width: \").concat(BREAKPOINTS.xxl - 0.02, \"px)\")\n  });\n  return {\n    isMobile: isMobile,\n    isTablet: isTablet,\n    isDesktop: isDesktop,\n    isBigScreen: isBigScreen,\n    mobileOnly: mobileOnly,\n    tabletOnly: tabletOnly,\n    desktopOnly: desktopOnly,\n    useMediaQuery: useMediaQuery\n  };\n};\n_s(useResponsive, \"KMZqtfMjK8tFevGY/m5bTEYZ3BM=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});","map":{"version":3,"names":["BREAKPOINTS","media","useMediaQuery","useResponsive","isMobile","query","xs","isTablet","md","isDesktop","xl","isBigScreen","xxl","mobileOnly","tabletOnly","desktopOnly"],"sources":["/workspace/ant-design-react-template/src/hooks/useResponsive.ts"],"sourcesContent":["import { BREAKPOINTS, media } from '@app/styles/themes/constants';\nimport { MediaQueryAllQueryable, MediaQueryMatchers, useMediaQuery } from 'react-responsive';\n\ninterface ResponsiveReturnValues {\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n  isBigScreen: boolean;\n  mobileOnly: boolean;\n  tabletOnly: boolean;\n  desktopOnly: boolean;\n  useMediaQuery: (\n    settings: Partial<MediaQueryAllQueryable & { query?: string | undefined }>,\n    device?: MediaQueryMatchers,\n    callback?: (matches: boolean) => void,\n  ) => boolean;\n}\n\nexport const useResponsive = (): ResponsiveReturnValues => {\n  const isMobile = useMediaQuery({ query: media.xs });\n  const isTablet = useMediaQuery({ query: media.md });\n  const isDesktop = useMediaQuery({ query: media.xl });\n  const isBigScreen = useMediaQuery({ query: media.xxl });\n\n  const mobileOnly = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS.md - 0.02}px)`,\n  });\n\n  const tabletOnly = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS.md}px) and (max-width: ${BREAKPOINTS.xl - 0.02}px)`,\n  });\n\n  const desktopOnly = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS.xl}px) and (max-width: ${BREAKPOINTS.xxl - 0.02}px)`,\n  });\n\n  return {\n    isMobile,\n    isTablet,\n    isDesktop,\n    isBigScreen,\n    mobileOnly,\n    tabletOnly,\n    desktopOnly,\n    useMediaQuery,\n  };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,KAAK,QAAQ,8BAA8B;AACjE,SAAqDC,aAAa,QAAQ,kBAAkB;AAiB5F,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAiC;EAAA;EACzD,IAAMC,QAAQ,GAAGF,aAAa,CAAC;IAAEG,KAAK,EAAEJ,KAAK,CAACK;EAAG,CAAC,CAAC;EACnD,IAAMC,QAAQ,GAAGL,aAAa,CAAC;IAAEG,KAAK,EAAEJ,KAAK,CAACO;EAAG,CAAC,CAAC;EACnD,IAAMC,SAAS,GAAGP,aAAa,CAAC;IAAEG,KAAK,EAAEJ,KAAK,CAACS;EAAG,CAAC,CAAC;EACpD,IAAMC,WAAW,GAAGT,aAAa,CAAC;IAAEG,KAAK,EAAEJ,KAAK,CAACW;EAAI,CAAC,CAAC;EAEvD,IAAMC,UAAU,GAAGX,aAAa,CAAC;IAC/BG,KAAK,wBAAiBL,WAAW,CAACQ,EAAE,GAAG,IAAI;EAC7C,CAAC,CAAC;EAEF,IAAMM,UAAU,GAAGZ,aAAa,CAAC;IAC/BG,KAAK,wBAAiBL,WAAW,CAACQ,EAAE,iCAAuBR,WAAW,CAACU,EAAE,GAAG,IAAI;EAClF,CAAC,CAAC;EAEF,IAAMK,WAAW,GAAGb,aAAa,CAAC;IAChCG,KAAK,wBAAiBL,WAAW,CAACU,EAAE,iCAAuBV,WAAW,CAACY,GAAG,GAAG,IAAI;EACnF,CAAC,CAAC;EAEF,OAAO;IACLR,QAAQ,EAARA,QAAQ;IACRG,QAAQ,EAARA,QAAQ;IACRE,SAAS,EAATA,SAAS;IACTE,WAAW,EAAXA,WAAW;IACXE,UAAU,EAAVA,UAAU;IACVC,UAAU,EAAVA,UAAU;IACVC,WAAW,EAAXA,WAAW;IACXb,aAAa,EAAbA;EACF,CAAC;AACH,CAAC;AAAC,GA5BWC,aAAa;EAAA,QACPD,aAAa,EACbA,aAAa,EACZA,aAAa,EACXA,aAAa,EAEdA,aAAa,EAIbA,aAAa,EAIZA,aAAa;AAAA"},"metadata":{},"sourceType":"module"}