{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentPanel.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getDoctorsData } from 'api/doctors.api';\nimport { TreatmentDoctor } from './TreatmentDoctor/TreatmentDoctor';\nimport { specifities } from '../../../constants/specifities';\nimport { TreatmentNotFound } from './TreatmentNotFound/TreatmentNotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TreatmentPanel = function TreatmentPanel(_ref) {\n  _s();\n\n  var event = _ref.event;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      doctors = _useState2[0],\n      setDoctors = _useState2[1];\n\n  useEffect(function () {\n    getDoctorsData().then(function (res) {\n      return setDoctors(res);\n    });\n  }, []);\n  var currentDoctor = doctors.find(function (doctor) {\n    return doctor.id === (event === null || event === void 0 ? void 0 : event.doctor);\n  });\n\n  if (event && currentDoctor) {\n    var _specifities$find;\n\n    var doctor = {\n      name: currentDoctor.name,\n      address: currentDoctor.address,\n      date: event.date,\n      imgUrl: currentDoctor.imgUrl,\n      phone: currentDoctor.phone,\n      speciality: ((_specifities$find = specifities.find(function (_ref2) {\n        var id = _ref2.id;\n        return id === currentDoctor.specifity;\n      })) === null || _specifities$find === void 0 ? void 0 : _specifities$find.name) || ''\n    };\n    return /*#__PURE__*/_jsxDEV(TreatmentDoctor, {\n      doctor: doctor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, _this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(TreatmentNotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, _this);\n  }\n};\n\n_s(TreatmentPanel, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n\n_c = TreatmentPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreatmentPanel\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentPanel.tsx"],"names":["React","useEffect","useState","getDoctorsData","TreatmentDoctor","specifities","TreatmentNotFound","TreatmentPanel","event","doctors","setDoctors","then","res","currentDoctor","find","doctor","id","name","address","date","imgUrl","phone","speciality","specifity"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,cAAT,QAAuC,iBAAvC;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,iBAAT,QAAkC,uCAAlC;;AAMA,OAAO,IAAMC,cAA6C,GAAG,SAAhDA,cAAgD,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC1E,kBAA8BN,QAAQ,CAAW,EAAX,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,cAAc,GAAGQ,IAAjB,CAAsB,UAACC,GAAD;AAAA,aAASF,UAAU,CAACE,GAAD,CAAnB;AAAA,KAAtB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMC,aAAa,GAAGJ,OAAO,CAACK,IAAR,CAAa,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,EAAP,MAAcR,KAAd,aAAcA,KAAd,uBAAcA,KAAK,CAAEO,MAArB,CAAZ;AAAA,GAAb,CAAtB;;AAEA,MAAIP,KAAK,IAAIK,aAAb,EAA4B;AAAA;;AAC1B,QAAME,MAAuB,GAAG;AAC9BE,MAAAA,IAAI,EAAEJ,aAAa,CAACI,IADU;AAE9BC,MAAAA,OAAO,EAAEL,aAAa,CAACK,OAFO;AAG9BC,MAAAA,IAAI,EAAEX,KAAK,CAACW,IAHkB;AAI9BC,MAAAA,MAAM,EAAEP,aAAa,CAACO,MAJQ;AAK9BC,MAAAA,KAAK,EAAER,aAAa,CAACQ,KALS;AAM9BC,MAAAA,UAAU,EAAE,sBAAAjB,WAAW,CAACS,IAAZ,CAAiB;AAAA,YAAGE,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAE,KAAKH,aAAa,CAACU,SAAjC;AAAA,OAAjB,yEAA8DN,IAA9D,KAAsE;AANpD,KAAhC;AASA,wBAAO,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAXD,MAWO;AACL,wBAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;AACF,CAvBM;;GAAMR,c;;KAAAA,c","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CalendarEvent } from 'api/calendar.api';\nimport { getDoctorsData, Doctor } from 'api/doctors.api';\nimport { TreatmentDoctor } from './TreatmentDoctor/TreatmentDoctor';\nimport { specifities } from '../../../constants/specifities';\nimport { TreatmentNotFound } from './TreatmentNotFound/TreatmentNotFound';\n\ninterface TreatmentPanelProps {\n  event?: CalendarEvent;\n}\n\nexport const TreatmentPanel: React.FC<TreatmentPanelProps> = ({ event }) => {\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n\n  useEffect(() => {\n    getDoctorsData().then((res) => setDoctors(res));\n  }, []);\n\n  const currentDoctor = doctors.find((doctor) => doctor.id === event?.doctor);\n\n  if (event && currentDoctor) {\n    const doctor: TreatmentDoctor = {\n      name: currentDoctor.name,\n      address: currentDoctor.address,\n      date: event.date,\n      imgUrl: currentDoctor.imgUrl,\n      phone: currentDoctor.phone,\n      speciality: specifities.find(({ id }) => id === currentDoctor.specifity)?.name || '',\n    };\n\n    return <TreatmentDoctor doctor={doctor} />;\n  } else {\n    return <TreatmentNotFound />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}