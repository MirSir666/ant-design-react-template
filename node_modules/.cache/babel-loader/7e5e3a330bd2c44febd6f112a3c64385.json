{"ast":null,"code":"import React from'react';import{Space}from'antd';import{CheckCircleFilled,ExclamationCircleFilled,InfoCircleFilled,WarningFilled}from'@ant-design/icons';import*as S from'./Notification.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Notification=function Notification(_ref){var type=_ref.type,mentionIconSrc=_ref.mentionIconSrc,title=_ref.title,description=_ref.description;var icons={info:/*#__PURE__*/_jsx(InfoCircleFilled,{}),success:/*#__PURE__*/_jsx(CheckCircleFilled,{}),warning:/*#__PURE__*/_jsx(ExclamationCircleFilled,{}),error:/*#__PURE__*/_jsx(WarningFilled,{}),mention:mentionIconSrc};var icon=icons[type]||icons.warning;return/*#__PURE__*/_jsxs(S.SpaceWrapper,{type:type,align:\"start\",size:\"middle\",children:[mentionIconSrc?/*#__PURE__*/_jsx(S.NotificationIcon,{src:icon,alt:\"User icon\"}):icon,/*#__PURE__*/_jsxs(Space,{direction:\"vertical\",children:[/*#__PURE__*/_jsx(S.Title,{children:title}),/*#__PURE__*/_jsx(S.Description,{children:description})]})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/Notification/Notification.tsx"],"names":["React","Space","CheckCircleFilled","ExclamationCircleFilled","InfoCircleFilled","WarningFilled","S","Notification","type","mentionIconSrc","title","description","icons","info","success","warning","error","mention","icon"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,MAAtB,CACA,OAASC,iBAAT,CAA4BC,uBAA5B,CAAqDC,gBAArD,CAAuEC,aAAvE,KAA4F,mBAA5F,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,uBAAnB,C,wFAmBA,MAAO,IAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAkD,IAA/CC,CAAAA,IAA+C,MAA/CA,IAA+C,CAAzCC,cAAyC,MAAzCA,cAAyC,CAAzBC,KAAyB,MAAzBA,KAAyB,CAAlBC,WAAkB,MAAlBA,WAAkB,CACzG,GAAMC,CAAAA,KAAY,CAAG,CACnBC,IAAI,cAAE,KAAC,gBAAD,IADa,CAEnBC,OAAO,cAAE,KAAC,iBAAD,IAFU,CAGnBC,OAAO,cAAE,KAAC,uBAAD,IAHU,CAInBC,KAAK,cAAE,KAAC,aAAD,IAJY,CAKnBC,OAAO,CAAER,cALU,CAArB,CAQA,GAAMS,CAAAA,IAAI,CAAGN,KAAK,CAACJ,IAAD,CAAL,EAAeI,KAAK,CAACG,OAAlC,CAEA,mBACE,MAAC,CAAD,CAAG,YAAH,EAAgB,IAAI,CAAEP,IAAtB,CAA4B,KAAK,CAAC,OAAlC,CAA0C,IAAI,CAAC,QAA/C,WACGC,cAAc,cAAG,KAAC,CAAD,CAAG,gBAAH,EAAoB,GAAG,CAAES,IAAzB,CAA+B,GAAG,CAAC,WAAnC,EAAH,CAAuDA,IADxE,cAEE,MAAC,KAAD,EAAO,SAAS,CAAC,UAAjB,wBACE,KAAC,CAAD,CAAG,KAAH,WAAUR,KAAV,EADF,cAEE,KAAC,CAAD,CAAG,WAAH,WAAgBC,WAAhB,EAFF,GAFF,GADF,CASD,CApBM","sourcesContent":["import React from 'react';\nimport { Space } from 'antd';\nimport { CheckCircleFilled, ExclamationCircleFilled, InfoCircleFilled, WarningFilled } from '@ant-design/icons';\nimport * as S from './Notification.styles';\n\ninterface Icons {\n  info: React.ReactNode;\n  success: React.ReactNode;\n  warning: React.ReactNode;\n  error: React.ReactNode;\n  mention: React.ReactNode;\n}\n\nexport type NotificationType = 'info' | 'mention' | 'success' | 'warning' | 'error';\n\ninterface NotificationProps {\n  type: NotificationType;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  mentionIconSrc?: React.ReactNode;\n}\n\nexport const Notification: React.FC<NotificationProps> = ({ type, mentionIconSrc, title, description }) => {\n  const icons: Icons = {\n    info: <InfoCircleFilled />,\n    success: <CheckCircleFilled />,\n    warning: <ExclamationCircleFilled />,\n    error: <WarningFilled />,\n    mention: mentionIconSrc,\n  };\n\n  const icon = icons[type] || icons.warning;\n\n  return (\n    <S.SpaceWrapper type={type} align=\"start\" size=\"middle\">\n      {mentionIconSrc ? <S.NotificationIcon src={icon} alt=\"User icon\" /> : icon}\n      <Space direction=\"vertical\">\n        <S.Title>{title}</S.Title>\n        <S.Description>{description}</S.Description>\n      </Space>\n    </S.SpaceWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}