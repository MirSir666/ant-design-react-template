{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/notificationsDropdown/NotificationsDropdown.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BellOutlined } from '@ant-design/icons';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Badge } from '@app/components/common/Badge/Badge';\nimport { NotificationsOverlay } from '@app/components/header/components/notificationsDropdown/NotificationsOverlay/NotificationsOverlay';\nimport { notifications as fetchedNotifications } from '@app/api/notifications.api';\nimport { HeaderActionWrapper } from '@app/components/header/Header.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var NotificationsDropdown = function NotificationsDropdown() {\n  _s();\n  var _useState = useState(fetchedNotifications),\n    _useState2 = _slicedToArray(_useState, 2),\n    notifications = _useState2[0],\n    setNotifications = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isOpened = _useState4[0],\n    setOpened = _useState4[1];\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    trigger: ['click'],\n    overlay: /*#__PURE__*/_jsxDEV(NotificationsOverlay, {\n      notifications: notifications,\n      setNotifications: setNotifications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, _this),\n    onVisibleChange: setOpened,\n    children: /*#__PURE__*/_jsxDEV(HeaderActionWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: isOpened ? 'ghost' : 'text',\n        icon: /*#__PURE__*/_jsxDEV(Badge, {\n          dot: true,\n          children: /*#__PURE__*/_jsxDEV(BellOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n_s(NotificationsDropdown, \"4vs3/bxjj2G+jk08q14jTRsgB0s=\");\n_c = NotificationsDropdown;\nvar _c;\n$RefreshReg$(_c, \"NotificationsDropdown\");","map":{"version":3,"names":["React","useState","BellOutlined","Dropdown","Button","Badge","NotificationsOverlay","notifications","fetchedNotifications","HeaderActionWrapper","NotificationsDropdown","setNotifications","isOpened","setOpened"],"sources":["/workspace/ant-design-react-template/src/components/header/components/notificationsDropdown/NotificationsDropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BellOutlined } from '@ant-design/icons';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Badge } from '@app/components/common/Badge/Badge';\nimport { NotificationsOverlay } from '@app/components/header/components/notificationsDropdown/NotificationsOverlay/NotificationsOverlay';\nimport { notifications as fetchedNotifications, Notification } from '@app/api/notifications.api';\nimport { HeaderActionWrapper } from '@app/components/header/Header.styles';\n\nexport const NotificationsDropdown: React.FC = () => {\n  const [notifications, setNotifications] = useState<Notification[]>(fetchedNotifications);\n  const [isOpened, setOpened] = useState(false);\n\n  return (\n    <Dropdown\n      trigger={['click']}\n      overlay={<NotificationsOverlay notifications={notifications} setNotifications={setNotifications} />}\n      onVisibleChange={setOpened}\n    >\n      <HeaderActionWrapper>\n        <Button\n          type={isOpened ? 'ghost' : 'text'}\n          icon={\n            <Badge dot>\n              <BellOutlined />\n            </Badge>\n          }\n        />\n      </HeaderActionWrapper>\n    </Dropdown>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,0CAA0C;AACnE,SAASC,MAAM,QAAQ,8CAA8C;AACrE,SAASC,KAAK,QAAQ,oCAAoC;AAC1D,SAASC,oBAAoB,QAAQ,mGAAmG;AACxI,SAASC,aAAa,IAAIC,oBAAoB,QAAsB,4BAA4B;AAChG,SAASC,mBAAmB,QAAQ,sCAAsC;AAAC;AAE3E,OAAO,IAAMC,qBAA+B,GAAG,SAAlCA,qBAA+B,GAAS;EAAA;EACnD,gBAA0CT,QAAQ,CAAiBO,oBAAoB,CAAC;IAAA;IAAjFD,aAAa;IAAEI,gBAAgB;EACtC,iBAA8BV,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCW,QAAQ;IAAEC,SAAS;EAE1B,oBACE,QAAC,QAAQ;IACP,OAAO,EAAE,CAAC,OAAO,CAAE;IACnB,OAAO,eAAE,QAAC,oBAAoB;MAAC,aAAa,EAAEN,aAAc;MAAC,gBAAgB,EAAEI;IAAiB;MAAA;MAAA;MAAA;IAAA,SAAI;IACpG,eAAe,EAAEE,SAAU;IAAA,uBAE3B,QAAC,mBAAmB;MAAA,uBAClB,QAAC,MAAM;QACL,IAAI,EAAED,QAAQ,GAAG,OAAO,GAAG,MAAO;QAClC,IAAI,eACF,QAAC,KAAK;UAAC,GAAG;UAAA,uBACR,QAAC,YAAY;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MAEnB;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACkB;IAAA;IAAA;IAAA;EAAA,SACb;AAEf,CAAC;AAAC,GAtBWF,qBAA+B;AAAA,KAA/BA,qBAA+B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}