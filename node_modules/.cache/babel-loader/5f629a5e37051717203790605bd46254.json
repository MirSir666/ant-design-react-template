{"ast":null,"code":"import{createAction,createSlice}from'@reduxjs/toolkit';import{persistUser,readUser}from'@app/services/localStorage.service';var initialState={user:readUser()};export var setUser=createAction('user/setUser',function(newUser){persistUser(newUser);return{payload:newUser};});export var userSlice=createSlice({name:'user',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(setUser,function(state,action){state.user=action.payload;});}});export default userSlice.reducer;","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/store/slices/userSlice.ts"],"names":["createAction","createSlice","persistUser","readUser","initialState","user","setUser","newUser","payload","userSlice","name","reducers","extraReducers","builder","addCase","state","action","reducer"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,WAAvB,KAAyD,kBAAzD,CAEA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,oCAAtC,CAMA,GAAMC,CAAAA,YAAuB,CAAG,CAC9BC,IAAI,CAAEF,QAAQ,EADgB,CAAhC,CAIA,MAAO,IAAMG,CAAAA,OAAO,CAAGN,YAAY,CAA2B,cAA3B,CAA2C,SAACO,OAAD,CAAa,CACzFL,WAAW,CAACK,OAAD,CAAX,CAEA,MAAO,CACLC,OAAO,CAAED,OADJ,CAAP,CAGD,CANkC,CAA5B,CAQP,MAAO,IAAME,CAAAA,SAAS,CAAGR,WAAW,CAAC,CACnCS,IAAI,CAAE,MAD6B,CAEnCN,YAAY,CAAZA,YAFmC,CAGnCO,QAAQ,CAAE,EAHyB,CAInCC,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CAACC,OAAR,CAAgBR,OAAhB,CAAyB,SAACS,KAAD,CAAQC,MAAR,CAAmB,CAC1CD,KAAK,CAACV,IAAN,CAAaW,MAAM,CAACR,OAApB,CACD,CAFD,EAGD,CARkC,CAAD,CAA7B,CAWP,cAAeC,CAAAA,SAAS,CAACQ,OAAzB","sourcesContent":["import { createAction, createSlice, PrepareAction } from '@reduxjs/toolkit';\nimport { UserModel } from '@app/domain/UserModel';\nimport { persistUser, readUser } from '@app/services/localStorage.service';\n\nexport interface UserState {\n  user: UserModel | null;\n}\n\nconst initialState: UserState = {\n  user: readUser(),\n};\n\nexport const setUser = createAction<PrepareAction<UserModel>>('user/setUser', (newUser) => {\n  persistUser(newUser);\n\n  return {\n    payload: newUser,\n  };\n});\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(setUser, (state, action) => {\n      state.user = action.payload;\n    });\n  },\n});\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}