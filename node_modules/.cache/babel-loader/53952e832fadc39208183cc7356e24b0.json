{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/forms/ControlForm/ControlForm.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Avatar } from 'antd';\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { AddUserFormModal } from './AddUserFormModal';\nimport { Input } from '../../common/inputs/Input/Input';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './ControlForm.styles';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nexport var ControlForm = function ControlForm() {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFieldsChanged = _useState4[0],\n    setFieldsChanged = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var showUserModal = function showUserModal() {\n    setVisible(true);\n  };\n  var hideUserModal = function hideUserModal() {\n    setVisible(false);\n  };\n  var onFinish = function onFinish() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    setLoading(true);\n    setTimeout(function () {\n      setFieldsChanged(false);\n      setLoading(false);\n      notificationController.success({\n        message: t('common.success')\n      });\n      console.log(values);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm.Provider, {\n    onFormFinish: function onFormFinish(name, _ref) {\n      var values = _ref.values,\n        forms = _ref.forms;\n      if (name === 'userForm') {\n        var controlForm = forms.controlForm;\n        var users = controlForm.getFieldValue('users') || [];\n        controlForm.setFieldsValue({\n          users: [].concat(_toConsumableArray(users), [values])\n        });\n        setVisible(false);\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(BaseButtonsForm, _objectSpread(_objectSpread({}, layout), {}, {\n      name: \"controlForm\",\n      isFieldsChanged: isFieldsChanged,\n      footer: /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          type: \"primary\",\n          loading: isLoading,\n          children: t('common.submit')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(S.AddUserButton, {\n          type: \"default\",\n          htmlType: \"button\",\n          onClick: showUserModal,\n          children: t('forms.controlFormLabels.addUser')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, _this),\n      onFinish: onFinish,\n      onFieldsChange: function onFieldsChange() {\n        return setFieldsChanged(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n        name: \"group\",\n        label: t('forms.controlFormLabels.groupName'),\n        rules: [{\n          required: true,\n          message: t('forms.controlFormLabels.groupNameError')\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.UserList, {\n        label: t('forms.controlFormLabels.userList')\n        // eslint-disable-next-line\n        ,\n        shouldUpdate: function shouldUpdate(prevValues, curValues) {\n          return prevValues.users !== curValues.users;\n        },\n        children: function children(_ref2) {\n          var getFieldValue = _ref2.getFieldValue;\n          var users = getFieldValue('users') || [];\n          return users.length ? /*#__PURE__*/_jsxDEV(S.List, {\n            children: users.map(function (user, index) {\n              return /*#__PURE__*/_jsxDEV(S.ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 35\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(S.User, {\n                  children: [user.name, \" - \", user.age]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(S.Text, {\n            children: [\"( \", /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, _this), \" \", t('forms.controlFormLabels.noUser'), \" )\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AddUserFormModal, {\n      visible: visible,\n      onCancel: hideUserModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n_s(ControlForm, \"S27mXMBkzluVIQgmK5es1Avr3N8=\", false, function () {\n  return [useTranslation];\n});\n_c = ControlForm;\nvar _c;\n$RefreshReg$(_c, \"ControlForm\");","map":{"version":3,"names":["React","useState","Avatar","SmileOutlined","UserOutlined","BaseButtonsForm","AddUserFormModal","Input","Button","useTranslation","S","notificationController","layout","labelCol","span","wrapperCol","ControlForm","visible","setVisible","isFieldsChanged","setFieldsChanged","isLoading","setLoading","t","showUserModal","hideUserModal","onFinish","values","setTimeout","success","message","console","log","name","forms","controlForm","users","getFieldValue","setFieldsValue","required","prevValues","curValues","length","map","user","index","age"],"sources":["/workspace/ant-design-react-template/src/components/forms/ControlForm/ControlForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Avatar } from 'antd';\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { AddUserFormModal } from './AddUserFormModal';\nimport { Input } from '../../common/inputs/Input/Input';\nimport { Button } from '../../common/buttons/Button/Button';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './ControlForm.styles';\nimport { notificationController } from '@app/controllers/notificationController';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\ninterface UserType {\n  name: string;\n  age: string;\n}\n\nexport const ControlForm: React.FC = () => {\n  const [visible, setVisible] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const showUserModal = () => {\n    setVisible(true);\n  };\n\n  const hideUserModal = () => {\n    setVisible(false);\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setFieldsChanged(false);\n      setLoading(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm.Provider\n      onFormFinish={(name, { values, forms }) => {\n        if (name === 'userForm') {\n          const { controlForm } = forms;\n          const users = controlForm.getFieldValue('users') || [];\n          controlForm.setFieldsValue({ users: [...users, values] });\n          setVisible(false);\n        }\n      }}\n    >\n      <BaseButtonsForm\n        {...layout}\n        name=\"controlForm\"\n        isFieldsChanged={isFieldsChanged}\n        footer={\n          <BaseButtonsForm.Item>\n            <Button htmlType=\"submit\" type=\"primary\" loading={isLoading}>\n              {t('common.submit')}\n            </Button>\n            <S.AddUserButton type=\"default\" htmlType=\"button\" onClick={showUserModal}>\n              {t('forms.controlFormLabels.addUser')}\n            </S.AddUserButton>\n          </BaseButtonsForm.Item>\n        }\n        onFinish={onFinish}\n        onFieldsChange={() => setFieldsChanged(true)}\n      >\n        <BaseButtonsForm.Item\n          name=\"group\"\n          label={t('forms.controlFormLabels.groupName')}\n          rules={[{ required: true, message: t('forms.controlFormLabels.groupNameError') }]}\n        >\n          <Input />\n        </BaseButtonsForm.Item>\n        <S.UserList\n          label={t('forms.controlFormLabels.userList')}\n          // eslint-disable-next-line\n          shouldUpdate={(prevValues: any, curValues: any) => prevValues.users !== curValues.users}\n        >\n          {({ getFieldValue }) => {\n            const users: UserType[] = getFieldValue('users') || [];\n            return users.length ? (\n              <S.List>\n                {users.map((user, index) => (\n                  <S.ListItem key={index}>\n                    <Avatar icon={<UserOutlined />} />\n                    <S.User>\n                      {user.name} - {user.age}\n                    </S.User>\n                  </S.ListItem>\n                ))}\n              </S.List>\n            ) : (\n              <S.Text>\n                ( <SmileOutlined /> {t('forms.controlFormLabels.noUser')} )\n              </S.Text>\n            );\n          }}\n        </S.UserList>\n      </BaseButtonsForm>\n      <AddUserFormModal visible={visible} onCancel={hideUserModal} />\n    </BaseButtonsForm.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}