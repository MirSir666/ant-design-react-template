{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/utils/utils.tsx\",\n    _this = this;\n\nimport { Col, Row } from 'antd';\nimport { Priority } from '@app//constants/enums/priorities';\nimport { ReactComponent as ETHIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@app/assets/icons/eth.svg\";\nimport { ReactComponent as BTCIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@app/assets/icons/btc.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var camelize = function camelize(string) {\n  return string.split(' ').map(function (word, index) {\n    return index === 0 ? word.toLowerCase() : word[0].toUpperCase() + word.slice(1);\n  }).join('');\n};\nexport var getCurrencyPrice = function getCurrencyPrice(price, currency) {\n  var isIcon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  switch (currency) {\n    case 'USD':\n      {\n        return isIcon ? \"$\".concat(price) : \"\".concat(price, \" USD\");\n      }\n\n    case 'BTC':\n      {\n        return isIcon ? /*#__PURE__*/_jsxDEV(Row, {\n          align: \"middle\",\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(BTCIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            children: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, _this) : \"\".concat(price, \" BTC\");\n      }\n\n    case 'ETH':\n      {\n        return isIcon ? /*#__PURE__*/_jsxDEV(Row, {\n          align: \"middle\",\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(ETHIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            children: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, _this) : \"\".concat(price, \" ETH\");\n      }\n\n    default:\n      {\n        return isIcon ? \"$\".concat(price) : \"\".concat(price, \" USD\");\n      }\n  }\n};\nexport var getMarkAreaData = function getMarkAreaData(data) {\n  return data.map(function (el, index) {\n    return [{\n      xAxis: 2 * index\n    }, {\n      xAxis: 2 * index + 1\n    }];\n  });\n};\nexport var capitalize = function capitalize(word) {\n  return \"\".concat(word[0].toUpperCase()).concat(word.slice(1));\n};\nexport var hexToRGB = function hexToRGB(hex) {\n  var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n  return \"\".concat(r, \", \").concat(g, \", \").concat(b);\n};\nexport var getDifference = function getDifference(value, prevValue) {\n  return prevValue !== 0 ? \"\".concat((Math.abs(value - prevValue) / prevValue * 100).toFixed(0), \"%\") : '100%';\n};\nexport var normalizeProp = function normalizeProp(prop) {\n  return typeof prop === 'number' ? \"\".concat(prop, \"px\") : Array.isArray(prop) && \"\".concat(prop[0], \"px \").concat(prop[1], \"px\") || prop.toString();\n};\nexport var defineColorByPriority = function defineColorByPriority(priority) {\n  switch (priority) {\n    case Priority.INFO:\n      return 'var(--primary-color)';\n\n    case Priority.LOW:\n      return 'var(--success-color)';\n\n    case Priority.MEDIUM:\n      return 'var(--warning-color)';\n\n    case Priority.HIGH:\n      return 'var(--error-color)';\n\n    default:\n      return 'var(--success-color)';\n  }\n};\nexport var defineColorBySeverity = function defineColorBySeverity(severity) {\n  var rgb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var postfix = rgb ? 'rgb-color' : 'color';\n\n  switch (severity) {\n    case 'error':\n    case 'warning':\n    case 'success':\n      return \"var(--\".concat(severity, \"-\").concat(postfix, \")\");\n\n    case 'info':\n    default:\n      return \"var(--primary-\".concat(postfix, \")\");\n  }\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nexport var mergeBy = function mergeBy(a, b, key) {\n  return a.filter(function (elem) {\n    return !b.find(function (subElem) {\n      return subElem[key] === elem[key];\n    });\n  }).concat(b);\n};\nexport var getSmoothRandom = function getSmoothRandom(factor, start) {\n  var halfEnvelope = 1 / factor / 2;\n  var max = Math.min(1, start + halfEnvelope);\n  var min = Math.max(0, start - halfEnvelope);\n  return Math.random() * (max - min) + min;\n};\nexport var shadeColor = function shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n  R = parseInt((R * (100 + percent) / 100).toString());\n  G = parseInt((G * (100 + percent) / 100).toString());\n  B = parseInt((B * (100 + percent) / 100).toString());\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n  var RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n  return '#' + RR + GG + BB;\n};\nexport var hexToHSL = function hexToHSL(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  if (result) {\n    var r = parseInt(result[1], 16);\n    var g = parseInt(result[2], 16);\n    var b = parseInt(result[3], 16);\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n    var h, s;\n    var l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n\n        default:\n          h = 0;\n      }\n\n      h /= 6;\n    }\n\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  } else {\n    throw new Error('Non valid HEX color');\n  }\n};\nexport var formatNumberWithCommas = function formatNumberWithCommas(value) {\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/utils/utils.tsx"],"names":["Col","Row","Priority","camelize","string","split","map","word","index","toLowerCase","toUpperCase","slice","join","getCurrencyPrice","price","currency","isIcon","display","getMarkAreaData","data","el","xAxis","capitalize","hexToRGB","hex","r","parseInt","g","b","getDifference","value","prevValue","Math","abs","toFixed","normalizeProp","prop","Array","isArray","toString","defineColorByPriority","priority","INFO","LOW","MEDIUM","HIGH","defineColorBySeverity","severity","rgb","postfix","mergeBy","a","key","filter","elem","find","subElem","concat","getSmoothRandom","factor","start","halfEnvelope","max","min","random","shadeColor","color","percent","R","substring","G","B","RR","length","GG","BB","hexToHSL","result","exec","h","s","l","d","Error","formatNumberWithCommas","replace"],"mappings":"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","sourcesContent":["import { Col, Row } from 'antd';\nimport { NotificationType } from '@app/components/common/Notification/Notification';\nimport { CurrencyType } from '@app/interfaces/interfaces';\nimport { Priority } from '@app//constants/enums/priorities';\nimport { ReactComponent as ETHIcon } from '@app/assets/icons/eth.svg';\nimport { ReactComponent as BTCIcon } from '@app/assets/icons/btc.svg';\n\nexport const camelize = (string: string): string => {\n  return string\n    .split(' ')\n    .map((word, index) => (index === 0 ? word.toLowerCase() : word[0].toUpperCase() + word.slice(1)))\n    .join('');\n};\n\nexport const getCurrencyPrice = (\n  price: number | string,\n  currency: CurrencyType,\n  isIcon = true,\n): string | React.ReactNode => {\n  switch (currency) {\n    case 'USD': {\n      return isIcon ? `$${price}` : `${price} USD`;\n    }\n\n    case 'BTC': {\n      return isIcon ? (\n        <Row align=\"middle\" gutter={[8, 8]}>\n          <Col style={{ display: 'flex' }}>\n            <BTCIcon />\n          </Col>\n\n          <Col>{price}</Col>\n        </Row>\n      ) : (\n        `${price} BTC`\n      );\n    }\n\n    case 'ETH': {\n      return isIcon ? (\n        <Row align=\"middle\" gutter={[8, 8]}>\n          <Col style={{ display: 'flex' }}>\n            <ETHIcon />\n          </Col>\n\n          <Col>{price}</Col>\n        </Row>\n      ) : (\n        `${price} ETH`\n      );\n    }\n\n    default: {\n      return isIcon ? `$${price}` : `${price} USD`;\n    }\n  }\n};\n\ntype MarkArea = {\n  xAxis: number;\n};\n\nexport const getMarkAreaData = (data: string[] | number[]): MarkArea[][] =>\n  data.map((el, index) => [\n    {\n      xAxis: 2 * index,\n    },\n    {\n      xAxis: 2 * index + 1,\n    },\n  ]);\n\nexport const capitalize = (word: string): string => `${word[0].toUpperCase()}${word.slice(1)}`;\n\nexport const hexToRGB = (hex: string): string => {\n  const r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  return `${r}, ${g}, ${b}`;\n};\n\nexport const getDifference = (value: number, prevValue: number): string | null =>\n  prevValue !== 0 ? `${((Math.abs(value - prevValue) / prevValue) * 100).toFixed(0)}%` : '100%';\n\nexport const normalizeProp = (prop: string | number | [number, number]): string =>\n  typeof prop === 'number' ? `${prop}px` : (Array.isArray(prop) && `${prop[0]}px ${prop[1]}px`) || prop.toString();\n\nexport const defineColorByPriority = (priority: Priority): string => {\n  switch (priority) {\n    case Priority.INFO:\n      return 'var(--primary-color)';\n    case Priority.LOW:\n      return 'var(--success-color)';\n    case Priority.MEDIUM:\n      return 'var(--warning-color)';\n    case Priority.HIGH:\n      return 'var(--error-color)';\n    default:\n      return 'var(--success-color)';\n  }\n};\n\nexport const defineColorBySeverity = (severity: NotificationType | undefined, rgb = false): string => {\n  const postfix = rgb ? 'rgb-color' : 'color';\n  switch (severity) {\n    case 'error':\n    case 'warning':\n    case 'success':\n      return `var(--${severity}-${postfix})`;\n    case 'info':\n    default:\n      return `var(--primary-${postfix})`;\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeBy = (a: any[], b: any[], key: string): any[] =>\n  a.filter((elem) => !b.find((subElem) => subElem[key] === elem[key])).concat(b);\n\nexport const getSmoothRandom = (factor: number, start: number): number => {\n  const halfEnvelope = 1 / factor / 2;\n  const max = Math.min(1, start + halfEnvelope);\n  const min = Math.max(0, start - halfEnvelope);\n\n  return Math.random() * (max - min) + min;\n};\n\nexport const shadeColor = (color: string, percent: number): string => {\n  let R = parseInt(color.substring(1, 3), 16);\n  let G = parseInt(color.substring(3, 5), 16);\n  let B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt(((R * (100 + percent)) / 100).toString());\n  G = parseInt(((G * (100 + percent)) / 100).toString());\n  B = parseInt(((B * (100 + percent)) / 100).toString());\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  const RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n  const GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n  const BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n\n  return '#' + RR + GG + BB;\n};\n\nexport const hexToHSL = (hex: string): { h: number; s: number; l: number } => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  if (result) {\n    let r = parseInt(result[1], 16);\n    let g = parseInt(result[2], 16);\n    let b = parseInt(result[3], 16);\n    (r /= 255), (g /= 255), (b /= 255);\n    const max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    let h, s;\n    const l = (max + min) / 2;\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        default:\n          h = 0;\n      }\n      h /= 6;\n    }\n    return {\n      h,\n      s,\n      l,\n    };\n  } else {\n    throw new Error('Non valid HEX color');\n  }\n};\n\nexport const formatNumberWithCommas = (value: number): string => {\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n"]},"metadata":{},"sourceType":"module"}