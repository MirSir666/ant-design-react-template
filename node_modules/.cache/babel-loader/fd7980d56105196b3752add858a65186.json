{"ast":null,"code":"import _regeneratorRuntime from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _s = $RefreshSig$();\nimport { Dates } from '@app/constants/Dates';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nvar localLanguage = localStorage.getItem('lng') || 'cn';\nexport var useLanguage = function useLanguage() {\n  _s();\n  var _useTranslation = useTranslation(),\n    i18n = _useTranslation.i18n;\n  var handleChangeLanguage = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(locale) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Dates.setLocale(locale);\n              localStorage.setItem('lng', locale);\n              _context.next = 4;\n              return i18n.changeLanguage(locale);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [i18n]);\n  useEffect(function () {\n    localLanguage && handleChangeLanguage(localLanguage);\n  }, [handleChangeLanguage]);\n  return useMemo(function () {\n    return {\n      language: i18n.language,\n      setLanguage: handleChangeLanguage\n    };\n  }, [handleChangeLanguage, i18n.language]);\n};\n_s(useLanguage, \"fDGGfqgEoqe3wo6ModKTk4Jwm78=\", false, function () {\n  return [useTranslation];\n});","map":{"version":3,"names":["Dates","useCallback","useEffect","useMemo","useTranslation","localLanguage","localStorage","getItem","useLanguage","i18n","handleChangeLanguage","locale","setLocale","setItem","changeLanguage","language","setLanguage"],"sources":["/workspace/ant-design-react-template/src/hooks/useLanguage.ts"],"sourcesContent":["import { Dates } from '@app/constants/Dates';\nimport { LanguageType } from '@app/interfaces/interfaces';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst localLanguage = (localStorage.getItem('lng') as LanguageType) || 'cn';\n\nexport const useLanguage = (): { language: LanguageType; setLanguage: (locale: LanguageType) => Promise<void> } => {\n  const { i18n } = useTranslation();\n\n  const handleChangeLanguage = useCallback(\n    async (locale: LanguageType) => {\n      Dates.setLocale(locale);\n      localStorage.setItem('lng', locale);\n      await i18n.changeLanguage(locale);\n    },\n    [i18n],\n  );\n\n  useEffect(() => {\n    localLanguage && handleChangeLanguage(localLanguage);\n  }, [handleChangeLanguage]);\n\n  return useMemo(\n    () => ({ language: i18n.language as LanguageType, setLanguage: handleChangeLanguage }),\n    [handleChangeLanguage, i18n.language],\n  );\n};\n"],"mappings":";;;AAAA,SAASA,KAAK,QAAQ,sBAAsB;AAE5C,SAASC,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACvD,SAASC,cAAc,QAAQ,eAAe;AAE9C,IAAMC,aAAa,GAAIC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,IAAqB,IAAI;AAE3E,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAA2F;EAAA;EACjH,sBAAiBJ,cAAc,EAAE;IAAzBK,IAAI,mBAAJA,IAAI;EAEZ,IAAMC,oBAAoB,GAAGT,WAAW;IAAA,sEACtC,iBAAOU,MAAoB;MAAA;QAAA;UAAA;YAAA;cACzBX,KAAK,CAACY,SAAS,CAACD,MAAM,CAAC;cACvBL,YAAY,CAACO,OAAO,CAAC,KAAK,EAAEF,MAAM,CAAC;cAAC;cAAA,OAC9BF,IAAI,CAACK,cAAc,CAACH,MAAM,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAClC;IAAA;MAAA;IAAA;EAAA,KACD,CAACF,IAAI,CAAC,CACP;EAEDP,SAAS,CAAC,YAAM;IACdG,aAAa,IAAIK,oBAAoB,CAACL,aAAa,CAAC;EACtD,CAAC,EAAE,CAACK,oBAAoB,CAAC,CAAC;EAE1B,OAAOP,OAAO,CACZ;IAAA,OAAO;MAAEY,QAAQ,EAAEN,IAAI,CAACM,QAAwB;MAAEC,WAAW,EAAEN;IAAqB,CAAC;EAAA,CAAC,EACtF,CAACA,oBAAoB,EAAED,IAAI,CAACM,QAAQ,CAAC,CACtC;AACH,CAAC;AAAC,GApBWP,WAAW;EAAA,QACLJ,cAAc;AAAA"},"metadata":{},"sourceType":"module"}