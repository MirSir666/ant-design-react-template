{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/auth/NewPasswordForm/NewPasswordForm.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\nimport { doSetNewPassword } from '@app/store/slices/authSlice';\nimport * as S from './NewPasswordForm.styles';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initStates = {\n  password: 'new-password',\n  confirmPassword: 'new-password'\n};\nexport var NewPasswordForm = function NewPasswordForm() {\n  _s();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var navigate = useNavigate();\n  var dispatch = useAppDispatch();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var handleSubmit = function handleSubmit(values) {\n    setLoading(true);\n    dispatch(doSetNewPassword({\n      newPassword: values.password\n    })).unwrap().then(function () {\n      navigate('/auth/login');\n      notificationController.success({\n        message: t('newPassword.successMessage'),\n        description: t('newPassword.successDescription')\n      });\n    }).catch(function (err) {\n      notificationController.error({\n        message: err.message\n      });\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Auth.FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(BaseForm, {\n      layout: \"vertical\",\n      onFinish: handleSubmit,\n      requiredMark: \"optional\",\n      initialValues: initStates,\n      children: [/*#__PURE__*/_jsxDEV(Auth.BackWrapper, {\n        onClick: function onClick() {\n          return navigate(-1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Auth.BackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this), t('common.back')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Auth.FormTitle, {\n        children: t('newPassword.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Description, {\n        children: t('newPassword.description')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Auth.FormItem, {\n        name: \"password\",\n        label: t('common.password'),\n        rules: [{\n          required: true,\n          message: t('common.requiredField')\n        }],\n        children: /*#__PURE__*/_jsxDEV(Auth.FormInputPassword, {\n          placeholder: t('common.password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Auth.FormItem, {\n        name: \"confirmPassword\",\n        label: t('common.confirmPassword'),\n        dependencies: ['password'],\n        rules: [{\n          required: true,\n          message: t('common.requiredField')\n        }, function (_ref) {\n          var getFieldValue = _ref.getFieldValue;\n          return {\n            validator: function validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject(new Error(t('common.confirmPasswordError')));\n            }\n          };\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsxDEV(Auth.FormInputPassword, {\n          placeholder: t('common.confirmPassword')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(BaseForm.Item, {\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(S.SubmitButton, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: isLoading,\n          children: t('common.resetPassword')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n_s(NewPasswordForm, \"azDs0u2xwfLQHfNwyECB+6lAD3U=\", false, function () {\n  return [useTranslation, useNavigate, useAppDispatch];\n});\n_c = NewPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"NewPasswordForm\");","map":{"version":3,"names":["React","useState","useNavigate","useTranslation","BaseForm","notificationController","useAppDispatch","doSetNewPassword","S","Auth","initStates","password","confirmPassword","NewPasswordForm","t","navigate","dispatch","isLoading","setLoading","handleSubmit","values","newPassword","unwrap","then","success","message","description","catch","err","error","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"sources":["/workspace/ant-design-react-template/src/components/auth/NewPasswordForm/NewPasswordForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\nimport { doSetNewPassword } from '@app/store/slices/authSlice';\nimport * as S from './NewPasswordForm.styles';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\n\ninterface NewPasswordFormData {\n  password: string;\n  confirmPassword: string;\n}\n\nconst initStates = {\n  password: 'new-password',\n  confirmPassword: 'new-password',\n};\n\nexport const NewPasswordForm: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = (values: NewPasswordFormData) => {\n    setLoading(true);\n    dispatch(doSetNewPassword({ newPassword: values.password }))\n      .unwrap()\n      .then(() => {\n        navigate('/auth/login');\n        notificationController.success({\n          message: t('newPassword.successMessage'),\n          description: t('newPassword.successDescription'),\n        });\n      })\n      .catch((err) => {\n        notificationController.error({ message: err.message });\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Auth.FormWrapper>\n      <BaseForm layout=\"vertical\" onFinish={handleSubmit} requiredMark=\"optional\" initialValues={initStates}>\n        <Auth.BackWrapper onClick={() => navigate(-1)}>\n          <Auth.BackIcon />\n          {t('common.back')}\n        </Auth.BackWrapper>\n        <Auth.FormTitle>{t('newPassword.title')}</Auth.FormTitle>\n        <S.Description>{t('newPassword.description')}</S.Description>\n        <Auth.FormItem\n          name=\"password\"\n          label={t('common.password')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <Auth.FormInputPassword placeholder={t('common.password')} />\n        </Auth.FormItem>\n        <Auth.FormItem\n          name=\"confirmPassword\"\n          label={t('common.confirmPassword')}\n          dependencies={['password']}\n          rules={[\n            { required: true, message: t('common.requiredField') },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error(t('common.confirmPasswordError')));\n              },\n            }),\n          ]}\n          hasFeedback\n        >\n          <Auth.FormInputPassword placeholder={t('common.confirmPassword')} />\n        </Auth.FormItem>\n        <BaseForm.Item noStyle>\n          <S.SubmitButton type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.resetPassword')}\n          </S.SubmitButton>\n        </BaseForm.Item>\n      </BaseForm>\n    </Auth.FormWrapper>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,QAAQ,QAAQ,gDAAgD;AACzE,SAASC,sBAAsB,QAAQ,yCAAyC;AAChF,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,OAAO,KAAKC,CAAC,MAAM,0BAA0B;AAC7C,OAAO,KAAKC,IAAI,MAAM,sDAAsD;AAAC;AAO7E,IAAMC,UAAU,GAAG;EACjBC,QAAQ,EAAE,cAAc;EACxBC,eAAe,EAAE;AACnB,CAAC;AAED,OAAO,IAAMC,eAAyB,GAAG,SAA5BA,eAAyB,GAAS;EAAA;EAC7C,sBAAcV,cAAc,EAAE;IAAtBW,CAAC,mBAADA,CAAC;EACT,IAAMC,QAAQ,GAAGb,WAAW,EAAE;EAC9B,IAAMc,QAAQ,GAAGV,cAAc,EAAE;EACjC,gBAAgCL,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAxCgB,SAAS;IAAEC,UAAU;EAE5B,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,MAA2B,EAAK;IACpDF,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAACT,gBAAgB,CAAC;MAAEc,WAAW,EAAED,MAAM,CAACT;IAAS,CAAC,CAAC,CAAC,CACzDW,MAAM,EAAE,CACRC,IAAI,CAAC,YAAM;MACVR,QAAQ,CAAC,aAAa,CAAC;MACvBV,sBAAsB,CAACmB,OAAO,CAAC;QAC7BC,OAAO,EAAEX,CAAC,CAAC,4BAA4B,CAAC;QACxCY,WAAW,EAAEZ,CAAC,CAAC,gCAAgC;MACjD,CAAC,CAAC;IACJ,CAAC,CAAC,CACDa,KAAK,CAAC,UAACC,GAAG,EAAK;MACdvB,sBAAsB,CAACwB,KAAK,CAAC;QAAEJ,OAAO,EAAEG,GAAG,CAACH;MAAQ,CAAC,CAAC;MACtDP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACE,QAAC,IAAI,CAAC,WAAW;IAAA,uBACf,QAAC,QAAQ;MAAC,MAAM,EAAC,UAAU;MAAC,QAAQ,EAAEC,YAAa;MAAC,YAAY,EAAC,UAAU;MAAC,aAAa,EAAET,UAAW;MAAA,wBACpG,QAAC,IAAI,CAAC,WAAW;QAAC,OAAO,EAAE;UAAA,OAAMK,QAAQ,CAAC,CAAC,CAAC,CAAC;QAAA,CAAC;QAAA,wBAC5C,QAAC,IAAI,CAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,SAAG,EAChBD,CAAC,CAAC,aAAa,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,SACA,eACnB,QAAC,IAAI,CAAC,SAAS;QAAA,UAAEA,CAAC,CAAC,mBAAmB;MAAC;QAAA;QAAA;QAAA;MAAA,SAAkB,eACzD,QAAC,CAAC,CAAC,WAAW;QAAA,UAAEA,CAAC,CAAC,yBAAyB;MAAC;QAAA;QAAA;QAAA;MAAA,SAAiB,eAC7D,QAAC,IAAI,CAAC,QAAQ;QACZ,IAAI,EAAC,UAAU;QACf,KAAK,EAAEA,CAAC,CAAC,iBAAiB,CAAE;QAC5B,KAAK,EAAE,CAAC;UAAEgB,QAAQ,EAAE,IAAI;UAAEL,OAAO,EAAEX,CAAC,CAAC,sBAAsB;QAAE,CAAC,CAAE;QAAA,uBAEhE,QAAC,IAAI,CAAC,iBAAiB;UAAC,WAAW,EAAEA,CAAC,CAAC,iBAAiB;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,SAC/C,eAChB,QAAC,IAAI,CAAC,QAAQ;QACZ,IAAI,EAAC,iBAAiB;QACtB,KAAK,EAAEA,CAAC,CAAC,wBAAwB,CAAE;QACnC,YAAY,EAAE,CAAC,UAAU,CAAE;QAC3B,KAAK,EAAE,CACL;UAAEgB,QAAQ,EAAE,IAAI;UAAEL,OAAO,EAAEX,CAAC,CAAC,sBAAsB;QAAE,CAAC,EACtD;UAAA,IAAGiB,aAAa,QAAbA,aAAa;UAAA,OAAQ;YACtBC,SAAS,qBAACC,CAAC,EAAEC,KAAK,EAAE;cAClB,IAAI,CAACA,KAAK,IAAIH,aAAa,CAAC,UAAU,CAAC,KAAKG,KAAK,EAAE;gBACjD,OAAOC,OAAO,CAACC,OAAO,EAAE;cAC1B;cACA,OAAOD,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAACxB,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;YACpE;UACF,CAAC;QAAA,CAAC,CACF;QACF,WAAW;QAAA,uBAEX,QAAC,IAAI,CAAC,iBAAiB;UAAC,WAAW,EAAEA,CAAC,CAAC,wBAAwB;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,SACtD,eAChB,QAAC,QAAQ,CAAC,IAAI;QAAC,OAAO;QAAA,uBACpB,QAAC,CAAC,CAAC,YAAY;UAAC,IAAI,EAAC,SAAS;UAAC,QAAQ,EAAC,QAAQ;UAAC,OAAO,EAAEG,SAAU;UAAA,UACjEH,CAAC,CAAC,sBAAsB;QAAC;UAAA;UAAA;UAAA;QAAA;MACX;QAAA;QAAA;QAAA;MAAA,SACH;IAAA;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,SACM;AAEvB,CAAC;AAAC,GAlEWD,eAAyB;EAAA,QACtBV,cAAc,EACXD,WAAW,EACXI,cAAc;AAAA;AAAA,KAHpBO,eAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}