{"ast":null,"code":"import _toConsumableArray from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React from'react';import{useTranslation}from'react-i18next';import{Dropdown}from'@app/components/common/Dropdown/Dropdown';import{kanbanPeople}from'constants/kanbanPeople';import StubAvatar from'../../../../../assets/images/stub-avatar.webp';import*as S from'./ParticipantsDropdown.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ParticipantsDropdown=function ParticipantsDropdown(_ref){var selectedParticipants=_ref.selectedParticipants,setSelectedParticipants=_ref.setSelectedParticipants;var _useTranslation=useTranslation(),t=_useTranslation.t;var kanbanPeopleData=Object.values(kanbanPeople);var selectedParticipantsIds=selectedParticipants.map(function(item){return item.id;});var onPeopleClick=function onPeopleClick(tag){var isExist=selectedParticipantsIds.includes(tag.id);if(isExist){setSelectedParticipants(selectedParticipants.filter(function(item){return item.id!==tag.id;}));}else{setSelectedParticipants([].concat(_toConsumableArray(selectedParticipants),[tag]));}};return/*#__PURE__*/_jsx(Dropdown,{placement:\"bottomCenter\",trigger:['click'],overlay:/*#__PURE__*/_jsxs(S.EditParticipantPopover,{children:[kanbanPeopleData.map(function(participant){return/*#__PURE__*/_jsxs(S.ParticipantRow,{onClick:function onClick(e){onPeopleClick(participant);e.stopPropagation();},children:[/*#__PURE__*/_jsx(S.PopoverCheckbox,{checked:selectedParticipantsIds.includes(participant.id)}),/*#__PURE__*/_jsx(S.ParticipantAvatar,{src:participant.avatar?participant.avatar:StubAvatar}),/*#__PURE__*/_jsx(S.ParticipantName,{children:participant.name})]},participant.id);}),/*#__PURE__*/_jsx(S.RemoveParticipantWrapper,{children:/*#__PURE__*/_jsx(S.ClosePopover,{})})]}),children:selectedParticipants&&selectedParticipants.length>0?/*#__PURE__*/_jsx(S.ParticipantsWrapper,{children:selectedParticipants.map(function(participant){return/*#__PURE__*/_jsxs(S.ParticipantRow,{children:[/*#__PURE__*/_jsx(S.ParticipantAvatar,{src:participant.avatar?participant.avatar:StubAvatar}),/*#__PURE__*/_jsx(S.ParticipantName,{children:participant.name}),/*#__PURE__*/_jsx(S.RemoveParticipant,{onClick:function onClick(e){e.stopPropagation();onPeopleClick(participant);}})]},participant.id);})}):/*#__PURE__*/_jsx(S.ParticipantsWrapper,{children:/*#__PURE__*/_jsx(S.AddParticipant,{children:t('kanban.addParticipant')})})});};","map":{"version":3,"names":["React","useTranslation","Dropdown","kanbanPeople","StubAvatar","S","ParticipantsDropdown","selectedParticipants","setSelectedParticipants","t","kanbanPeopleData","Object","values","selectedParticipantsIds","map","item","id","onPeopleClick","tag","isExist","includes","filter","participant","e","stopPropagation","avatar","name","length"],"sources":["/workspace/ant-design-react-template/src/components/apps/kanban/newCardForm/ParticipantsDropdown/ParticipantsDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Participant as IParticipant } from '../../interfaces';\nimport { kanbanPeople } from 'constants/kanbanPeople';\nimport StubAvatar from '../../../../../assets/images/stub-avatar.webp';\nimport * as S from './ParticipantsDropdown.styles';\n\ninterface ParticipantsDropdownProps {\n  selectedParticipants: IParticipant[];\n  setSelectedParticipants: (state: IParticipant[]) => void;\n}\n\nexport const ParticipantsDropdown: React.FC<ParticipantsDropdownProps> = ({\n  selectedParticipants,\n  setSelectedParticipants,\n}) => {\n  const { t } = useTranslation();\n  const kanbanPeopleData = Object.values(kanbanPeople);\n  const selectedParticipantsIds = selectedParticipants.map((item) => item.id);\n\n  const onPeopleClick = (tag: IParticipant) => {\n    const isExist = selectedParticipantsIds.includes(tag.id);\n\n    if (isExist) {\n      setSelectedParticipants(selectedParticipants.filter((item) => item.id !== tag.id));\n    } else {\n      setSelectedParticipants([...selectedParticipants, tag]);\n    }\n  };\n\n  return (\n    <Dropdown\n      placement=\"bottomCenter\"\n      trigger={['click']}\n      overlay={\n        <S.EditParticipantPopover>\n          {kanbanPeopleData.map((participant: IParticipant) => (\n            <S.ParticipantRow\n              key={participant.id}\n              onClick={(e) => {\n                onPeopleClick(participant);\n                e.stopPropagation();\n              }}\n            >\n              <S.PopoverCheckbox checked={selectedParticipantsIds.includes(participant.id)} />\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n            </S.ParticipantRow>\n          ))}\n          <S.RemoveParticipantWrapper>\n            <S.ClosePopover />\n          </S.RemoveParticipantWrapper>\n        </S.EditParticipantPopover>\n      }\n    >\n      {selectedParticipants && selectedParticipants.length > 0 ? (\n        <S.ParticipantsWrapper>\n          {selectedParticipants.map((participant) => (\n            <S.ParticipantRow key={participant.id}>\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n              <S.RemoveParticipant\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onPeopleClick(participant);\n                }}\n              />\n            </S.ParticipantRow>\n          ))}\n        </S.ParticipantsWrapper>\n      ) : (\n        <S.ParticipantsWrapper>\n          <S.AddParticipant>{t('kanban.addParticipant')}</S.AddParticipant>\n        </S.ParticipantsWrapper>\n      )}\n    </Dropdown>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}