{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useCallback}from'react';import{Table}from'components/common/Table/Table';import{getTreeTableData}from'api/table.api';import{useTranslation}from'react-i18next';import{useMounted}from'@app/hooks/useMounted';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var initialPagination={current:1,pageSize:4};export var TreeTable=function TreeTable(){var _useState=useState({data:[],pagination:initialPagination,loading:false}),_useState2=_slicedToArray(_useState,2),tableData=_useState2[0],setTableData=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useMounted=useMounted(),isMounted=_useMounted.isMounted;var fetch=useCallback(function(pagination){setTableData(function(tableData){return _objectSpread(_objectSpread({},tableData),{},{loading:true});});getTreeTableData(pagination).then(function(res){if(isMounted.current){setTableData({data:res.data,pagination:res.pagination,loading:false});}});},[isMounted]);useEffect(function(){fetch(initialPagination);},[fetch]);var handleTableChange=function handleTableChange(pagination){fetch(pagination);};var rowSelection={onChange:function onChange(selectedRowKeys,selectedRows){console.log(selectedRowKeys,selectedRows);},onSelect:function onSelect(record,selected,selectedRows){console.log(record,selected,selectedRows);},onSelectAll:function onSelectAll(selected,selectedRows){console.log(selected,selectedRows);}};var columns=[{title:t('common.name'),dataIndex:'name',key:'name'},{title:t('common.age'),dataIndex:'age',key:'age',width:'12%'},{title:t('common.address'),dataIndex:'address',width:'30%',key:'address'}];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:tableData.data,rowSelection:_objectSpread({},rowSelection),pagination:tableData.pagination,loading:tableData.loading,onChange:handleTableChange,scroll:{x:800}})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/tables/TreeTable/TreeTable.tsx"],"names":["React","useState","useEffect","useCallback","Table","getTreeTableData","useTranslation","useMounted","initialPagination","current","pageSize","TreeTable","data","pagination","loading","tableData","setTableData","t","isMounted","fetch","then","res","handleTableChange","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","onSelect","record","selected","onSelectAll","columns","title","dataIndex","key","width","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Table } from 'components/common/Table/Table';\nimport { TablePaginationConfig } from 'antd';\nimport { Key, DefaultRecordType } from 'rc-table/lib/interface';\nimport { TreeTableRow, Pagination, getTreeTableData } from 'api/table.api';\nimport { useTranslation } from 'react-i18next';\nimport { useMounted } from '@app/hooks/useMounted';\n\nconst initialPagination: Pagination = {\n  current: 1,\n  pageSize: 4,\n};\n\nexport const TreeTable: React.FC = () => {\n  const [tableData, setTableData] = useState<{ data: TreeTableRow[]; pagination: Pagination; loading: boolean }>({\n    data: [],\n    pagination: initialPagination,\n    loading: false,\n  });\n  const { t } = useTranslation();\n  const { isMounted } = useMounted();\n\n  const fetch = useCallback(\n    (pagination: Pagination) => {\n      setTableData((tableData) => ({ ...tableData, loading: true }));\n      getTreeTableData(pagination).then((res) => {\n        if (isMounted.current) {\n          setTableData({ data: res.data, pagination: res.pagination, loading: false });\n        }\n      });\n    },\n    [isMounted],\n  );\n\n  useEffect(() => {\n    fetch(initialPagination);\n  }, [fetch]);\n\n  const handleTableChange = (pagination: TablePaginationConfig) => {\n    fetch(pagination);\n  };\n\n  const rowSelection = {\n    onChange: (selectedRowKeys: Key[], selectedRows: DefaultRecordType[]) => {\n      console.log(selectedRowKeys, selectedRows);\n    },\n    onSelect: (record: DefaultRecordType, selected: boolean, selectedRows: DefaultRecordType[]) => {\n      console.log(record, selected, selectedRows);\n    },\n    onSelectAll: (selected: boolean, selectedRows: DefaultRecordType[]) => {\n      console.log(selected, selectedRows);\n    },\n  };\n\n  const columns = [\n    {\n      title: t('common.name'),\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: t('common.age'),\n      dataIndex: 'age',\n      key: 'age',\n      width: '12%',\n    },\n    {\n      title: t('common.address'),\n      dataIndex: 'address',\n      width: '30%',\n      key: 'address',\n    },\n  ];\n\n  return (\n    <>\n      <Table\n        columns={columns}\n        dataSource={tableData.data}\n        rowSelection={{ ...rowSelection }}\n        pagination={tableData.pagination}\n        loading={tableData.loading}\n        onChange={handleTableChange}\n        scroll={{ x: 800 }}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}