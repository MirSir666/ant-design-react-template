{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{BaseChart,getDefaultTooltipStyles}from'@app/components/common/charts/BaseChart';import{formatNumberWithCommas,getCurrencyPrice}from'@app/utils/utils';import{useAppSelector}from'@app/hooks/reduxHooks';import{themeObject}from'@app/styles/themes/themeVariables';import{jsx as _jsx}from\"react/jsx-runtime\";export var TotalEarningChart=function TotalEarningChart(_ref){var xAxisData=_ref.xAxisData,earningData=_ref.earningData;var theme=useAppSelector(function(state){return state.theme.theme;});var option={tooltip:_objectSpread(_objectSpread({},getDefaultTooltipStyles(themeObject[theme])),{},{trigger:'axis',crossStyle:{color:'red'},formatter:function formatter(data){var currentSeries=data[0];return\"\".concat(currentSeries.name,\" - \").concat(getCurrencyPrice(formatNumberWithCommas(currentSeries.value),'USD'));}}),grid:{top:0,left:0,right:0,bottom:0},xAxis:[{show:false,type:'category',boundaryGap:false,data:xAxisData}],yAxis:[{show:false,type:'value'}],series:[{type:'line',smooth:true,showSymbol:false,lineStyle:{width:3,color:themeObject[theme].chartColor3},emphasis:{focus:'series'},data:earningData===null||earningData===void 0?void 0:earningData.data}]};return/*#__PURE__*/_jsx(BaseChart,{option:option,width:\"100%\",height:75});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/totalEarning/TotalEarningChart/TotalEarningChart.tsx"],"names":["React","BaseChart","getDefaultTooltipStyles","formatNumberWithCommas","getCurrencyPrice","useAppSelector","themeObject","TotalEarningChart","xAxisData","earningData","theme","state","option","tooltip","trigger","crossStyle","color","formatter","data","currentSeries","name","value","grid","top","left","right","bottom","xAxis","show","type","boundaryGap","yAxis","series","smooth","showSymbol","lineStyle","width","chartColor3","emphasis","focus"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,uBAApB,KAAmD,yCAAnD,CAEA,OAASC,sBAAT,CAAiCC,gBAAjC,KAAyD,kBAAzD,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,WAAT,KAA4B,mCAA5B,C,2CAWA,MAAO,IAAMC,CAAAA,iBAAmD,CAAG,QAAtDA,CAAAA,iBAAsD,MAAgC,IAA7BC,CAAAA,SAA6B,MAA7BA,SAA6B,CAAlBC,WAAkB,MAAlBA,WAAkB,CACjG,GAAMC,CAAAA,KAAK,CAAGL,cAAc,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAN,CAAYA,KAAvB,EAAD,CAA5B,CACA,GAAME,CAAAA,MAAM,CAAG,CACbC,OAAO,gCACFX,uBAAuB,CAACI,WAAW,CAACI,KAAD,CAAZ,CADrB,MAELI,OAAO,CAAE,MAFJ,CAGLC,UAAU,CAAE,CACVC,KAAK,CAAE,KADG,CAHP,CAMLC,SAAS,CAAE,mBAACC,IAAD,CAA2B,CACpC,GAAMC,CAAAA,aAAa,CAAGD,IAAI,CAAC,CAAD,CAA1B,CAEA,gBAAUC,aAAa,CAACC,IAAxB,eAAkChB,gBAAgB,CAACD,sBAAsB,CAACgB,aAAa,CAACE,KAAf,CAAvB,CAA8C,KAA9C,CAAlD,EACD,CAVI,EADM,CAabC,IAAI,CAAE,CACJC,GAAG,CAAE,CADD,CAEJC,IAAI,CAAE,CAFF,CAGJC,KAAK,CAAE,CAHH,CAIJC,MAAM,CAAE,CAJJ,CAbO,CAmBbC,KAAK,CAAE,CACL,CACEC,IAAI,CAAE,KADR,CAEEC,IAAI,CAAE,UAFR,CAGEC,WAAW,CAAE,KAHf,CAIEZ,IAAI,CAAEV,SAJR,CADK,CAnBM,CA2BbuB,KAAK,CAAE,CACL,CACEH,IAAI,CAAE,KADR,CAEEC,IAAI,CAAE,OAFR,CADK,CA3BM,CAiCbG,MAAM,CAAE,CACN,CACEH,IAAI,CAAE,MADR,CAEEI,MAAM,CAAE,IAFV,CAGEC,UAAU,CAAE,KAHd,CAIEC,SAAS,CAAE,CACTC,KAAK,CAAE,CADE,CAETpB,KAAK,CAAEV,WAAW,CAACI,KAAD,CAAX,CAAmB2B,WAFjB,CAJb,CAQEC,QAAQ,CAAE,CACRC,KAAK,CAAE,QADC,CARZ,CAWErB,IAAI,CAAET,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAES,IAXrB,CADM,CAjCK,CAAf,CAkDA,mBAAO,KAAC,SAAD,EAAW,MAAM,CAAEN,MAAnB,CAA2B,KAAK,CAAC,MAAjC,CAAwC,MAAM,CAAE,EAAhD,EAAP,CACD,CArDM","sourcesContent":["import React from 'react';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { ChartData, ChartSeriesData } from '@app/interfaces/interfaces';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\ninterface LineData {\n  data: ChartData;\n}\n\ninterface TotalEarningChartProps {\n  xAxisData: number[] | string[];\n  earningData: LineData;\n}\n\nexport const TotalEarningChart: React.FC<TotalEarningChartProps> = ({ xAxisData, earningData }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const option = {\n    tooltip: {\n      ...getDefaultTooltipStyles(themeObject[theme]),\n      trigger: 'axis',\n      crossStyle: {\n        color: 'red',\n      },\n      formatter: (data: ChartSeriesData) => {\n        const currentSeries = data[0];\n\n        return `${currentSeries.name} - ${getCurrencyPrice(formatNumberWithCommas(currentSeries.value), 'USD')}`;\n      },\n    },\n    grid: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n    xAxis: [\n      {\n        show: false,\n        type: 'category',\n        boundaryGap: false,\n        data: xAxisData,\n      },\n    ],\n    yAxis: [\n      {\n        show: false,\n        type: 'value',\n      },\n    ],\n    series: [\n      {\n        type: 'line',\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 3,\n          color: themeObject[theme].chartColor3,\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        data: earningData?.data,\n      },\n    ],\n  };\n\n  return <BaseChart option={option} width=\"100%\" height={75} />;\n};\n"]},"metadata":{},"sourceType":"module"}