{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/common/RequireFullscreen/RequireFullscreen.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var RequireFullscreen = function RequireFullscreen(_ref) {\n  _s();\n  var component = _ref.component,\n    children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFullscreen = _useState2[0],\n    setFullscreen = _useState2[1];\n  var handleFullScreen = function handleFullScreen() {\n    if (component !== null && component !== void 0 && component.current) {\n      isFullscreen ? document.exitFullscreen() : component.current.requestFullscreen();\n    }\n  };\n  useEffect(function () {\n    var onFullScreenChange = function onFullScreenChange() {\n      setFullscreen(document.fullscreenElement !== null);\n    };\n    document.addEventListener('fullscreenchange', onFullScreenChange);\n    document.addEventListener('mozfullscreenchange', onFullScreenChange);\n    document.addEventListener('webkitfullscreenchange', onFullScreenChange);\n    document.addEventListener('msfullscreenchange', onFullScreenChange);\n    return function () {\n      document.removeEventListener('fullscreenchange', onFullScreenChange);\n      document.removeEventListener('mozfullscreenchange', onFullScreenChange);\n      document.removeEventListener('webkitfullscreenchange', onFullScreenChange);\n      document.removeEventListener('msfullscreenchange', onFullScreenChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleFullScreen,\n    children: children(isFullscreen)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, _this);\n};\n_s(RequireFullscreen, \"17vbGqjTz15ZpZ91iuyZyFT4CDI=\");\n_c = RequireFullscreen;\nvar _c;\n$RefreshReg$(_c, \"RequireFullscreen\");","map":{"version":3,"names":["React","useEffect","useState","RequireFullscreen","component","children","isFullscreen","setFullscreen","handleFullScreen","current","document","exitFullscreen","requestFullscreen","onFullScreenChange","fullscreenElement","addEventListener","removeEventListener"],"sources":["/workspace/ant-design-react-template/src/components/common/RequireFullscreen/RequireFullscreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface RequireFullscreenProps {\n  component: React.RefObject<HTMLElement>;\n  children: (isFullscreen: boolean) => React.ReactNode;\n}\n\nexport const RequireFullscreen: React.FC<RequireFullscreenProps> = ({ component, children }) => {\n  const [isFullscreen, setFullscreen] = useState(false);\n\n  const handleFullScreen = () => {\n    if (component?.current) {\n      isFullscreen ? document.exitFullscreen() : component.current.requestFullscreen();\n    }\n  };\n\n  useEffect(() => {\n    const onFullScreenChange = () => {\n      setFullscreen(document.fullscreenElement !== null);\n    };\n\n    document.addEventListener('fullscreenchange', onFullScreenChange);\n    document.addEventListener('mozfullscreenchange', onFullScreenChange);\n    document.addEventListener('webkitfullscreenchange', onFullScreenChange);\n    document.addEventListener('msfullscreenchange', onFullScreenChange);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', onFullScreenChange);\n      document.removeEventListener('mozfullscreenchange', onFullScreenChange);\n      document.removeEventListener('webkitfullscreenchange', onFullScreenChange);\n      document.removeEventListener('msfullscreenchange', onFullScreenChange);\n    };\n  }, []);\n\n  return <div onClick={handleFullScreen}>{children(isFullscreen)}</div>;\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAOnD,OAAO,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAmD,OAAgC;EAAA;EAAA,IAA1BC,SAAS,QAATA,SAAS;IAAEC,QAAQ,QAARA,QAAQ;EACvF,gBAAsCH,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CI,YAAY;IAAEC,aAAa;EAElC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC7B,IAAIJ,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEK,OAAO,EAAE;MACtBH,YAAY,GAAGI,QAAQ,CAACC,cAAc,EAAE,GAAGP,SAAS,CAACK,OAAO,CAACG,iBAAiB,EAAE;IAClF;EACF,CAAC;EAEDX,SAAS,CAAC,YAAM;IACd,IAAMY,kBAAkB,GAAG,SAArBA,kBAAkB,GAAS;MAC/BN,aAAa,CAACG,QAAQ,CAACI,iBAAiB,KAAK,IAAI,CAAC;IACpD,CAAC;IAEDJ,QAAQ,CAACK,gBAAgB,CAAC,kBAAkB,EAAEF,kBAAkB,CAAC;IACjEH,QAAQ,CAACK,gBAAgB,CAAC,qBAAqB,EAAEF,kBAAkB,CAAC;IACpEH,QAAQ,CAACK,gBAAgB,CAAC,wBAAwB,EAAEF,kBAAkB,CAAC;IACvEH,QAAQ,CAACK,gBAAgB,CAAC,oBAAoB,EAAEF,kBAAkB,CAAC;IAEnE,OAAO,YAAM;MACXH,QAAQ,CAACM,mBAAmB,CAAC,kBAAkB,EAAEH,kBAAkB,CAAC;MACpEH,QAAQ,CAACM,mBAAmB,CAAC,qBAAqB,EAAEH,kBAAkB,CAAC;MACvEH,QAAQ,CAACM,mBAAmB,CAAC,wBAAwB,EAAEH,kBAAkB,CAAC;MAC1EH,QAAQ,CAACM,mBAAmB,CAAC,oBAAoB,EAAEH,kBAAkB,CAAC;IACxE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAK,OAAO,EAAEL,gBAAiB;IAAA,UAAEH,QAAQ,CAACC,YAAY;EAAC;IAAA;IAAA;IAAA;EAAA,SAAO;AACvE,CAAC;AAAC,GA5BWH,iBAAmD;AAAA,KAAnDA,iBAAmD;AAAA;AAAA"},"metadata":{},"sourceType":"module"}