{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{httpApi}from'@app/api/http.api';import'./mocks/auth.api.mock';export var login=function login(loginPayload){return httpApi.post('login',_objectSpread({},loginPayload)).then(function(_ref){var data=_ref.data;return data;});};export var signUp=function signUp(signUpData){return httpApi.post('signUp',_objectSpread({},signUpData)).then(function(_ref2){var data=_ref2.data;return data;});};export var resetPassword=function resetPassword(resetPasswordPayload){return httpApi.post('forgotPassword',_objectSpread({},resetPasswordPayload)).then(function(_ref3){var data=_ref3.data;return data;});};export var verifySecurityCode=function verifySecurityCode(securityCodePayload){return httpApi.post('verifySecurityCode',_objectSpread({},securityCodePayload)).then(function(_ref4){var data=_ref4.data;return data;});};export var setNewPassword=function setNewPassword(newPasswordData){return httpApi.post('setNewPassword',_objectSpread({},newPasswordData)).then(function(_ref5){var data=_ref5.data;return data;});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/api/auth.api.ts"],"names":["httpApi","login","loginPayload","post","then","data","signUp","signUpData","resetPassword","resetPasswordPayload","verifySecurityCode","securityCodePayload","setNewPassword","newPasswordData"],"mappings":"uKAAA,OAASA,OAAT,KAAwB,mBAAxB,CACA,MAAO,uBAAP,CAqCA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,YAAD,QACnBF,CAAAA,OAAO,CAACG,IAAR,CAA4B,OAA5B,kBAA0CD,YAA1C,GAA0DE,IAA1D,CAA+D,kBAAGC,CAAAA,IAAH,MAAGA,IAAH,OAAcA,CAAAA,IAAd,EAA/D,CADmB,EAAd,CAGP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,UAAD,QACpBP,CAAAA,OAAO,CAACG,IAAR,CAAwB,QAAxB,kBAAuCI,UAAvC,GAAqDH,IAArD,CAA0D,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAA1D,CADoB,EAAf,CAGP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,oBAAD,QAC3BT,CAAAA,OAAO,CAACG,IAAR,CAAwB,gBAAxB,kBAA+CM,oBAA/C,GAAuEL,IAAvE,CAA4E,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAA5E,CAD2B,EAAtB,CAGP,MAAO,IAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,mBAAD,QAChCX,CAAAA,OAAO,CAACG,IAAR,CAAwB,oBAAxB,kBAAmDQ,mBAAnD,GAA0EP,IAA1E,CAA+E,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAA/E,CADgC,EAA3B,CAGP,MAAO,IAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,eAAD,QAC5Bb,CAAAA,OAAO,CAACG,IAAR,CAAwB,gBAAxB,kBAA+CU,eAA/C,GAAkET,IAAlE,CAAuE,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAvE,CAD4B,EAAvB","sourcesContent":["import { httpApi } from '@app/api/http.api';\nimport './mocks/auth.api.mock';\nimport { UserModel } from '@app/domain/UserModel';\n\nexport interface AuthData {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpRequest {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\nexport interface ResetPasswordRequest {\n  email: string;\n}\n\nexport interface SecurityCodePayload {\n  code: string;\n}\n\nexport interface NewPasswordData {\n  newPassword: string;\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  token: string;\n  user: UserModel;\n}\n\nexport const login = (loginPayload: LoginRequest): Promise<LoginResponse> =>\n  httpApi.post<LoginResponse>('login', { ...loginPayload }).then(({ data }) => data);\n\nexport const signUp = (signUpData: SignUpRequest): Promise<undefined> =>\n  httpApi.post<undefined>('signUp', { ...signUpData }).then(({ data }) => data);\n\nexport const resetPassword = (resetPasswordPayload: ResetPasswordRequest): Promise<undefined> =>\n  httpApi.post<undefined>('forgotPassword', { ...resetPasswordPayload }).then(({ data }) => data);\n\nexport const verifySecurityCode = (securityCodePayload: SecurityCodePayload): Promise<undefined> =>\n  httpApi.post<undefined>('verifySecurityCode', { ...securityCodePayload }).then(({ data }) => data);\n\nexport const setNewPassword = (newPasswordData: NewPasswordData): Promise<undefined> =>\n  httpApi.post<undefined>('setNewPassword', { ...newPasswordData }).then(({ data }) => data);\n"]},"metadata":{},"sourceType":"module"}