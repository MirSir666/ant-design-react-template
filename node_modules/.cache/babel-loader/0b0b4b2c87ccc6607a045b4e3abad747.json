{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"width\", \"children\"];\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/common/selects/Select/Select.tsx\",\n  _this = this;\nimport React from 'react';\nimport { Select as AntSelect } from 'antd';\nimport * as S from './Select.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Option = AntSelect.Option;\nexport { Option };\nexport var Select = /*#__PURE__*/React.forwardRef(_c = function _c(_ref, ref) {\n  var className = _ref.className,\n    width = _ref.width,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/_jsxDEV(S.Select, _objectSpread(_objectSpread({\n    getPopupContainer: function getPopupContainer(triggerNode) {\n      return triggerNode;\n    },\n    ref: ref,\n    className: className,\n    width: width\n  }, props), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, _this);\n});\n_c2 = Select;\nvar _c, _c2;\n$RefreshReg$(_c, \"Select$React.forwardRef\");\n$RefreshReg$(_c2, \"Select\");","map":{"version":3,"names":["React","Select","AntSelect","S","Option","forwardRef","ref","className","width","children","props","triggerNode"],"sources":["/workspace/ant-design-react-template/src/components/common/selects/Select/Select.tsx"],"sourcesContent":["import React, { ComponentProps } from 'react';\nimport { Select as AntSelect } from 'antd';\nimport { RefSelectProps } from 'antd/lib/select';\nimport * as S from './Select.styles';\n\nexport const { Option } = AntSelect;\n\nexport interface SelectProps extends ComponentProps<typeof AntSelect>, S.SelectProps {\n  className?: string;\n}\n\nexport const Select = React.forwardRef<RefSelectProps, SelectProps>(({ className, width, children, ...props }, ref) => (\n  <S.Select getPopupContainer={(triggerNode) => triggerNode} ref={ref} className={className} width={width} {...props}>\n    {children}\n  </S.Select>\n));\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAA0B,OAAO;AAC7C,SAASC,MAAM,IAAIC,SAAS,QAAQ,MAAM;AAE1C,OAAO,KAAKC,CAAC,MAAM,iBAAiB;AAAC;AAE9B,IAAQC,MAAM,GAAKF,SAAS,CAApBE,MAAM;AAAe;AAMpC,OAAO,IAAMH,MAAM,gBAAGD,KAAK,CAACK,UAAU,MAA8B,kBAA2CC,GAAG;EAAA,IAA3CC,SAAS,QAATA,SAAS;IAAEC,KAAK,QAALA,KAAK;IAAEC,QAAQ,QAARA,QAAQ;IAAKC,KAAK;EAAA,oBACzG,QAAC,CAAC,CAAC,MAAM;IAAC,iBAAiB,EAAE,2BAACC,WAAW;MAAA,OAAKA,WAAW;IAAA,CAAC;IAAC,GAAG,EAAEL,GAAI;IAAC,SAAS,EAAEC,SAAU;IAAC,KAAK,EAAEC;EAAM,GAAKE,KAAK;IAAA,UAC/GD;EAAQ;IAAA;IAAA;IAAA;EAAA,SACA;AAAA,CACZ,CAAC;AAAC,MAJUR,MAAM;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}