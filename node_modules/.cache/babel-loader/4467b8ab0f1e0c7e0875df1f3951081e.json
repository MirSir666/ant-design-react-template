{"ast":null,"code":"import{useEffect,useRef}from'react';import{useAppSelector}from'./reduxHooks';import{ConfigProvider}from'antd';import{themeObject}from'@app/styles/themes/themeVariables';export var useThemeWatcher=function useThemeWatcher(){var theme=useAppSelector(function(state){return state.theme.theme;});var root=useRef(document.querySelector(':root'));useEffect(function(){var html=root.current;if(html){html.setAttribute('data-no-transition','');html.setAttribute('data-theme',theme);// remove transition after layout update\nrequestAnimationFrame(function(){html.removeAttribute('data-no-transition');});}ConfigProvider.config({theme:{primaryColor:themeObject[theme].primary,infoColor:themeObject[theme].primary,successColor:themeObject[theme].success,errorColor:themeObject[theme].error,warningColor:themeObject[theme].warning}});},[theme]);};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/hooks/useThemeWatcher.ts"],"names":["useEffect","useRef","useAppSelector","ConfigProvider","themeObject","useThemeWatcher","theme","state","root","document","querySelector","html","current","setAttribute","requestAnimationFrame","removeAttribute","config","primaryColor","primary","infoColor","successColor","success","errorColor","error","warningColor","warning"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,cAAT,KAA+B,MAA/B,CACA,OAASC,WAAT,KAA4B,mCAA5B,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAY,CACzC,GAAMC,CAAAA,KAAK,CAAGJ,cAAc,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAN,CAAYA,KAAvB,EAAD,CAA5B,CACA,GAAME,CAAAA,IAAI,CAAGP,MAAM,CAACQ,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAD,CAAnB,CAEAV,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,IAAI,CAAGH,IAAI,CAACI,OAAlB,CACA,GAAID,IAAJ,CAAU,CACRA,IAAI,CAACE,YAAL,CAAkB,oBAAlB,CAAwC,EAAxC,EACAF,IAAI,CAACE,YAAL,CAAkB,YAAlB,CAAgCP,KAAhC,EACA;AACAQ,qBAAqB,CAAC,UAAM,CAC1BH,IAAI,CAACI,eAAL,CAAqB,oBAArB,EACD,CAFoB,CAArB,CAGD,CAEDZ,cAAc,CAACa,MAAf,CAAsB,CACpBV,KAAK,CAAE,CACLW,YAAY,CAAEb,WAAW,CAACE,KAAD,CAAX,CAAmBY,OAD5B,CAELC,SAAS,CAAEf,WAAW,CAACE,KAAD,CAAX,CAAmBY,OAFzB,CAGLE,YAAY,CAAEhB,WAAW,CAACE,KAAD,CAAX,CAAmBe,OAH5B,CAILC,UAAU,CAAElB,WAAW,CAACE,KAAD,CAAX,CAAmBiB,KAJ1B,CAKLC,YAAY,CAAEpB,WAAW,CAACE,KAAD,CAAX,CAAmBmB,OAL5B,CADa,CAAtB,EASD,CApBQ,CAoBN,CAACnB,KAAD,CApBM,CAAT,CAqBD,CAzBM","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useAppSelector } from './reduxHooks';\nimport { ConfigProvider } from 'antd';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\nexport const useThemeWatcher = (): void => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const root = useRef(document.querySelector(':root'));\n\n  useEffect(() => {\n    const html = root.current;\n    if (html) {\n      html.setAttribute('data-no-transition', '');\n      html.setAttribute('data-theme', theme);\n      // remove transition after layout update\n      requestAnimationFrame(() => {\n        html.removeAttribute('data-no-transition');\n      });\n    }\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: themeObject[theme].primary,\n        infoColor: themeObject[theme].primary,\n        successColor: themeObject[theme].success,\n        errorColor: themeObject[theme].error,\n        warningColor: themeObject[theme].warning,\n      },\n    });\n  }, [theme]);\n};\n"]},"metadata":{},"sourceType":"module"}