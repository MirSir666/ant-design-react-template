{"ast":null,"code":"import _toConsumableArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React from'react';import{useTranslation}from'react-i18next';import{Dropdown}from'@app/components/common/Dropdown/Dropdown';import{kanbanPeople}from'constants/kanbanPeople';import StubAvatar from'../../../../../assets/images/stub-avatar.webp';import*as S from'./ParticipantsDropdown.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ParticipantsDropdown=function ParticipantsDropdown(_ref){var selectedParticipants=_ref.selectedParticipants,setSelectedParticipants=_ref.setSelectedParticipants;var _useTranslation=useTranslation(),t=_useTranslation.t;var kanbanPeopleData=Object.values(kanbanPeople);var selectedParticipantsIds=selectedParticipants.map(function(item){return item.id;});var onPeopleClick=function onPeopleClick(tag){var isExist=selectedParticipantsIds.includes(tag.id);if(isExist){setSelectedParticipants(selectedParticipants.filter(function(item){return item.id!==tag.id;}));}else{setSelectedParticipants([].concat(_toConsumableArray(selectedParticipants),[tag]));}};return/*#__PURE__*/_jsx(Dropdown,{placement:\"bottomCenter\",trigger:['click'],overlay:/*#__PURE__*/_jsxs(S.EditParticipantPopover,{children:[kanbanPeopleData.map(function(participant){return/*#__PURE__*/_jsxs(S.ParticipantRow,{onClick:function onClick(e){onPeopleClick(participant);e.stopPropagation();},children:[/*#__PURE__*/_jsx(S.PopoverCheckbox,{checked:selectedParticipantsIds.includes(participant.id)}),/*#__PURE__*/_jsx(S.ParticipantAvatar,{src:participant.avatar?participant.avatar:StubAvatar}),/*#__PURE__*/_jsx(S.ParticipantName,{children:participant.name})]},participant.id);}),/*#__PURE__*/_jsx(S.RemoveParticipantWrapper,{children:/*#__PURE__*/_jsx(S.ClosePopover,{})})]}),children:selectedParticipants&&selectedParticipants.length>0?/*#__PURE__*/_jsx(S.ParticipantsWrapper,{children:selectedParticipants.map(function(participant){return/*#__PURE__*/_jsxs(S.ParticipantRow,{children:[/*#__PURE__*/_jsx(S.ParticipantAvatar,{src:participant.avatar?participant.avatar:StubAvatar}),/*#__PURE__*/_jsx(S.ParticipantName,{children:participant.name}),/*#__PURE__*/_jsx(S.RemoveParticipant,{onClick:function onClick(e){e.stopPropagation();onPeopleClick(participant);}})]},participant.id);})}):/*#__PURE__*/_jsx(S.ParticipantsWrapper,{children:/*#__PURE__*/_jsx(S.AddParticipant,{children:t('kanban.addParticipant')})})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/apps/kanban/newCardForm/ParticipantsDropdown/ParticipantsDropdown.tsx"],"names":["React","useTranslation","Dropdown","kanbanPeople","StubAvatar","S","ParticipantsDropdown","selectedParticipants","setSelectedParticipants","t","kanbanPeopleData","Object","values","selectedParticipantsIds","map","item","id","onPeopleClick","tag","isExist","includes","filter","participant","e","stopPropagation","avatar","name","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\nimport { Participant as IParticipant } from '../../interfaces';\nimport { kanbanPeople } from 'constants/kanbanPeople';\nimport StubAvatar from '../../../../../assets/images/stub-avatar.webp';\nimport * as S from './ParticipantsDropdown.styles';\n\ninterface ParticipantsDropdownProps {\n  selectedParticipants: IParticipant[];\n  setSelectedParticipants: (state: IParticipant[]) => void;\n}\n\nexport const ParticipantsDropdown: React.FC<ParticipantsDropdownProps> = ({\n  selectedParticipants,\n  setSelectedParticipants,\n}) => {\n  const { t } = useTranslation();\n  const kanbanPeopleData = Object.values(kanbanPeople);\n  const selectedParticipantsIds = selectedParticipants.map((item) => item.id);\n\n  const onPeopleClick = (tag: IParticipant) => {\n    const isExist = selectedParticipantsIds.includes(tag.id);\n\n    if (isExist) {\n      setSelectedParticipants(selectedParticipants.filter((item) => item.id !== tag.id));\n    } else {\n      setSelectedParticipants([...selectedParticipants, tag]);\n    }\n  };\n\n  return (\n    <Dropdown\n      placement=\"bottomCenter\"\n      trigger={['click']}\n      overlay={\n        <S.EditParticipantPopover>\n          {kanbanPeopleData.map((participant: IParticipant) => (\n            <S.ParticipantRow\n              key={participant.id}\n              onClick={(e) => {\n                onPeopleClick(participant);\n                e.stopPropagation();\n              }}\n            >\n              <S.PopoverCheckbox checked={selectedParticipantsIds.includes(participant.id)} />\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n            </S.ParticipantRow>\n          ))}\n          <S.RemoveParticipantWrapper>\n            <S.ClosePopover />\n          </S.RemoveParticipantWrapper>\n        </S.EditParticipantPopover>\n      }\n    >\n      {selectedParticipants && selectedParticipants.length > 0 ? (\n        <S.ParticipantsWrapper>\n          {selectedParticipants.map((participant) => (\n            <S.ParticipantRow key={participant.id}>\n              <S.ParticipantAvatar src={participant.avatar ? participant.avatar : StubAvatar} />\n              <S.ParticipantName>{participant.name}</S.ParticipantName>\n              <S.RemoveParticipant\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onPeopleClick(participant);\n                }}\n              />\n            </S.ParticipantRow>\n          ))}\n        </S.ParticipantsWrapper>\n      ) : (\n        <S.ParticipantsWrapper>\n          <S.AddParticipant>{t('kanban.addParticipant')}</S.AddParticipant>\n        </S.ParticipantsWrapper>\n      )}\n    </Dropdown>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}