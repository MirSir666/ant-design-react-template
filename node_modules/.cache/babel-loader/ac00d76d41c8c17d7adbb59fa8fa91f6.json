{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/index.tsx\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport 'config/config';\nimport { Provider } from 'react-redux';\nimport { store } from '@app/store/store';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nserviceWorkerRegistration.register({\n  onUpdate: function onUpdate(registration) {\n    var waitingServiceWorker = registration.waiting;\n\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener('statechange', function (event) {\n        if (event.target.state === 'activated') window.location.reload();\n      });\n      waitingServiceWorker.postMessage({\n        type: 'SKIP_WAITING'\n      });\n    }\n  }\n}); // app will reload if new version of app is available\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/index.tsx"],"names":["App","reportWebVitals","serviceWorkerRegistration","Provider","store","ReactDOM","React","render","document","getElementById","register","onUpdate","registration","waitingServiceWorker","waiting","addEventListener","event","target","state","window","location","reload","postMessage","type"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,QAAP;AACA,OAAO,KAAKC,yBAAZ,MAA2C,6BAA3C;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAMAD,QAAQ,CAACE,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AASAP,yBAAyB,CAACQ,QAA1B,CAAmC;AACjCC,EAAAA,QAAQ,EAAE,kBAACC,YAAD,EAAkB;AAC1B,QAAMC,oBAAoB,GAAGD,YAAY,CAACE,OAA1C;;AAEA,QAAID,oBAAJ,EAA0B;AACxBA,MAAAA,oBAAoB,CAACE,gBAArB,CAAsC,aAAtC,EAAqD,UAACC,KAAD,EAAW;AAC9D,YAAKA,KAAK,CAACC,MAAP,CAA8BC,KAA9B,KAAwC,WAA5C,EAAyDC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAC1D,OAFD;AAGAR,MAAAA,oBAAoB,CAACS,WAArB,CAAiC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAjC;AACD;AACF;AAVgC,CAAnC,E,CAWI;AAEJ;AACA;AACA;;AACAtB,eAAe","sourcesContent":["import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport 'config/config';\nimport { Provider } from 'react-redux';\nimport { store } from '@app/store/store';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\ninterface EventTarget {\n  state?: 'activated';\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorkerRegistration.register({\n  onUpdate: (registration) => {\n    const waitingServiceWorker = registration.waiting;\n\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener('statechange', (event) => {\n        if ((event.target as EventTarget).state === 'activated') window.location.reload();\n      });\n      waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' });\n    }\n  },\n}); // app will reload if new version of app is available\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}