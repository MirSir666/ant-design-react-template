{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/PatientResultsCard/PatientResultsCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BarChartOutlined, CheckOutlined, FileTextOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Steps, Step } from '@app/components/common/Steps/Steps';\nimport { Dates } from '@app/constants/Dates';\nimport { patientResultsData } from '@app/constants/patientResultsData';\nimport { patientResultStatus } from '@app/constants/patientResultStatus';\nimport { DashboardCard } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport * as S from './PatientResultsCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar icons = [/*#__PURE__*/_jsxDEV(CheckOutlined, {}, 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 16\n}, this), /*#__PURE__*/_jsxDEV(BarChartOutlined, {}, 1, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 43\n}, this), /*#__PURE__*/_jsxDEV(FileTextOutlined, {}, 2, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 73\n}, this)];\nexport var PatientResultsCard = function PatientResultsCard() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxDEV(DashboardCard, {\n    children: /*#__PURE__*/_jsxDEV(Steps, {\n      direction: \"vertical\",\n      current: 0,\n      children: patientResultStatus.map(function (status, index) {\n        var patientResult = patientResultsData.find(function (item) {\n          return item.status === status.id;\n        }) || {\n          isActive: false,\n          date: Date.now()\n        };\n        return /*#__PURE__*/_jsxDEV(Step, {\n          title: /*#__PURE__*/_jsxDEV(S.TitleWrapper, {\n            children: t(status.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 22\n          }, _this),\n          description: /*#__PURE__*/_jsxDEV(S.InfoWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(S.DateWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(S.CalendarIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(S.Text, {\n                children: Dates.format(patientResult === null || patientResult === void 0 ? void 0 : patientResult.date, 'D MMMM YYYY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(S.Description, {\n              children: t(status.desc)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, _this),\n          icon: /*#__PURE__*/_jsxDEV(S.IconWrapper, {\n            isActive: patientResult.isActive,\n            children: icons[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, _this)\n        }, status.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PatientResultsCard, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PatientResultsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientResultsCard\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/PatientResultsCard/PatientResultsCard.tsx"],"names":["React","BarChartOutlined","CheckOutlined","FileTextOutlined","useTranslation","Steps","Step","Dates","patientResultsData","patientResultStatus","DashboardCard","S","icons","PatientResultsCard","t","map","status","index","patientResult","find","item","id","isActive","date","Date","now","name","format","desc"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,gBAA1C,QAAkE,mBAAlE;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,oCAA5B;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,aAAT,QAA8B,+DAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;;AAEA,IAAMC,KAAK,GAAG,cAAC,QAAC,aAAD,MAAoB,CAApB;AAAA;AAAA;AAAA;AAAA,QAAD,eAA4B,QAAC,gBAAD,MAAuB,CAAvB;AAAA;AAAA;AAAA;AAAA,QAA5B,eAA0D,QAAC,gBAAD,MAAuB,CAAvB;AAAA;AAAA;AAAA;AAAA,QAA1D,CAAd;AAEA,OAAO,IAAMC,kBAA4B,GAAG,SAA/BA,kBAA+B,GAAM;AAAA;;AAChD,wBAAcT,cAAc,EAA5B;AAAA,MAAQU,CAAR,mBAAQA,CAAR;;AAEA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,OAAO,EAAE,CAArC;AAAA,gBACGL,mBAAmB,CAACM,GAApB,CAAwB,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC1C,YAAMC,aAAa,GAAGV,kBAAkB,CAACW,IAAnB,CAAwB,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACJ,MAAL,KAAgBA,MAAM,CAACK,EAAjC;AAAA,SAAxB,KAAgE;AACpFC,UAAAA,QAAQ,EAAE,KAD0E;AAEpFC,UAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAF8E,SAAtF;AAIA,4BACE,QAAC,IAAD;AACE,UAAA,KAAK,eAAE,QAAC,CAAD,CAAG,YAAH;AAAA,sBAAiBX,CAAC,CAACE,MAAM,CAACU,IAAR;AAAlB;AAAA;AAAA;AAAA;AAAA,mBADT;AAEE,UAAA,WAAW,eACT,QAAC,CAAD,CAAG,WAAH;AAAA,oCACE,QAAC,CAAD,CAAG,WAAH;AAAA,sCACE,QAAC,CAAD,CAAG,YAAH;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,QAAC,CAAD,CAAG,IAAH;AAAA,0BAASnB,KAAK,CAACoB,MAAN,CAAaT,aAAb,aAAaA,aAAb,uBAAaA,aAAa,CAAEK,IAA5B,EAAkC,aAAlC;AAAT;AAAA;AAAA;AAAA;AAAA,uBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAKE,QAAC,CAAD,CAAG,WAAH;AAAA,wBAAgBT,CAAC,CAACE,MAAM,CAACY,IAAR;AAAjB;AAAA;AAAA;AAAA;AAAA,qBALF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ;AAYE,UAAA,IAAI,eAAE,QAAC,CAAD,CAAG,WAAH;AAAe,YAAA,QAAQ,EAAEV,aAAa,CAACI,QAAvC;AAAA,sBAAkDV,KAAK,CAACK,KAAD;AAAvD;AAAA;AAAA;AAAA;AAAA;AAZR,WAWOD,MAAM,CAACK,EAXd;AAAA;AAAA;AAAA;AAAA,iBADF;AAgBD,OArBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA4BD,CA/BM;;GAAMR,kB;UACGT,c;;;KADHS,kB","sourcesContent":["import React from 'react';\nimport { BarChartOutlined, CheckOutlined, FileTextOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Steps, Step } from '@app/components/common/Steps/Steps';\nimport { Dates } from '@app/constants/Dates';\nimport { patientResultsData } from '@app/constants/patientResultsData';\nimport { patientResultStatus } from '@app/constants/patientResultStatus';\nimport { DashboardCard } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport * as S from './PatientResultsCard.styles';\n\nconst icons = [<CheckOutlined key={0} />, <BarChartOutlined key={1} />, <FileTextOutlined key={2} />];\n\nexport const PatientResultsCard: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <DashboardCard>\n      <Steps direction=\"vertical\" current={0}>\n        {patientResultStatus.map((status, index) => {\n          const patientResult = patientResultsData.find((item) => item.status === status.id) || {\n            isActive: false,\n            date: Date.now(),\n          };\n          return (\n            <Step\n              title={<S.TitleWrapper>{t(status.name)}</S.TitleWrapper>}\n              description={\n                <S.InfoWrapper>\n                  <S.DateWrapper>\n                    <S.CalendarIcon />\n                    <S.Text>{Dates.format(patientResult?.date, 'D MMMM YYYY')}</S.Text>\n                  </S.DateWrapper>\n                  <S.Description>{t(status.desc)}</S.Description>\n                </S.InfoWrapper>\n              }\n              key={status.id}\n              icon={<S.IconWrapper isActive={patientResult.isActive}>{icons[index]}</S.IconWrapper>}\n            />\n          );\n        })}\n      </Steps>\n    </DashboardCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}