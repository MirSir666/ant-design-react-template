{"ast":null,"code":"import _slicedToArray from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useMemo,useState}from'react';import{DashboardCard}from'../DashboardCard/DashboardCard';import{DoctorsMap}from'./DoctorsMap/DoctorsMap';import{getDoctorsData}from'api/doctors.api';import{useAppSelector}from'@app/hooks/reduxHooks';import{jsx as _jsx}from\"react/jsx-runtime\";export var MapCard=function MapCard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),doctors=_useState2[0],setDoctors=_useState2[1];useEffect(function(){getDoctorsData().then(function(res){return setDoctors(res);});},[]);var theme=useAppSelector(function(state){return state.theme.theme;});// eslint-disable-next-line react-hooks/exhaustive-deps\nvar key=useMemo(function(){return Math.random();},[theme]);// create new key on every change of theme and remount map component\nreturn/*#__PURE__*/_jsx(DashboardCard,{padding:0,children:/*#__PURE__*/_jsx(DoctorsMap,{doctors:doctors},key)});};","map":{"version":3,"names":["React","useEffect","useMemo","useState","DashboardCard","DoctorsMap","getDoctorsData","useAppSelector","MapCard","doctors","setDoctors","then","res","theme","state","key","Math","random"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/mapCard/MapCard.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { DoctorsMap } from './DoctorsMap/DoctorsMap';\nimport { Doctor, getDoctorsData } from 'api/doctors.api';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\n\nexport const MapCard: React.FC = () => {\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n\n  useEffect(() => {\n    getDoctorsData().then((res) => setDoctors(res));\n  }, []);\n\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const key = useMemo(() => Math.random(), [theme]); // create new key on every change of theme and remount map component\n\n  return (\n    <DashboardCard padding={0}>\n      <DoctorsMap key={key} doctors={doctors} />\n    </DashboardCard>\n  );\n};\n"],"mappings":"0HAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAC3D,OAASC,aAAa,KAAQ,gCAAgC,CAC9D,OAASC,UAAU,KAAQ,yBAAyB,CACpD,OAAiBC,cAAc,KAAQ,iBAAiB,CACxD,OAASC,cAAc,KAAQ,uBAAuB,CAAC,2CAEvD,MAAO,IAAMC,QAAiB,CAAG,QAApBA,QAAiB,EAAS,CACrC,cAA8BL,QAAQ,CAAW,EAAE,CAAC,wCAA7CM,OAAO,eAAEC,UAAU,eAE1BT,SAAS,CAAC,UAAM,CACdK,cAAc,EAAE,CAACK,IAAI,CAAC,SAACC,GAAG,QAAKF,WAAU,CAACE,GAAG,CAAC,GAAC,CACjD,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMC,MAAK,CAAGN,cAAc,CAAC,SAACO,KAAK,QAAKA,MAAK,CAACD,KAAK,CAACA,KAAK,GAAC,CAE1D;AACA,GAAME,IAAG,CAAGb,OAAO,CAAC,iBAAMc,KAAI,CAACC,MAAM,EAAE,GAAE,CAACJ,KAAK,CAAC,CAAC,CAAE;AAEnD,mBACE,KAAC,aAAa,EAAC,OAAO,CAAE,CAAE,uBACxB,KAAC,UAAU,EAAW,OAAO,CAAEJ,OAAQ,EAAtBM,GAAG,CAAsB,EAC5B,CAEpB,CAAC"},"metadata":{},"sourceType":"module"}