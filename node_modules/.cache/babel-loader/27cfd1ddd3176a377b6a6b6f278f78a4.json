{"ast":null,"code":"import React from'react';import{useTranslation}from'react-i18next';import{Col,Row}from'antd';import{StatisticsInfo}from'../StatisticsInfo/StatisticsInfo';import{StatisticsProgress}from'../StatisticsProgress/StatisticsProgress';import{useResponsive}from'@app/hooks/useResponsive';import*as S from'./StatisticsCard.styles';import{themeObject}from'@app/styles/themes/themeVariables';import{useAppSelector}from'@app/hooks/reduxHooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var StatisticsCard=function StatisticsCard(_ref){var name=_ref.name,value=_ref.value,prevValue=_ref.prevValue,color=_ref.color,unit=_ref.unit,Icon=_ref.Icon;var theme=useAppSelector(function(state){return state.theme.theme;});var _useResponsive=useResponsive(),isTabletOrHigher=_useResponsive.isTablet;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(S.StatisticCard,{padding:\"0.5rem\",$color:color,children:/*#__PURE__*/_jsxs(Row,{wrap:false,gutter:[isTabletOrHigher?10:5,0],children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(S.IconWrapper,{children:/*#__PURE__*/_jsx(S.Icon,{component:Icon})})}),/*#__PURE__*/_jsx(Col,{flex:1,children:/*#__PURE__*/_jsxs(Row,{justify:\"space-between\",align:\"middle\",wrap:false,children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(StatisticsInfo,{name:t(name),value:value,prevValue:prevValue})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(StatisticsProgress,{color:themeObject[theme][color],unit:unit,value:value})})]})})]})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/statisticsCards/statisticsCard/StatisticsCard/StatisticsCard.tsx"],"names":["React","useTranslation","Col","Row","StatisticsInfo","StatisticsProgress","useResponsive","S","themeObject","useAppSelector","StatisticsCard","name","value","prevValue","color","unit","Icon","theme","state","isTabletOrHigher","isTablet","t"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,MAAzB,CACA,OAASC,cAAT,KAA+B,kCAA/B,CACA,OAASC,kBAAT,KAAmC,0CAAnC,CACA,OAASC,aAAT,KAA8B,0BAA9B,CAEA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,yBAAnB,CACA,OAASC,WAAT,KAA4B,mCAA5B,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAWA,MAAO,IAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAAmD,IAAhDC,CAAAA,IAAgD,MAAhDA,IAAgD,CAA1CC,KAA0C,MAA1CA,KAA0C,CAAnCC,SAAmC,MAAnCA,SAAmC,CAAxBC,KAAwB,MAAxBA,KAAwB,CAAjBC,IAAiB,MAAjBA,IAAiB,CAAXC,IAAW,MAAXA,IAAW,CAC9G,GAAMC,CAAAA,KAAK,CAAGR,cAAc,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAN,CAAYA,KAAvB,EAAD,CAA5B,CACA,mBAAuCX,aAAa,EAApD,CAAkBa,gBAAlB,gBAAQC,QAAR,CAEA,oBAAcnB,cAAc,EAA5B,CAAQoB,CAAR,iBAAQA,CAAR,CAEA,mBACE,KAAC,CAAD,CAAG,aAAH,EAAiB,OAAO,CAAC,QAAzB,CAAkC,MAAM,CAAEP,KAA1C,uBACE,MAAC,GAAD,EAAK,IAAI,CAAE,KAAX,CAAkB,MAAM,CAAE,CAACK,gBAAgB,CAAG,EAAH,CAAQ,CAAzB,CAA4B,CAA5B,CAA1B,wBACE,KAAC,GAAD,wBACE,KAAC,CAAD,CAAG,WAAH,wBACE,KAAC,CAAD,CAAG,IAAH,EAAQ,SAAS,CAAEH,IAAnB,EADF,EADF,EADF,cAOE,KAAC,GAAD,EAAK,IAAI,CAAE,CAAX,uBACE,MAAC,GAAD,EAAK,OAAO,CAAC,eAAb,CAA6B,KAAK,CAAC,QAAnC,CAA4C,IAAI,CAAE,KAAlD,wBACE,KAAC,GAAD,wBACE,KAAC,cAAD,EAAgB,IAAI,CAAEK,CAAC,CAACV,IAAD,CAAvB,CAA+B,KAAK,CAAEC,KAAtC,CAA6C,SAAS,CAAEC,SAAxD,EADF,EADF,cAKE,KAAC,GAAD,wBACE,KAAC,kBAAD,EAAoB,KAAK,CAAEL,WAAW,CAACS,KAAD,CAAX,CAAmBH,KAAnB,CAA3B,CAAsD,IAAI,CAAEC,IAA5D,CAAkE,KAAK,CAAEH,KAAzE,EADF,EALF,GADF,EAPF,GADF,EADF,CAuBD,CA7BM","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { StatisticsInfo } from '../StatisticsInfo/StatisticsInfo';\nimport { StatisticsProgress } from '../StatisticsProgress/StatisticsProgress';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { StatisticColor } from '@app/constants/config/statistics';\nimport * as S from './StatisticsCard.styles';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\n\ninterface StatisticsCardProps {\n  name: string;\n  value: number;\n  prevValue: number;\n  color: StatisticColor;\n  unit: 'kg';\n  Icon: React.FC;\n}\n\nexport const StatisticsCard: React.FC<StatisticsCardProps> = ({ name, value, prevValue, color, unit, Icon }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const { isTablet: isTabletOrHigher } = useResponsive();\n\n  const { t } = useTranslation();\n\n  return (\n    <S.StatisticCard padding=\"0.5rem\" $color={color}>\n      <Row wrap={false} gutter={[isTabletOrHigher ? 10 : 5, 0]}>\n        <Col>\n          <S.IconWrapper>\n            <S.Icon component={Icon} />\n          </S.IconWrapper>\n        </Col>\n\n        <Col flex={1}>\n          <Row justify=\"space-between\" align=\"middle\" wrap={false}>\n            <Col>\n              <StatisticsInfo name={t(name)} value={value} prevValue={prevValue} />\n            </Col>\n\n            <Col>\n              <StatisticsProgress color={themeObject[theme][color]} unit={unit} value={value} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </S.StatisticCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}