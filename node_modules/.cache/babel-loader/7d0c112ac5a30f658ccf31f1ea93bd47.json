{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{FONT_SIZE,FONT_WEIGHT,media}from'@app/styles/themes/constants';import{Typography,Avatar as AntAvatar,Row}from'antd';import styled from'styled-components';export var ScreeningsRow=styled(Row)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n\\n  .ant-typography {\\n    font-weight: \",\";\\n  }\\n\"])),function(props){return props.$isActive?FONT_WEIGHT.bold:FONT_WEIGHT.regular;});export var Avatar=styled(AntAvatar)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: relative;\\n\\n  \",\"\\n\"])),function(props){return props.$isPrimary&&\"border: 2px solid var(--primary-color)\"||props.$isSecondary&&\"border 2px solid var(--error-color)\";});export var Name=styled(Typography.Text)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  white-space: nowrap;\\n\\n  font-size: \",\";\\n\\n  font-weight: \",\";\\n\\n  color: \",\";\\n\\n  @media only screen and \",\" {\\n    font-size: \",\";\\n  }\\n\"])),FONT_SIZE.xs,FONT_WEIGHT.semibold,function(props){return props.$isPrimary&&'var(--primary-color)'||props.$isSecondary&&'var(--error-color)';},media.xl,FONT_SIZE.md);export var Percentage=styled(Typography.Text)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: \",\";\\n\\n  color: \",\";\\n\\n  @media only screen and \",\" {\\n    font-size: \",\";\\n  }\\n\"])),FONT_SIZE.xs,function(props){return props.$isDowngrade?'var(--error-color)':'var(--success-color)';},media.xl,FONT_SIZE.md);","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/screeningsFriends/ScreeningsFriend/ScreeningsFriend.styles.ts"],"names":["FONT_SIZE","FONT_WEIGHT","media","Typography","Avatar","AntAvatar","Row","styled","ScreeningsRow","props","$isActive","bold","regular","$isPrimary","$isSecondary","Name","Text","xs","semibold","xl","md","Percentage","$isDowngrade"],"mappings":"+PAAA,OAASA,SAAT,CAAoBC,WAApB,CAAiCC,KAAjC,KAA8C,8BAA9C,CACA,OAASC,UAAT,CAAqBC,MAAM,GAAIC,CAAAA,SAA/B,CAA0CC,GAA1C,KAAqD,MAArD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAeA,MAAO,IAAMC,CAAAA,aAAa,CAAGD,MAAM,CAACD,GAAD,CAAT,wKAKP,SAACG,KAAD,QAAYA,CAAAA,KAAK,CAACC,SAAN,CAAkBT,WAAW,CAACU,IAA9B,CAAqCV,WAAW,CAACW,OAA7D,EALO,CAAnB,CASP,MAAO,IAAMR,CAAAA,MAAM,CAAGG,MAAM,CAACF,SAAD,CAAT,qGAGf,SAACI,KAAD,QACCA,CAAAA,KAAK,CAACI,UAAN,0CAAD,EACCJ,KAAK,CAACK,YAAN,uCAFD,EAHe,CAAZ,CAQP,MAAO,IAAMC,CAAAA,IAAI,CAAGR,MAAM,CAACJ,UAAU,CAACa,IAAZ,CAAT,sNAGFhB,SAAS,CAACiB,EAHR,CAKAhB,WAAW,CAACiB,QALZ,CAON,SAACT,KAAD,QAAYA,CAAAA,KAAK,CAACI,UAAN,EAAoB,sBAArB,EAAiDJ,KAAK,CAACK,YAAN,EAAsB,oBAAlF,EAPM,CASUZ,KAAK,CAACiB,EAThB,CAUAnB,SAAS,CAACoB,EAVV,CAAV,CAcP,MAAO,IAAMC,CAAAA,UAAU,CAAGd,MAAM,CAACJ,UAAU,CAACa,IAAZ,CAAT,qKACRhB,SAAS,CAACiB,EADF,CAGZ,SAACR,KAAD,QAAYA,CAAAA,KAAK,CAACa,YAAN,CAAqB,oBAArB,CAA4C,sBAAxD,EAHY,CAKIpB,KAAK,CAACiB,EALV,CAMNnB,SAAS,CAACoB,EANJ,CAAhB","sourcesContent":["import { FONT_SIZE, FONT_WEIGHT, media } from '@app/styles/themes/constants';\nimport { Typography, Avatar as AntAvatar, Row } from 'antd';\nimport styled from 'styled-components';\n\ninterface ScreeningsRowProps {\n  $isActive: boolean;\n}\n\ninterface PercentageProps {\n  $isDowngrade: boolean;\n}\n\ninterface Importance {\n  $isPrimary: boolean;\n  $isSecondary: boolean;\n}\n\nexport const ScreeningsRow = styled(Row)<ScreeningsRowProps>`\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  .ant-typography {\n    font-weight: ${(props) => (props.$isActive ? FONT_WEIGHT.bold : FONT_WEIGHT.regular)};\n  }\n`;\n\nexport const Avatar = styled(AntAvatar)<Importance>`\n  position: relative;\n\n  ${(props) =>\n    (props.$isPrimary && `border: 2px solid var(--primary-color)`) ||\n    (props.$isSecondary && `border 2px solid var(--error-color)`)}\n`;\n\nexport const Name = styled(Typography.Text)<Importance>`\n  white-space: nowrap;\n\n  font-size: ${FONT_SIZE.xs};\n\n  font-weight: ${FONT_WEIGHT.semibold};\n\n  color: ${(props) => (props.$isPrimary && 'var(--primary-color)') || (props.$isSecondary && 'var(--error-color)')};\n\n  @media only screen and ${media.xl} {\n    font-size: ${FONT_SIZE.md};\n  }\n`;\n\nexport const Percentage = styled(Typography.Text)<PercentageProps>`\n  font-size: ${FONT_SIZE.xs};\n\n  color: ${(props) => (props.$isDowngrade ? 'var(--error-color)' : 'var(--success-color)')};\n\n  @media only screen and ${media.xl} {\n    font-size: ${FONT_SIZE.md};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}