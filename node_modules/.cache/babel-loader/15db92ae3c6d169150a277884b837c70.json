{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\"];\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/common/CountryMap/CountryMap.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport { GeoJSON, ZoomControl } from 'react-leaflet';\nimport geoData from '../../../assets/map-data/countries.geo.json';\nimport * as S from './CountryMap.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CountryMap = function CountryMap(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var MAP_CENTER = [57.52142204768359, 6.08795867978202];\n  return /*#__PURE__*/_jsxDEV(S.Map, _objectSpread(_objectSpread({\n    center: MAP_CENTER,\n    zoom: 2,\n    zoomControl: false,\n    minZoom: 1,\n    maxZoom: 5\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: geoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ZoomControl, {\n      position: \"bottomleft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), children]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n_c = CountryMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryMap\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/CountryMap/CountryMap.tsx"],"names":["React","GeoJSON","ZoomControl","geoData","S","CountryMap","children","props","MAP_CENTER"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,eAArC;AAGA,OAAOC,OAAP,MAAoB,6CAApB;AAGA,OAAO,KAAKC,CAAZ,MAAmB,qBAAnB;;AAEA,OAAO,IAAMC,UAAuC,GAAG,SAA1CA,UAA0C,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACjF,MAAMC,UAA4B,GAAG,CAAC,iBAAD,EAAoB,gBAApB,CAArC;AAEA,sBACE,QAAC,CAAD,CAAG,GAAH;AAAO,IAAA,MAAM,EAAEA,UAAf;AAA2B,IAAA,IAAI,EAAE,CAAjC;AAAoC,IAAA,WAAW,EAAE,KAAjD;AAAwD,IAAA,OAAO,EAAE,CAAjE;AAAoE,IAAA,OAAO,EAAE;AAA7E,KAAoFD,KAApF;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,aAFF,EAGGG,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAVM;KAAMD,U","sourcesContent":["import React from 'react';\nimport { LatLngExpression } from 'leaflet';\nimport { GeoJSON, ZoomControl } from 'react-leaflet';\nimport { MapContainerProps } from 'react-leaflet';\n\nimport geoData from '../../../assets/map-data/countries.geo.json';\nimport { FeatureCollection } from 'geojson';\n\nimport * as S from './CountryMap.styles';\n\nexport const CountryMap: React.FC<MapContainerProps> = ({ children, ...props }) => {\n  const MAP_CENTER: LatLngExpression = [57.52142204768359, 6.08795867978202];\n\n  return (\n    <S.Map center={MAP_CENTER} zoom={2} zoomControl={false} minZoom={1} maxZoom={5} {...props}>\n      <GeoJSON data={geoData as FeatureCollection} />\n      <ZoomControl position=\"bottomleft\" />\n      {children}\n    </S.Map>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}