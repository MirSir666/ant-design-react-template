{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from'react';import{FilterIcon}from'components/common/icons/FilterIcon';import{SearchOverlay}from'./searchOverlay/SearchOverlay/SearchOverlay';import{HeaderActionWrapper}from'@app/components/header/Header.styles';import{Btn,InputSearch}from'../HeaderSearch/HeaderSearch.styles';import{useTranslation}from'react-i18next';import{Dropdown}from'@app/components/common/Dropdown/Dropdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var SearchDropdown=function SearchDropdown(_ref){var query=_ref.query,setQuery=_ref.setQuery,data=_ref.data,isOverlayVisible=_ref.isOverlayVisible,setOverlayVisible=_ref.setOverlayVisible;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFilterVisible=_useState2[0],setFilterActive=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(function(){setOverlayVisible(!!query||isFilterVisible);},[query,isFilterVisible,setOverlayVisible]);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar ref=useRef(null);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Dropdown,_objectSpread(_objectSpread({},(!!data||isFilterVisible)&&{trigger:['click'],onVisibleChange:setOverlayVisible}),{},{overlayClassName:\"search-dropdown\",overlay:/*#__PURE__*/_jsx(SearchOverlay,{data:data,isFilterVisible:isFilterVisible}),visible:isOverlayVisible,getPopupContainer:function getPopupContainer(){return ref.current;},children:/*#__PURE__*/_jsxs(HeaderActionWrapper,{children:[/*#__PURE__*/_jsx(InputSearch,{width:\"100%\",value:query,placeholder:t('header.search'),filter:/*#__PURE__*/_jsx(Btn,{size:\"small\",type:isFilterVisible?'ghost':'text',\"aria-label\":\"Filter\",icon:/*#__PURE__*/_jsx(FilterIcon,{}),onClick:function onClick(){return setFilterActive(!isFilterVisible);}}),onChange:function onChange(event){return setQuery(event.target.value);},enterButton:null,addonAfter:null}),/*#__PURE__*/_jsx(\"div\",{ref:ref})]})}))});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/header/components/searchDropdown/SearchDropdown.tsx"],"names":["React","useEffect","useRef","useState","FilterIcon","SearchOverlay","HeaderActionWrapper","Btn","InputSearch","useTranslation","Dropdown","SearchDropdown","query","setQuery","data","isOverlayVisible","setOverlayVisible","isFilterVisible","setFilterActive","t","ref","trigger","onVisibleChange","current","event","target","value"],"mappings":"+UAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,OAASC,UAAT,KAA2B,oCAA3B,CACA,OAASC,aAAT,KAA8B,6CAA9B,CACA,OAASC,mBAAT,KAAoC,sCAApC,CAEA,OAASC,GAAT,CAAcC,WAAd,KAAiC,qCAAjC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,QAAT,KAAyB,0CAAzB,C,6IAUA,MAAO,IAAMC,CAAAA,cAA4C,CAAG,QAA/CA,CAAAA,cAA+C,MAMtD,IALJC,CAAAA,KAKI,MALJA,KAKI,CAJJC,QAII,MAJJA,QAII,CAHJC,IAGI,MAHJA,IAGI,CAFJC,gBAEI,MAFJA,gBAEI,CADJC,iBACI,MADJA,iBACI,CACJ,cAA2Cb,QAAQ,CAAC,KAAD,CAAnD,wCAAOc,eAAP,eAAwBC,eAAxB,eAEA,oBAAcT,cAAc,EAA5B,CAAQU,CAAR,iBAAQA,CAAR,CAEAlB,SAAS,CAAC,UAAM,CACde,iBAAiB,CAAC,CAAC,CAACJ,KAAF,EAAWK,eAAZ,CAAjB,CACD,CAFQ,CAEN,CAACL,KAAD,CAAQK,eAAR,CAAyBD,iBAAzB,CAFM,CAAT,CAIA;AACA,GAAMI,CAAAA,GAAG,CAAGlB,MAAM,CAAM,IAAN,CAAlB,CAEA,mBACE,sCACE,KAAC,QAAD,gCACO,CAAC,CAAC,CAACY,IAAF,EAAUG,eAAX,GAA+B,CAAEI,OAAO,CAAE,CAAC,OAAD,CAAX,CAAsBC,eAAe,CAAEN,iBAAvC,CADtC,MAEE,gBAAgB,CAAC,iBAFnB,CAGE,OAAO,cAAE,KAAC,aAAD,EAAe,IAAI,CAAEF,IAArB,CAA2B,eAAe,CAAEG,eAA5C,EAHX,CAIE,OAAO,CAAEF,gBAJX,CAKE,iBAAiB,CAAE,mCAAMK,CAAAA,GAAG,CAACG,OAAV,EALrB,uBAOE,MAAC,mBAAD,yBACE,KAAC,WAAD,EACE,KAAK,CAAC,MADR,CAEE,KAAK,CAAEX,KAFT,CAGE,WAAW,CAAEO,CAAC,CAAC,eAAD,CAHhB,CAIE,MAAM,cACJ,KAAC,GAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAEF,eAAe,CAAG,OAAH,CAAa,MAFpC,CAGE,aAAW,QAHb,CAIE,IAAI,cAAE,KAAC,UAAD,IAJR,CAKE,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,CAACD,eAAF,CAArB,EALX,EALJ,CAaE,QAAQ,CAAE,kBAACO,KAAD,QAAWX,CAAAA,QAAQ,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB,EAbZ,CAcE,WAAW,CAAE,IAdf,CAeE,UAAU,CAAE,IAfd,EADF,cAkBE,YAAK,GAAG,CAAEN,GAAV,EAlBF,GAPF,GADF,EADF,CAgCD,CAlDM","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { FilterIcon } from 'components/common/icons/FilterIcon';\nimport { SearchOverlay } from './searchOverlay/SearchOverlay/SearchOverlay';\nimport { HeaderActionWrapper } from '@app/components/header/Header.styles';\nimport { CategoryComponents } from '@app/components/header/components/HeaderSearch/HeaderSearch';\nimport { Btn, InputSearch } from '../HeaderSearch/HeaderSearch.styles';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@app/components/common/Dropdown/Dropdown';\n\ninterface SearchOverlayProps {\n  query: string;\n  setQuery: (query: string) => void;\n  data: CategoryComponents[] | null;\n  isOverlayVisible: boolean;\n  setOverlayVisible: (state: boolean) => void;\n}\n\nexport const SearchDropdown: React.FC<SearchOverlayProps> = ({\n  query,\n  setQuery,\n  data,\n  isOverlayVisible,\n  setOverlayVisible,\n}) => {\n  const [isFilterVisible, setFilterActive] = useState(false);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    setOverlayVisible(!!query || isFilterVisible);\n  }, [query, isFilterVisible, setOverlayVisible]);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ref = useRef<any>(null);\n\n  return (\n    <>\n      <Dropdown\n        {...((!!data || isFilterVisible) && { trigger: ['click'], onVisibleChange: setOverlayVisible })}\n        overlayClassName=\"search-dropdown\"\n        overlay={<SearchOverlay data={data} isFilterVisible={isFilterVisible} />}\n        visible={isOverlayVisible}\n        getPopupContainer={() => ref.current}\n      >\n        <HeaderActionWrapper>\n          <InputSearch\n            width=\"100%\"\n            value={query}\n            placeholder={t('header.search')}\n            filter={\n              <Btn\n                size=\"small\"\n                type={isFilterVisible ? 'ghost' : 'text'}\n                aria-label=\"Filter\"\n                icon={<FilterIcon />}\n                onClick={() => setFilterActive(!isFilterVisible)}\n              />\n            }\n            onChange={(event) => setQuery(event.target.value)}\n            enterButton={null}\n            addonAfter={null}\n          />\n          <div ref={ref} />\n        </HeaderActionWrapper>\n      </Dropdown>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}