{"ast":null,"code":"import React from'react';import{ConfigProvider}from'antd';import deDe from'antd/lib/locale/de_DE';import enUS from'antd/lib/locale/en_US';import GlobalStyle from'./styles/GlobalStyle';import'typeface-montserrat';import'typeface-lato';import{AppRouter}from'./components/router/AppRouter';import{useLanguage}from'./hooks/useLanguage';import{useAutoNightMode}from'./hooks/useAutoNightMode';import{usePWA}from'./hooks/usePWA';import{useThemeWatcher}from'./hooks/useThemeWatcher';import{useAppSelector}from'./hooks/reduxHooks';import{themeObject}from'./styles/themes/themeVariables';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useLanguage=useLanguage(),language=_useLanguage.language;var theme=useAppSelector(function(state){return state.theme.theme;});usePWA();useAutoNightMode();useThemeWatcher();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"meta\",{name:\"theme-color\",content:themeObject[theme].primary}),/*#__PURE__*/_jsx(GlobalStyle,{}),/*#__PURE__*/_jsx(ConfigProvider,{locale:language==='en'?enUS:deDe,children:/*#__PURE__*/_jsx(AppRouter,{})})]});};export default App;","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/App.tsx"],"names":["React","ConfigProvider","deDe","enUS","GlobalStyle","AppRouter","useLanguage","useAutoNightMode","usePWA","useThemeWatcher","useAppSelector","themeObject","App","language","theme","state","primary"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,MAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAO,qBAAP,CACA,MAAO,eAAP,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,gBAAT,KAAiC,0BAAjC,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,cAAT,KAA+B,oBAA/B,CACA,OAASC,WAAT,KAA4B,gCAA5B,C,6IAEA,GAAMC,CAAAA,GAAa,CAAG,QAAhBA,CAAAA,GAAgB,EAAM,CAC1B,iBAAqBN,WAAW,EAAhC,CAAQO,QAAR,cAAQA,QAAR,CACA,GAAMC,CAAAA,KAAK,CAAGJ,cAAc,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAN,CAAYA,KAAvB,EAAD,CAA5B,CAEAN,MAAM,GAEND,gBAAgB,GAEhBE,eAAe,GAEf,mBACE,wCACE,aAAM,IAAI,CAAC,aAAX,CAAyB,OAAO,CAAEE,WAAW,CAACG,KAAD,CAAX,CAAmBE,OAArD,EADF,cAEE,KAAC,WAAD,IAFF,cAGE,KAAC,cAAD,EAAgB,MAAM,CAAEH,QAAQ,GAAK,IAAb,CAAoBV,IAApB,CAA2BD,IAAnD,uBACE,KAAC,SAAD,IADF,EAHF,GADF,CASD,CAnBD,CAqBA,cAAeU,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport deDe from 'antd/lib/locale/de_DE';\nimport enUS from 'antd/lib/locale/en_US';\nimport GlobalStyle from './styles/GlobalStyle';\nimport 'typeface-montserrat';\nimport 'typeface-lato';\nimport { AppRouter } from './components/router/AppRouter';\nimport { useLanguage } from './hooks/useLanguage';\nimport { useAutoNightMode } from './hooks/useAutoNightMode';\nimport { usePWA } from './hooks/usePWA';\nimport { useThemeWatcher } from './hooks/useThemeWatcher';\nimport { useAppSelector } from './hooks/reduxHooks';\nimport { themeObject } from './styles/themes/themeVariables';\n\nconst App: React.FC = () => {\n  const { language } = useLanguage();\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  usePWA();\n\n  useAutoNightMode();\n\n  useThemeWatcher();\n\n  return (\n    <>\n      <meta name=\"theme-color\" content={themeObject[theme].primary} />\n      <GlobalStyle />\n      <ConfigProvider locale={language === 'en' ? enUS : deDe}>\n        <AppRouter />\n      </ConfigProvider>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}