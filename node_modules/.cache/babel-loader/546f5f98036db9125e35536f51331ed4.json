{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/common/selects/StatisticsSelect/StatisticsSelect.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Option, Select } from '../Select/Select';\nimport { getStatistics } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var StatisticsSelect = function StatisticsSelect(_ref) {\n  _s();\n  var className = _ref.className,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    statistics = _useState2[0],\n    setStatistics = _useState2[1];\n  useEffect(function () {\n    getStatistics().then(function (res) {\n      return setStatistics(res);\n    });\n  }, []);\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var statisticsOptions = useMemo(function () {\n    return statistics.map(function (statistic) {\n      var currentStatistic = configStatistics.find(function (configStat) {\n        return configStat.id === statistic.id;\n      });\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: statistic.id,\n        children: t((currentStatistic === null || currentStatistic === void 0 ? void 0 : currentStatistic.title) || '')\n      }, statistic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, _this);\n    });\n  }, [statistics, t]);\n  return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({\n    className: className\n  }, props), {}, {\n    children: statisticsOptions\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n_s(StatisticsSelect, \"go65LEoyVDPVf78S1euZYcgQUvQ=\", false, function () {\n  return [useTranslation];\n});\n_c = StatisticsSelect;\nvar _c;\n$RefreshReg$(_c, \"StatisticsSelect\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useTranslation","Option","Select","getStatistics","statistics","configStatistics","StatisticsSelect","className","props","setStatistics","then","res","t","statisticsOptions","map","statistic","currentStatistic","find","configStat","id","title"],"sources":["/workspace/ant-design-react-template/src/components/common/selects/StatisticsSelect/StatisticsSelect.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Option, Select, SelectProps } from '../Select/Select';\nimport { getStatistics, Statistic } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\n\nexport const StatisticsSelect: React.FC<SelectProps> = ({ className, ...props }) => {\n  const [statistics, setStatistics] = useState<Statistic[]>([]);\n\n  useEffect(() => {\n    getStatistics().then((res) => setStatistics(res));\n  }, []);\n\n  const { t } = useTranslation();\n\n  const statisticsOptions = useMemo(\n    () =>\n      statistics.map((statistic) => {\n        const currentStatistic = configStatistics.find((configStat) => configStat.id === statistic.id);\n\n        return (\n          <Option key={statistic.id} value={statistic.id}>\n            {t(currentStatistic?.title || '')}\n          </Option>\n        );\n      }),\n    [statistics, t],\n  );\n\n  return (\n    <Select className={className} {...props}>\n      {statisticsOptions}\n    </Select>\n  );\n};\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,MAAM,EAAEC,MAAM,QAAqB,kBAAkB;AAC9D,SAASC,aAAa,QAAmB,oBAAoB;AAC7D,SAASC,UAAU,IAAIC,gBAAgB,QAAQ,6BAA6B;AAAC;AAE7E,OAAO,IAAMC,gBAAuC,GAAG,SAA1CA,gBAAuC,OAAgC;EAAA;EAAA,IAA1BC,SAAS,QAATA,SAAS;IAAKC,KAAK;EAC3E,gBAAoCT,QAAQ,CAAc,EAAE,CAAC;IAAA;IAAtDK,UAAU;IAAEK,aAAa;EAEhCZ,SAAS,CAAC,YAAM;IACdM,aAAa,EAAE,CAACO,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKF,aAAa,CAACE,GAAG,CAAC;IAAA,EAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,sBAAcX,cAAc,EAAE;IAAtBY,CAAC,mBAADA,CAAC;EAET,IAAMC,iBAAiB,GAAGf,OAAO,CAC/B;IAAA,OACEM,UAAU,CAACU,GAAG,CAAC,UAACC,SAAS,EAAK;MAC5B,IAAMC,gBAAgB,GAAGX,gBAAgB,CAACY,IAAI,CAAC,UAACC,UAAU;QAAA,OAAKA,UAAU,CAACC,EAAE,KAAKJ,SAAS,CAACI,EAAE;MAAA,EAAC;MAE9F,oBACE,QAAC,MAAM;QAAoB,KAAK,EAAEJ,SAAS,CAACI,EAAG;QAAA,UAC5CP,CAAC,CAAC,CAAAI,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEI,KAAK,KAAI,EAAE;MAAC,GADtBL,SAAS,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,SAEhB;IAEb,CAAC,CAAC;EAAA,GACJ,CAACf,UAAU,EAAEQ,CAAC,CAAC,CAChB;EAED,oBACE,QAAC,MAAM;IAAC,SAAS,EAAEL;EAAU,GAAKC,KAAK;IAAA,UACpCK;EAAiB;IAAA;IAAA;IAAA;EAAA,SACX;AAEb,CAAC;AAAC,GA5BWP,gBAAuC;EAAA,QAOpCN,cAAc;AAAA;AAAA,KAPjBM,gBAAuC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}