{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _createClass from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import L from'leaflet';import{Marker,Popup}from'react-leaflet';import{ReactComponent as MapBackgroundIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!assets/icons/map-background.svg\";import*as S from'./DoctorsMap.styles';import{useResponsive}from'hooks/useResponsive';import{DoctorProfile}from'components/common/DoctorProfile/DoctorProfile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LARGE_MARKER_SIZE=[50,50];var MARKER_SIZE=[30,30];var defineIconSize=function defineIconSize(isDesktop){return isDesktop&&LARGE_MARKER_SIZE||MARKER_SIZE;};var MarkerDoctor=/*#__PURE__*/function(_L$Icon){_inherits(MarkerDoctor,_L$Icon);var _super=_createSuper(MarkerDoctor);function MarkerDoctor(props,isDesktop){_classCallCheck(this,MarkerDoctor);var iconSIze=defineIconSize(isDesktop);return _super.call(this,_objectSpread({popupAnchor:iconSIze,iconSize:iconSIze},props));}return _createClass(MarkerDoctor);}(L.Icon);export var DoctorsMap=function DoctorsMap(_ref){var doctors=_ref.doctors;var _useResponsive=useResponsive(),isDesktop=_useResponsive.isDesktop;var mapDoctors=doctors.filter(function(_ref2){var gps=_ref2.gps;return gps;});return/*#__PURE__*/_jsxs(S.DoctorsMap,{children:[/*#__PURE__*/_jsx(MapBackgroundIcon,{}),mapDoctors.map(function(marker){var _marker$gps,_marker$gps2;return/*#__PURE__*/_jsx(Marker,{icon:new MarkerDoctor({iconUrl:marker.imgUrl,iconRetinaUrl:marker.imgUrl},isDesktop),position:[((_marker$gps=marker.gps)===null||_marker$gps===void 0?void 0:_marker$gps.latitude)||0,((_marker$gps2=marker.gps)===null||_marker$gps2===void 0?void 0:_marker$gps2.longitude)||0],children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsx(DoctorProfile,{avatar:marker.imgUrl,name:marker.name,speciality:marker.specifity,rating:marker.rating})})},marker.id);})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/mapCard/DoctorsMap/DoctorsMap.tsx"],"names":["React","L","Marker","Popup","S","useResponsive","DoctorProfile","LARGE_MARKER_SIZE","MARKER_SIZE","defineIconSize","isDesktop","MarkerDoctor","props","iconSIze","popupAnchor","iconSize","Icon","DoctorsMap","doctors","mapDoctors","filter","gps","map","marker","iconUrl","imgUrl","iconRetinaUrl","latitude","longitude","name","specifity","rating","id"],"mappings":"uzBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAgD,SAAhD,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,C,qHAIA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,qBAAnB,CACA,OAASC,aAAT,KAA8B,qBAA9B,CAGA,OAASC,aAAT,KAA8B,+CAA9B,C,wFAEA,GAAMC,CAAAA,iBAAkC,CAAG,CAAC,EAAD,CAAK,EAAL,CAA3C,CACA,GAAMC,CAAAA,WAA4B,CAAG,CAAC,EAAD,CAAK,EAAL,CAArC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,SAAD,CAAyC,CAC9D,MAAQA,CAAAA,SAAS,EAAIH,iBAAd,EAAoCC,WAA3C,CACD,CAFD,C,GAIMG,CAAAA,Y,sGACJ,sBAAYC,KAAZ,CAAgCF,SAAhC,CAAoD,oCAClD,GAAMG,CAAAA,QAAQ,CAAGJ,cAAc,CAACC,SAAD,CAA/B,CADkD,uCAGhDI,WAAW,CAAED,QAHmC,CAIhDE,QAAQ,CAAEF,QAJsC,EAK7CD,KAL6C,GAOnD,C,oCARwBX,CAAC,CAACe,I,EAe7B,MAAO,IAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACpE,mBAAsBb,aAAa,EAAnC,CAAQK,SAAR,gBAAQA,SAAR,CAEA,GAAMS,CAAAA,UAAU,CAAGD,OAAO,CAACE,MAAR,CAAe,mBAAGC,CAAAA,GAAH,OAAGA,GAAH,OAAaA,CAAAA,GAAb,EAAf,CAAnB,CAEA,mBACE,MAAC,CAAD,CAAG,UAAH,yBACE,KAAC,iBAAD,IADF,CAEGF,UAAU,CAACG,GAAX,CAAe,SAACC,MAAD,kDACd,KAAC,MAAD,EAEE,IAAI,CACF,GAAIZ,CAAAA,YAAJ,CACE,CACEa,OAAO,CAAED,MAAM,CAACE,MADlB,CAEEC,aAAa,CAAEH,MAAM,CAACE,MAFxB,CADF,CAKEf,SALF,CAHJ,CAWE,QAAQ,CAAE,CAAC,cAAAa,MAAM,CAACF,GAAP,kDAAYM,QAAZ,GAAwB,CAAzB,CAA4B,eAAAJ,MAAM,CAACF,GAAP,oDAAYO,SAAZ,GAAyB,CAArD,CAXZ,uBAaE,KAAC,KAAD,wBACE,KAAC,aAAD,EACE,MAAM,CAAEL,MAAM,CAACE,MADjB,CAEE,IAAI,CAAEF,MAAM,CAACM,IAFf,CAGE,UAAU,CAAEN,MAAM,CAACO,SAHrB,CAIE,MAAM,CAAEP,MAAM,CAACQ,MAJjB,EADF,EAbF,EACOR,MAAM,CAACS,EADd,CADc,EAAf,CAFH,GADF,CA6BD,CAlCM","sourcesContent":["import React from 'react';\nimport L, { IconOptions, PointExpression } from 'leaflet';\nimport { Marker, Popup } from 'react-leaflet';\n\nimport { ReactComponent as MapBackgroundIcon } from 'assets/icons/map-background.svg';\n\nimport * as S from './DoctorsMap.styles';\nimport { useResponsive } from 'hooks/useResponsive';\n\nimport { Doctor } from 'api/doctors.api';\nimport { DoctorProfile } from 'components/common/DoctorProfile/DoctorProfile';\n\nconst LARGE_MARKER_SIZE: PointExpression = [50, 50];\nconst MARKER_SIZE: PointExpression = [30, 30];\n\nconst defineIconSize = (isDesktop: boolean): PointExpression => {\n  return (isDesktop && LARGE_MARKER_SIZE) || MARKER_SIZE;\n};\n\nclass MarkerDoctor extends L.Icon {\n  constructor(props: IconOptions, isDesktop: boolean) {\n    const iconSIze = defineIconSize(isDesktop);\n    super({\n      popupAnchor: iconSIze,\n      iconSize: iconSIze,\n      ...props,\n    });\n  }\n}\n\ninterface DoctorsMapProps {\n  doctors: Doctor[];\n}\n\nexport const DoctorsMap: React.FC<DoctorsMapProps> = ({ doctors }) => {\n  const { isDesktop } = useResponsive();\n\n  const mapDoctors = doctors.filter(({ gps }) => gps);\n\n  return (\n    <S.DoctorsMap>\n      <MapBackgroundIcon />\n      {mapDoctors.map((marker) => (\n        <Marker\n          key={marker.id}\n          icon={\n            new MarkerDoctor(\n              {\n                iconUrl: marker.imgUrl,\n                iconRetinaUrl: marker.imgUrl,\n              },\n              isDesktop,\n            )\n          }\n          position={[marker.gps?.latitude || 0, marker.gps?.longitude || 0]}\n        >\n          <Popup>\n            <DoctorProfile\n              avatar={marker.imgUrl}\n              name={marker.name}\n              speciality={marker.specifity}\n              rating={marker.rating}\n            />\n          </Popup>\n        </Marker>\n      ))}\n    </S.DoctorsMap>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}