{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from'react';import{NightTimePicker}from'./NightTimePicker/NightTimePicker';import{Switch}from'@app/components/common/Switch/Switch';import styled from'styled-components';import{useTranslation}from'react-i18next';import{useAppDispatch,useAppSelector}from'@app/hooks/reduxHooks';import{setNightMode,setNightTime}from'@app/store/slices/nightModeSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var NightModeSettings=function NightModeSettings(){var _useTranslation=useTranslation(),t=_useTranslation.t;var dispatch=useAppDispatch();var nightModeState=useAppSelector(function(state){return state.nightMode;});var isNightMode=nightModeState.isNightMode;var nightTime=nightModeState.nightTime;var handleChange=function handleChange(isNightMode){dispatch(setNightMode(isNightMode));};var handleNightTime=function handleNightTime(nightTime){dispatch(setNightTime(nightTime));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(SwitchContainer,{children:[/*#__PURE__*/_jsx(\"span\",{children:t('common.auto')}),/*#__PURE__*/_jsx(Switch,{checkedChildren:\"On\",unCheckedChildren:\"Off\",checked:isNightMode,onChange:handleChange})]}),isNightMode&&/*#__PURE__*/_jsx(NightTimePicker,{nightTime:nightTime,setNightTime:handleNightTime})]});};export var SwitchContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\"])));","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/header/components/settingsDropdown/settingsOverlay/nightModeSettings/NightModeSettings.tsx"],"names":["React","NightTimePicker","Switch","styled","useTranslation","useAppDispatch","useAppSelector","setNightMode","setNightTime","NightModeSettings","t","dispatch","nightModeState","state","nightMode","isNightMode","nightTime","handleChange","handleNightTime","SwitchContainer","div"],"mappings":"4MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,mCAAhC,CACA,OAASC,MAAT,KAAuB,sCAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,cAAT,CAAyBC,cAAzB,KAA+C,uBAA/C,CACA,OAASC,YAAT,CAAuBC,YAAvB,KAA2C,kCAA3C,C,6IAEA,MAAO,IAAMC,CAAAA,iBAA2B,CAAG,QAA9BA,CAAAA,iBAA8B,EAAM,CAC/C,oBAAcL,cAAc,EAA5B,CAAQM,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAGN,cAAc,EAA/B,CACA,GAAMO,CAAAA,cAAc,CAAGN,cAAc,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,SAAjB,EAAD,CAArC,CACA,GAAMC,CAAAA,WAAW,CAAGH,cAAc,CAACG,WAAnC,CACA,GAAMC,CAAAA,SAAS,CAAGJ,cAAc,CAACI,SAAjC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,WAAD,CAA0B,CAC7CJ,QAAQ,CAACJ,YAAY,CAACQ,WAAD,CAAb,CAAR,CACD,CAFD,CAIA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACF,SAAD,CAAyB,CAC/CL,QAAQ,CAACH,YAAY,CAACQ,SAAD,CAAb,CAAR,CACD,CAFD,CAIA,mBACE,wCACE,MAAC,eAAD,yBACE,sBAAON,CAAC,CAAC,aAAD,CAAR,EADF,cAEE,KAAC,MAAD,EAAQ,eAAe,CAAC,IAAxB,CAA6B,iBAAiB,CAAC,KAA/C,CAAqD,OAAO,CAAEK,WAA9D,CAA2E,QAAQ,CAAEE,YAArF,EAFF,GADF,CAKGF,WAAW,eAAI,KAAC,eAAD,EAAiB,SAAS,CAAEC,SAA5B,CAAuC,YAAY,CAAEE,eAArD,EALlB,GADF,CASD,CAzBM,CA2BP,MAAO,IAAMC,CAAAA,eAAe,CAAGhB,MAAM,CAACiB,GAAV,wHAArB","sourcesContent":["import React from 'react';\nimport { NightTimePicker } from './NightTimePicker/NightTimePicker';\nimport { Switch } from '@app/components/common/Switch/Switch';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { setNightMode, setNightTime } from '@app/store/slices/nightModeSlice';\n\nexport const NightModeSettings: React.FC = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useAppDispatch();\n  const nightModeState = useAppSelector((state) => state.nightMode);\n  const isNightMode = nightModeState.isNightMode;\n  const nightTime = nightModeState.nightTime;\n\n  const handleChange = (isNightMode: boolean) => {\n    dispatch(setNightMode(isNightMode));\n  };\n\n  const handleNightTime = (nightTime: number[]) => {\n    dispatch(setNightTime(nightTime));\n  };\n\n  return (\n    <>\n      <SwitchContainer>\n        <span>{t('common.auto')}</span>\n        <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\" checked={isNightMode} onChange={handleChange} />\n      </SwitchContainer>\n      {isNightMode && <NightTimePicker nightTime={nightTime} setNightTime={handleNightTime} />}\n    </>\n  );\n};\n\nexport const SwitchContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}