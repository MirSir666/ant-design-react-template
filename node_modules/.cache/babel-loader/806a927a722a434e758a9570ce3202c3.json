{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"href\",\"target\"];import React,{useMemo}from'react';import{Tooltip}from'antd';import{SuffixInput}from'../SuffixInput/SuffixInput';import{useTranslation}from'react-i18next';import{FileTextOutlined}from'@ant-design/icons';import{websitePattern}from'constants/patterns';import{Button}from'@app/components/common/buttons/Button/Button';import{jsx as _jsx}from\"react/jsx-runtime\";export var OpenURLInput=function OpenURLInput(_ref){var href=_ref.href,_ref$target=_ref.target,target=_ref$target===void 0?'_blank':_ref$target,props=_objectWithoutProperties(_ref,_excluded);var _useTranslation=useTranslation(),t=_useTranslation.t;var isMatch=useMemo(function(){return new RegExp(websitePattern).test(href||' ');},[href]);return/*#__PURE__*/_jsx(SuffixInput,_objectSpread({suffix:/*#__PURE__*/_jsx(Tooltip,{title:t('common.openInNewTab'),children:/*#__PURE__*/_jsx(Button,{size:\"small\",href:href,target:target,disabled:!isMatch,type:\"text\",icon:/*#__PURE__*/_jsx(FileTextOutlined,{})})})},props));};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/inputs/OpenURLInput/OpenURLInput.tsx"],"names":["React","useMemo","Tooltip","SuffixInput","useTranslation","FileTextOutlined","websitePattern","Button","OpenURLInput","href","target","props","t","isMatch","RegExp","test"],"mappings":"mYAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,OAAT,KAAwB,MAAxB,CACA,OAASC,WAAT,KAA4B,4BAA5B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,gBAAT,KAAiC,mBAAjC,CAEA,OAASC,cAAT,KAA+B,oBAA/B,CACA,OAASC,MAAT,KAAuB,8CAAvB,C,2CAOA,MAAO,IAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAA2C,IAAxCC,CAAAA,IAAwC,MAAxCA,IAAwC,kBAAlCC,MAAkC,CAAlCA,MAAkC,sBAAzB,QAAyB,aAAZC,KAAY,0CAClG,oBAAcP,cAAc,EAA5B,CAAQQ,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,OAAO,CAAGZ,OAAO,CAAC,iBAAM,IAAIa,CAAAA,MAAJ,CAAWR,cAAX,EAA2BS,IAA3B,CAAgCN,IAAI,EAAI,GAAxC,CAAN,EAAD,CAAqD,CAACA,IAAD,CAArD,CAAvB,CAEA,mBACE,KAAC,WAAD,gBACE,MAAM,cACJ,KAAC,OAAD,EAAS,KAAK,CAAEG,CAAC,CAAC,qBAAD,CAAjB,uBACE,KAAC,MAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAEH,IAFR,CAGE,MAAM,CAAEC,MAHV,CAIE,QAAQ,CAAE,CAACG,OAJb,CAKE,IAAI,CAAC,MALP,CAME,IAAI,cAAE,KAAC,gBAAD,IANR,EADF,EAFJ,EAaMF,KAbN,EADF,CAiBD,CAtBM","sourcesContent":["import React, { useMemo } from 'react';\nimport { Tooltip } from 'antd';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { useTranslation } from 'react-i18next';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { InputProps } from '../Input/Input';\nimport { websitePattern } from 'constants/patterns';\nimport { Button } from '@app/components/common/buttons/Button/Button';\n\ninterface OpenURLInputProps extends InputProps {\n  href?: string;\n  target?: string;\n}\n\nexport const OpenURLInput: React.FC<OpenURLInputProps> = ({ href, target = '_blank', ...props }) => {\n  const { t } = useTranslation();\n\n  const isMatch = useMemo(() => new RegExp(websitePattern).test(href || ' '), [href]);\n\n  return (\n    <SuffixInput\n      suffix={\n        <Tooltip title={t('common.openInNewTab')}>\n          <Button\n            size=\"small\"\n            href={href}\n            target={target}\n            disabled={!isMatch}\n            type=\"text\"\n            icon={<FileTextOutlined />}\n          />\n        </Tooltip>\n      }\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}