{"ast":null,"code":"import _slicedToArray from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{useTranslation}from'react-i18next';import{BaseForm}from'@app/components/common/forms/BaseForm/BaseForm';import{notificationController}from'@app/controllers/notificationController';import{useAppDispatch}from'@app/hooks/reduxHooks';import{doSetNewPassword}from'@app/store/slices/authSlice';import*as S from'./NewPasswordForm.styles';import*as Auth from'@app/components/layouts/AuthLayout/AuthLayout.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initStates={password:'new-password',confirmPassword:'new-password'};export var NewPasswordForm=function NewPasswordForm(){var _useTranslation=useTranslation(),t=_useTranslation.t;var navigate=useNavigate();var dispatch=useAppDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];var handleSubmit=function handleSubmit(values){setLoading(true);dispatch(doSetNewPassword({newPassword:values.password})).unwrap().then(function(){navigate('/auth/login');notificationController.success({message:t('newPassword.successMessage'),description:t('newPassword.successDescription')});}).catch(function(err){notificationController.error({message:err.message});setLoading(false);});};return/*#__PURE__*/_jsx(Auth.FormWrapper,{children:/*#__PURE__*/_jsxs(BaseForm,{layout:\"vertical\",onFinish:handleSubmit,requiredMark:\"optional\",initialValues:initStates,children:[/*#__PURE__*/_jsxs(Auth.BackWrapper,{onClick:function onClick(){return navigate(-1);},children:[/*#__PURE__*/_jsx(Auth.BackIcon,{}),t('common.back')]}),/*#__PURE__*/_jsx(Auth.FormTitle,{children:t('newPassword.title')}),/*#__PURE__*/_jsx(S.Description,{children:t('newPassword.description')}),/*#__PURE__*/_jsx(Auth.FormItem,{name:\"password\",label:t('common.password'),rules:[{required:true,message:t('common.requiredField')}],children:/*#__PURE__*/_jsx(Auth.FormInputPassword,{placeholder:t('common.password')})}),/*#__PURE__*/_jsx(Auth.FormItem,{name:\"confirmPassword\",label:t('common.confirmPassword'),dependencies:['password'],rules:[{required:true,message:t('common.requiredField')},function(_ref){var getFieldValue=_ref.getFieldValue;return{validator:function validator(_,value){if(!value||getFieldValue('password')===value){return Promise.resolve();}return Promise.reject(new Error(t('common.confirmPasswordError')));}};}],hasFeedback:true,children:/*#__PURE__*/_jsx(Auth.FormInputPassword,{placeholder:t('common.confirmPassword')})}),/*#__PURE__*/_jsx(BaseForm.Item,{noStyle:true,children:/*#__PURE__*/_jsx(S.SubmitButton,{type:\"primary\",htmlType:\"submit\",loading:isLoading,children:t('common.resetPassword')})})]})});};","map":{"version":3,"names":["React","useState","useNavigate","useTranslation","BaseForm","notificationController","useAppDispatch","doSetNewPassword","S","Auth","initStates","password","confirmPassword","NewPasswordForm","t","navigate","dispatch","isLoading","setLoading","handleSubmit","values","newPassword","unwrap","then","success","message","description","catch","err","error","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"sources":["/workspace/ant-design-react-template/src/components/auth/NewPasswordForm/NewPasswordForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\nimport { doSetNewPassword } from '@app/store/slices/authSlice';\nimport * as S from './NewPasswordForm.styles';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\n\ninterface NewPasswordFormData {\n  password: string;\n  confirmPassword: string;\n}\n\nconst initStates = {\n  password: 'new-password',\n  confirmPassword: 'new-password',\n};\n\nexport const NewPasswordForm: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = (values: NewPasswordFormData) => {\n    setLoading(true);\n    dispatch(doSetNewPassword({ newPassword: values.password }))\n      .unwrap()\n      .then(() => {\n        navigate('/auth/login');\n        notificationController.success({\n          message: t('newPassword.successMessage'),\n          description: t('newPassword.successDescription'),\n        });\n      })\n      .catch((err) => {\n        notificationController.error({ message: err.message });\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Auth.FormWrapper>\n      <BaseForm layout=\"vertical\" onFinish={handleSubmit} requiredMark=\"optional\" initialValues={initStates}>\n        <Auth.BackWrapper onClick={() => navigate(-1)}>\n          <Auth.BackIcon />\n          {t('common.back')}\n        </Auth.BackWrapper>\n        <Auth.FormTitle>{t('newPassword.title')}</Auth.FormTitle>\n        <S.Description>{t('newPassword.description')}</S.Description>\n        <Auth.FormItem\n          name=\"password\"\n          label={t('common.password')}\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <Auth.FormInputPassword placeholder={t('common.password')} />\n        </Auth.FormItem>\n        <Auth.FormItem\n          name=\"confirmPassword\"\n          label={t('common.confirmPassword')}\n          dependencies={['password']}\n          rules={[\n            { required: true, message: t('common.requiredField') },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error(t('common.confirmPasswordError')));\n              },\n            }),\n          ]}\n          hasFeedback\n        >\n          <Auth.FormInputPassword placeholder={t('common.confirmPassword')} />\n        </Auth.FormItem>\n        <BaseForm.Item noStyle>\n          <S.SubmitButton type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.resetPassword')}\n          </S.SubmitButton>\n        </BaseForm.Item>\n      </BaseForm>\n    </Auth.FormWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}