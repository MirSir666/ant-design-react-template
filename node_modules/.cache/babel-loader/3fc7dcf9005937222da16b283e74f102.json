{"ast":null,"code":"import _objectSpread from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useMemo,useState}from'react';import{ScreeningsHeader}from'../ScreeningsHeader/ScreeningsHeader';import{ScreeningsFriends}from'../screeningsFriends/ScreeningsFriends/ScreeningsFriends';import{ScreeningsChart}from'../ScreeningsChart/ScreeningsChart';import{getScreenings}from'@app/api/screenings.api';import{Dates}from'@app/constants/Dates';import{getStatistics}from'@app/api/statistics.api';import{getSmoothRandom}from'@app/utils/utils';import{getDoctorsData}from'@app/api/doctors.api';import*as S from'./ScreeningsCard.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ScreeningsCard=function ScreeningsCard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),doctors=_useState2[0],setDoctors=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),statistics=_useState4[0],setStatistics=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),screenings=_useState6[0],setScreenings=_useState6[1];var _useState7=useState({firstUser:1,secondUser:3,month:Dates.getToday().get('month'),statistic:2}),_useState8=_slicedToArray(_useState7,2),currentStatistics=_useState8[0],setCurrentStatistics=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isFirstClick=_useState10[0],setFirstClick=_useState10[1];useEffect(function(){getScreenings().then(function(res){return setScreenings(res);});},[]);useEffect(function(){getStatistics().then(function(res){return setStatistics(res);});},[]);useEffect(function(){getDoctorsData().then(function(res){return setDoctors(res);});},[]);var months=useMemo(function(){return Array.from({length:12},function(_,i){return i;});},[]);var screeningsWithDoctors=useMemo(function(){return screenings.map(function(screening){var currentDoctor=doctors.find(function(doctor){return doctor.id===screening.id;});return _objectSpread(_objectSpread({},screening),{},{name:(currentDoctor===null||currentDoctor===void 0?void 0:currentDoctor.name)||'',imgUrl:(currentDoctor===null||currentDoctor===void 0?void 0:currentDoctor.imgUrl)||''});});},[doctors,screenings]);var generateScreeningValue=function generateScreeningValue(){var randomValue=getSmoothRandom(3,0.7)*100;return(randomValue*Math.abs(Math.sin(randomValue))).toFixed();};var values=useMemo(function(){return months.map(function(month){return{monthId:month,data:statistics.map(function(statistic){return{statisticId:statistic.id,data:screenings.map(function(screening){return{id:screening.id,data:Array.from({length:16},function(_,index){return{day:index*2,value:generateScreeningValue()};})};})};})};});},[months,screenings,statistics]);var currentValues=useMemo(function(){var _values$find,_values$find$data$fin;return(_values$find=values.find(function(month){return month.monthId===currentStatistics.month;}))===null||_values$find===void 0?void 0:(_values$find$data$fin=_values$find.data.find(function(statistic){return statistic.statisticId===currentStatistics.statistic;}))===null||_values$find$data$fin===void 0?void 0:_values$find$data$fin.data;},[currentStatistics.month,currentStatistics.statistic,values]);var getUserStatistic=useCallback(function(isFirstUser){var user=isFirstUser?'firstUser':'secondUser';return currentValues&&{name:screeningsWithDoctors[currentStatistics[user]].name,data:currentValues[currentStatistics[user]].data};},[currentStatistics,currentValues,screeningsWithDoctors]);return/*#__PURE__*/_jsxs(S.ScreeningsCard,{title:/*#__PURE__*/_jsx(ScreeningsHeader,{currentStatistics:currentStatistics,setCurrentStatistics:setCurrentStatistics}),padding:0,children:[/*#__PURE__*/_jsx(ScreeningsFriends,{screenings:screeningsWithDoctors,currentStatistics:currentStatistics,setCurrentStatistics:setCurrentStatistics,isFirstClick:isFirstClick,setFirstClick:setFirstClick}),/*#__PURE__*/_jsx(ScreeningsChart,{firstUser:getUserStatistic(true),secondUser:getUserStatistic(false)})]});};","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","ScreeningsHeader","ScreeningsFriends","ScreeningsChart","getScreenings","Dates","getStatistics","getSmoothRandom","getDoctorsData","S","ScreeningsCard","doctors","setDoctors","statistics","setStatistics","screenings","setScreenings","firstUser","secondUser","month","getToday","get","statistic","currentStatistics","setCurrentStatistics","isFirstClick","setFirstClick","then","res","months","Array","from","length","_","i","screeningsWithDoctors","map","screening","currentDoctor","find","doctor","id","name","imgUrl","generateScreeningValue","randomValue","Math","abs","sin","toFixed","values","monthId","data","statisticId","index","day","value","currentValues","getUserStatistic","isFirstUser","user"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/screeningsCard/ScreeningsCard/ScreeningsCard.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ScreeningsHeader } from '../ScreeningsHeader/ScreeningsHeader';\nimport { ScreeningsFriends } from '../screeningsFriends/ScreeningsFriends/ScreeningsFriends';\nimport { ScreeningsChart } from '../ScreeningsChart/ScreeningsChart';\nimport { getScreenings, Screening } from '@app/api/screenings.api';\nimport { Dates } from '@app/constants/Dates';\nimport { getStatistics, Statistic } from '@app/api/statistics.api';\nimport { getSmoothRandom } from '@app/utils/utils';\nimport { Doctor, getDoctorsData } from '@app/api/doctors.api';\nimport * as S from './ScreeningsCard.styles';\n\nexport interface CurrentStatisticsState {\n  firstUser: number;\n  secondUser: number;\n  month: number;\n  statistic: number;\n}\n\nexport type ScreeningWithDoctors = Screening & { name: string; imgUrl: string };\n\nexport const ScreeningsCard: React.FC = () => {\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [statistics, setStatistics] = useState<Statistic[]>([]);\n  const [screenings, setScreenings] = useState<Screening[]>([]);\n  const [currentStatistics, setCurrentStatistics] = useState<CurrentStatisticsState>({\n    firstUser: 1,\n    secondUser: 3,\n    month: Dates.getToday().get('month'),\n    statistic: 2,\n  });\n  const [isFirstClick, setFirstClick] = useState(true);\n\n  useEffect(() => {\n    getScreenings().then((res) => setScreenings(res));\n  }, []);\n\n  useEffect(() => {\n    getStatistics().then((res) => setStatistics(res));\n  }, []);\n\n  useEffect(() => {\n    getDoctorsData().then((res) => setDoctors(res));\n  }, []);\n\n  const months = useMemo(() => Array.from({ length: 12 }, (_, i) => i), []);\n\n  const screeningsWithDoctors = useMemo((): ScreeningWithDoctors[] => {\n    return screenings.map((screening) => {\n      const currentDoctor = doctors.find((doctor) => doctor.id === screening.id);\n\n      return {\n        ...screening,\n        name: currentDoctor?.name || '',\n        imgUrl: currentDoctor?.imgUrl || '',\n      };\n    });\n  }, [doctors, screenings]);\n\n  const generateScreeningValue = () => {\n    const randomValue = getSmoothRandom(3, 0.7) * 100;\n    return (randomValue * Math.abs(Math.sin(randomValue))).toFixed();\n  };\n\n  const values = useMemo(\n    () =>\n      months.map((month) => ({\n        monthId: month,\n        data: statistics.map((statistic) => ({\n          statisticId: statistic.id,\n          data: screenings.map((screening) => ({\n            id: screening.id,\n            data: Array.from({ length: 16 }, (_, index) => ({\n              day: index * 2,\n              value: generateScreeningValue(),\n            })),\n          })),\n        })),\n      })),\n    [months, screenings, statistics],\n  );\n\n  const currentValues = useMemo(\n    () =>\n      values\n        .find((month) => month.monthId === currentStatistics.month)\n        ?.data.find((statistic) => statistic.statisticId === currentStatistics.statistic)?.data,\n    [currentStatistics.month, currentStatistics.statistic, values],\n  );\n\n  const getUserStatistic = useCallback(\n    (isFirstUser: boolean) => {\n      const user = isFirstUser ? 'firstUser' : 'secondUser';\n\n      return (\n        currentValues && {\n          name: screeningsWithDoctors[currentStatistics[user]].name,\n          data: currentValues[currentStatistics[user]].data,\n        }\n      );\n    },\n    [currentStatistics, currentValues, screeningsWithDoctors],\n  );\n\n  return (\n    <S.ScreeningsCard\n      title={<ScreeningsHeader currentStatistics={currentStatistics} setCurrentStatistics={setCurrentStatistics} />}\n      padding={0}\n    >\n      <ScreeningsFriends\n        screenings={screeningsWithDoctors}\n        currentStatistics={currentStatistics}\n        setCurrentStatistics={setCurrentStatistics}\n        isFirstClick={isFirstClick}\n        setFirstClick={setFirstClick}\n      />\n      <ScreeningsChart firstUser={getUserStatistic(true)} secondUser={getUserStatistic(false)} />\n    </S.ScreeningsCard>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}