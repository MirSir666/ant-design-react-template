{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/Balance/Balance.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { NFTCard } from '@app/components/nft-dashboard/common/NFTCard/NFTCard';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport { getBalance } from '@app/api/earnings.api';\nimport * as S from './Balance.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Balance = function Balance() {\n  _s();\n\n  var _useState = useState({\n    usd_balance: 0,\n    eth_balance: 0,\n    btc_balance: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      balance = _useState2[0],\n      setBalance = _useState2[1];\n\n  var userId = useAppSelector(function (state) {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.theme;\n  }),\n      theme = _useAppSelector.theme;\n\n  useEffect(function () {\n    userId && getBalance(userId).then(function (res) {\n      return setBalance(res);\n    });\n  }, [userId]);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(S.TitleText, {\n        level: 2,\n        children: t('nft.yourBalance')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(NFTCard, {\n        isSider: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [30, 30],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [14, 14],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsxDEV(S.TitleBalanceText, {\n                  level: 3,\n                  children: getCurrencyPrice(formatNumberWithCommas(balance.usd_balance), 'USD')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: [55, 10],\n                  wrap: false,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(S.SubtitleBalanceText, {\n                      children: getCurrencyPrice(formatNumberWithCommas(balance.eth_balance), 'ETH')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(S.SubtitleBalanceText, {\n                      children: getCurrencyPrice(formatNumberWithCommas(balance.btc_balance), 'BTC')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(S.TopUpButton, {\n              type: theme === 'dark' ? 'ghost' : 'primary',\n              block: true,\n              children: t('nft.topUpBalance')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Balance, \"qcBZ4lFZK9S11cTEyIPG4ix8sQk=\", false, function () {\n  return [useAppSelector, useAppSelector, useTranslation];\n});\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/Balance/Balance.tsx"],"names":["React","useEffect","useState","Col","Row","useTranslation","NFTCard","useAppSelector","formatNumberWithCommas","getCurrencyPrice","getBalance","S","Balance","usd_balance","eth_balance","btc_balance","balance","setBalance","userId","state","user","id","theme","then","res","t"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { NFTCard } from '@app/components/nft-dashboard/common/NFTCard/NFTCard';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport { getBalance } from '@app/api/earnings.api';\nimport * as S from './Balance.styles';\n\nexport const Balance: React.FC = () => {\n  const [balance, setBalance] = useState({\n    usd_balance: 0,\n    eth_balance: 0,\n    btc_balance: 0,\n  });\n\n  const userId = useAppSelector((state) => state.user.user?.id);\n  const { theme } = useAppSelector((state) => state.theme);\n\n  useEffect(() => {\n    userId && getBalance(userId).then((res) => setBalance(res));\n  }, [userId]);\n\n  const { t } = useTranslation();\n\n  return (\n    <Row>\n      <Col span={24}>\n        <S.TitleText level={2}>{t('nft.yourBalance')}</S.TitleText>\n      </Col>\n\n      <Col span={24}>\n        <NFTCard isSider>\n          <Row gutter={[30, 30]}>\n            <Col span={24}>\n              <Row gutter={[14, 14]}>\n                <Col span={24}>\n                  <S.TitleBalanceText level={3}>\n                    {getCurrencyPrice(formatNumberWithCommas(balance.usd_balance), 'USD')}\n                  </S.TitleBalanceText>\n                </Col>\n\n                <Col span={24}>\n                  <Row gutter={[55, 10]} wrap={false}>\n                    <Col>\n                      <S.SubtitleBalanceText>\n                        {getCurrencyPrice(formatNumberWithCommas(balance.eth_balance), 'ETH')}\n                      </S.SubtitleBalanceText>\n                    </Col>\n\n                    <Col>\n                      <S.SubtitleBalanceText>\n                        {getCurrencyPrice(formatNumberWithCommas(balance.btc_balance), 'BTC')}\n                      </S.SubtitleBalanceText>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n\n            <Col span={24}>\n              <S.TopUpButton type={theme === 'dark' ? 'ghost' : 'primary'} block>\n                {t('nft.topUpBalance')}\n              </S.TopUpButton>\n            </Col>\n          </Row>\n        </NFTCard>\n      </Col>\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}