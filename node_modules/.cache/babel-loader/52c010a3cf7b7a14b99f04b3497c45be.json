{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"notifications\", \"setNotifications\"];\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/notificationsDropdown/NotificationsOverlay/NotificationsOverlay.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Trans } from 'react-i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { Notification } from 'components/common/Notification/Notification';\nimport { capitalize } from 'utils/utils';\nimport { notificationsSeverities } from 'constants/notificationsSeverities';\nimport * as S from './NotificationsOverlay.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var NotificationsOverlay = function NotificationsOverlay(_ref) {\n  _s();\n  var notifications = _ref.notifications,\n    setNotifications = _ref.setNotifications,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var noticesList = useMemo(function () {\n    return notifications.map(function (notification, index) {\n      var _notificationsSeverit;\n      var type = (_notificationsSeverit = notificationsSeverities.find(function (dbSeverity) {\n        return dbSeverity.id === notification.id;\n      })) === null || _notificationsSeverit === void 0 ? void 0 : _notificationsSeverit.name;\n      return /*#__PURE__*/_jsxDEV(Notification, _objectSpread({\n        type: type || 'warning',\n        title: capitalize(type || 'warning'),\n        description: t(notification.description)\n      }, type === 'mention' && {\n        mentionIconSrc: notification.userIcon,\n        title: notification.userName,\n        description: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: notification.description,\n          children: /*#__PURE__*/_jsxDEV(S.LinkBtn, {\n            type: \"link\",\n            href: notification.href,\n            children: {\n              place: t(notification.place)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, _this)\n      }), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this);\n    });\n  }, [notifications, t]);\n  return /*#__PURE__*/_jsxDEV(S.NoticesOverlayMenu, _objectSpread(_objectSpread({\n    mode: \"inline\"\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(S.MenuRow, {\n      gutter: [20, 20],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: notifications.length > 0 ? /*#__PURE__*/_jsxDEV(Space, {\n          direction: \"vertical\",\n          size: 10,\n          split: /*#__PURE__*/_jsxDEV(S.SplitDivider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 58\n          }, _this),\n          children: noticesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(S.Text, {\n          children: t('header.notifications.noNotifications')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [10, 10],\n          children: [notifications.length > 0 && /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(S.Btn, {\n              type: \"ghost\",\n              onClick: function onClick() {\n                return setNotifications([]);\n              },\n              children: t('header.notifications.readAll')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(S.Btn, {\n              type: \"link\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: t('header.notifications.viewAll')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n_s(NotificationsOverlay, \"j2Fsx99XZuII746J/44YDv5jNd8=\", false, function () {\n  return [useTranslation];\n});\n_c = NotificationsOverlay;\nvar _c;\n$RefreshReg$(_c, \"NotificationsOverlay\");","map":{"version":3,"names":["React","useMemo","Trans","useTranslation","Col","Row","Space","Link","Notification","capitalize","notificationsSeverities","S","NotificationsOverlay","notifications","setNotifications","props","t","noticesList","map","notification","index","type","find","dbSeverity","id","name","description","mentionIconSrc","userIcon","title","userName","href","place","length"],"sources":["/workspace/ant-design-react-template/src/components/header/components/notificationsDropdown/NotificationsOverlay/NotificationsOverlay.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Trans } from 'react-i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { Notification } from 'components/common/Notification/Notification';\nimport { capitalize } from 'utils/utils';\nimport { Mention, Notification as NotificationType } from 'api/notifications.api';\nimport { notificationsSeverities } from 'constants/notificationsSeverities';\nimport * as S from './NotificationsOverlay.styles';\n\ninterface NotificationsOverlayProps {\n  notifications: NotificationType[];\n  setNotifications: (state: NotificationType[]) => void;\n}\n\nexport const NotificationsOverlay: React.FC<NotificationsOverlayProps> = ({\n  notifications,\n  setNotifications,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const noticesList = useMemo(\n    () =>\n      notifications.map((notification, index) => {\n        const type = notificationsSeverities.find((dbSeverity) => dbSeverity.id === notification.id)?.name;\n\n        return (\n          <Notification\n            key={index}\n            type={type || 'warning'}\n            title={capitalize(type || 'warning')}\n            description={t(notification.description)}\n            {...(type === 'mention' && {\n              mentionIconSrc: (notification as Mention).userIcon,\n              title: (notification as Mention).userName,\n              description: (\n                <Trans i18nKey={(notification as Mention).description}>\n                  <S.LinkBtn type=\"link\" href={(notification as Mention).href}>\n                    {{ place: t((notification as Mention).place) }}\n                  </S.LinkBtn>\n                </Trans>\n              ),\n            })}\n          />\n        );\n      }),\n    [notifications, t],\n  );\n\n  return (\n    <S.NoticesOverlayMenu mode=\"inline\" {...props}>\n      <S.MenuRow gutter={[20, 20]}>\n        <Col span={24}>\n          {notifications.length > 0 ? (\n            <Space direction=\"vertical\" size={10} split={<S.SplitDivider />}>\n              {noticesList}\n            </Space>\n          ) : (\n            <S.Text>{t('header.notifications.noNotifications')}</S.Text>\n          )}\n        </Col>\n        <Col span={24}>\n          <Row gutter={[10, 10]}>\n            {notifications.length > 0 && (\n              <Col span={24}>\n                <S.Btn type=\"ghost\" onClick={() => setNotifications([])}>\n                  {t('header.notifications.readAll')}\n                </S.Btn>\n              </Col>\n            )}\n            <Col span={24}>\n              <S.Btn type=\"link\">\n                <Link to=\"/\">{t('header.notifications.viewAll')}</Link>\n              </S.Btn>\n            </Col>\n          </Row>\n        </Col>\n      </S.MenuRow>\n    </S.NoticesOverlayMenu>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}