{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/screeningsFriends/ScreeningsFriends/ScreeningsFriends.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { ScreeningsFriend } from '../ScreeningsFriend/ScreeningsFriend';\nimport { MobileScreenings } from '../MobileScreenings/MobileScreenings';\nimport { DesktopScreenings } from '../DesktopScreenings/DesktopScreenings';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport * as S from './ScreeningsFriends.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ScreeningsFriends = function ScreeningsFriends(_ref) {\n  _s();\n\n  var screenings = _ref.screenings,\n      currentStatistics = _ref.currentStatistics,\n      setCurrentStatistics = _ref.setCurrentStatistics,\n      isFirstClick = _ref.isFirstClick,\n      setFirstClick = _ref.setFirstClick;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisibleMenu = _useState2[0],\n      setVisibleMenu = _useState2[1];\n\n  var _useResponsive = useResponsive(),\n      mobileOnly = _useResponsive.mobileOnly,\n      isTablet = _useResponsive.isTablet;\n\n  var handleClickItem = useCallback(function (mode) {\n    return function () {\n      setCurrentStatistics(function (prev) {\n        if (isFirstClick && prev.firstUser !== mode) {\n          setFirstClick(!isFirstClick);\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            secondUser: mode\n          });\n        } else if (prev.secondUser !== mode) {\n          setFirstClick(!isFirstClick);\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            firstUser: mode\n          });\n        } else {\n          return _objectSpread({}, prev);\n        }\n      });\n    };\n  }, [isFirstClick, setFirstClick, setCurrentStatistics]);\n  var screeningsItems = useMemo(function () {\n    return screenings.map(function (screening, index) {\n      return /*#__PURE__*/_jsxDEV(ScreeningsFriend, {\n        name: screening.name,\n        value: screening.value,\n        prevValue: screening.prevValue,\n        src: screening.imgUrl,\n        isPrimary: index === currentStatistics.firstUser,\n        isSecondary: index === currentStatistics.secondUser,\n        onClick: handleClickItem(index),\n        isVisibleMenu: isVisibleMenu\n      }, screening.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this);\n    });\n  }, [screenings, currentStatistics, isVisibleMenu, handleClickItem]);\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    $isVisible: isVisibleMenu,\n    children: [mobileOnly && screeningsItems.length > 0 && /*#__PURE__*/_jsxDEV(MobileScreenings, {\n      screeningsItems: screeningsItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 52\n    }, _this), isTablet && /*#__PURE__*/_jsxDEV(DesktopScreenings, {\n      screeningsItems: screeningsItems,\n      isVisibleMenu: isVisibleMenu,\n      setVisibleMenu: setVisibleMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ScreeningsFriends, \"9BpkFCWA7iFK+MTyWf/iBO93Ym4=\", false, function () {\n  return [useResponsive];\n});\n\n_c = ScreeningsFriends;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreeningsFriends\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/screeningsFriends/ScreeningsFriends/ScreeningsFriends.tsx"],"names":["React","useCallback","useMemo","useState","ScreeningsFriend","MobileScreenings","DesktopScreenings","useResponsive","S","ScreeningsFriends","screenings","currentStatistics","setCurrentStatistics","isFirstClick","setFirstClick","isVisibleMenu","setVisibleMenu","mobileOnly","isTablet","handleClickItem","mode","prev","firstUser","secondUser","screeningsItems","map","screening","index","name","value","prevValue","imgUrl","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport { ScreeningsFriend } from '../ScreeningsFriend/ScreeningsFriend';\nimport { CurrentStatisticsState, ScreeningWithDoctors } from '../../ScreeningsCard/ScreeningsCard';\nimport { MobileScreenings } from '../MobileScreenings/MobileScreenings';\nimport { DesktopScreenings } from '../DesktopScreenings/DesktopScreenings';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport * as S from './ScreeningsFriends.styles';\n\ninterface ScreeningsFriendsProps {\n  screenings: ScreeningWithDoctors[];\n  currentStatistics: CurrentStatisticsState;\n  setCurrentStatistics: (func: (state: CurrentStatisticsState) => CurrentStatisticsState) => void;\n  isFirstClick: boolean;\n  setFirstClick: (state: boolean) => void;\n}\n\nexport const ScreeningsFriends: React.FC<ScreeningsFriendsProps> = ({\n  screenings,\n  currentStatistics,\n  setCurrentStatistics,\n  isFirstClick,\n  setFirstClick,\n}) => {\n  const [isVisibleMenu, setVisibleMenu] = useState(true);\n\n  const { mobileOnly, isTablet } = useResponsive();\n\n  const handleClickItem = useCallback(\n    (mode: number) => () => {\n      setCurrentStatistics((prev) => {\n        if (isFirstClick && prev.firstUser !== mode) {\n          setFirstClick(!isFirstClick);\n\n          return {\n            ...prev,\n            secondUser: mode,\n          };\n        } else if (prev.secondUser !== mode) {\n          setFirstClick(!isFirstClick);\n\n          return {\n            ...prev,\n            firstUser: mode,\n          };\n        } else {\n          return {\n            ...prev,\n          };\n        }\n      });\n    },\n    [isFirstClick, setFirstClick, setCurrentStatistics],\n  );\n\n  const screeningsItems = useMemo(\n    () =>\n      screenings.map((screening, index) => (\n        <ScreeningsFriend\n          key={screening.name}\n          name={screening.name}\n          value={screening.value}\n          prevValue={screening.prevValue}\n          src={screening.imgUrl}\n          isPrimary={index === currentStatistics.firstUser}\n          isSecondary={index === currentStatistics.secondUser}\n          onClick={handleClickItem(index)}\n          isVisibleMenu={isVisibleMenu}\n        />\n      )),\n    [screenings, currentStatistics, isVisibleMenu, handleClickItem],\n  );\n\n  return (\n    <S.Wrapper $isVisible={isVisibleMenu}>\n      {mobileOnly && screeningsItems.length > 0 && <MobileScreenings screeningsItems={screeningsItems} />}\n\n      {isTablet && (\n        <DesktopScreenings\n          screeningsItems={screeningsItems}\n          isVisibleMenu={isVisibleMenu}\n          setVisibleMenu={setVisibleMenu}\n        />\n      )}\n    </S.Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}