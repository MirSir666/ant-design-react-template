{"ast":null,"code":"import React from'react';import{useTranslation}from'react-i18next';import{isValidPhoneNumber}from'react-phone-number-input';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import*as S from'./PhoneItem.styles';import{jsx as _jsx}from\"react/jsx-runtime\";export var PhoneItem=function PhoneItem(_ref){var required=_ref.required,onClick=_ref.onClick,verified=_ref.verified;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(BaseButtonsForm.Item,{name:\"phone\",$isSuccess:verified,$successText:t('profile.nav.personalInfo.verified'),label:t('common.phone'),rules:[{required:required,message:t('common.requiredField')},function(){return{validator:function validator(_,value){if(!value||isValidPhoneNumber(value)){return Promise.resolve();}return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));}};}],children:/*#__PURE__*/_jsx(S.PhoneNumberInput,{disabled:verified,className:\"ant-input\",onClick:onClick})});};","map":{"version":3,"names":["React","useTranslation","isValidPhoneNumber","BaseButtonsForm","S","PhoneItem","required","onClick","verified","t","message","validator","_","value","Promise","resolve","reject","Error"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport * as S from './PhoneItem.styles';\n\ninterface PhoneItemsProps {\n  required?: boolean;\n  onClick?: () => void;\n  verified?: boolean;\n}\n\nexport const PhoneItem: React.FC<PhoneItemsProps> = ({ required, onClick, verified }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"phone\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.phone')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        () => ({\n          validator(_, value) {\n            if (!value || isValidPhoneNumber(value)) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.personalInfo.wrongNumber')));\n          },\n        }),\n      ]}\n    >\n      <S.PhoneNumberInput disabled={verified} className=\"ant-input\" onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,kBAAkB,KAAQ,0BAA0B,CAC7D,OAASC,eAAe,KAAQ,8DAA8D,CAC9F,MAAO,GAAKC,EAAC,KAAM,oBAAoB,CAAC,2CAQxC,MAAO,IAAMC,UAAoC,CAAG,QAAvCA,UAAoC,MAAwC,IAAlCC,SAAQ,MAARA,QAAQ,CAAEC,OAAO,MAAPA,OAAO,CAAEC,QAAQ,MAARA,QAAQ,CAChF,oBAAcP,cAAc,EAAE,CAAtBQ,CAAC,iBAADA,CAAC,CAET,mBACE,KAAC,eAAe,CAAC,IAAI,EACnB,IAAI,CAAC,OAAO,CACZ,UAAU,CAAED,QAAS,CACrB,YAAY,CAAEC,CAAC,CAAC,mCAAmC,CAAE,CACrD,KAAK,CAAEA,CAAC,CAAC,cAAc,CAAE,CACzB,KAAK,CAAE,CACL,CAAEH,QAAQ,CAARA,QAAQ,CAAEI,OAAO,CAAED,CAAC,CAAC,sBAAsB,CAAE,CAAC,CAChD,iBAAO,CACLE,SAAS,oBAACC,CAAC,CAAEC,KAAK,CAAE,CAClB,GAAI,CAACA,KAAK,EAAIX,kBAAkB,CAACW,KAAK,CAAC,CAAE,CACvC,MAAOC,QAAO,CAACC,OAAO,EAAE,CAC1B,CACA,MAAOD,QAAO,CAACE,MAAM,CAAC,GAAIC,MAAK,CAACR,CAAC,CAAC,sCAAsC,CAAC,CAAC,CAAC,CAC7E,CACF,CAAC,EAAC,CACF,uBAEF,KAAC,CAAC,CAAC,gBAAgB,EAAC,QAAQ,CAAED,QAAS,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAED,OAAQ,EAAG,EAC7D,CAE3B,CAAC"},"metadata":{},"sourceType":"module"}