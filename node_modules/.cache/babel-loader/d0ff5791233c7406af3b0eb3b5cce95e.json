{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';import{ApiError}from'@app/api/ApiError';import{readToken}from'@app/services/localStorage.service';export var httpApi=axios.create({baseURL:process.env.REACT_APP_BASE_URL});httpApi.interceptors.request.use(function(config){config.headers=_objectSpread(_objectSpread({},config.headers),{},{Authorization:\"Bearer \".concat(readToken())});return config;});httpApi.interceptors.response.use(undefined,function(error){var _error$response,_error$response2;throw new ApiError(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data.message)||error.message,(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data);});","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/api/http.api.ts"],"names":["axios","ApiError","readToken","httpApi","create","baseURL","process","env","REACT_APP_BASE_URL","interceptors","request","use","config","headers","Authorization","response","undefined","error","data","message"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,mBAAzB,CACA,OAASC,SAAT,KAA0B,oCAA1B,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,MAAN,CAAa,CAClCC,OAAO,CAAEC,OAAO,CAACC,GAAR,CAAYC,kBADa,CAAb,CAAhB,CAIPL,OAAO,CAACM,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,SAACC,MAAD,CAAY,CAC3CA,MAAM,CAACC,OAAP,gCAAsBD,MAAM,CAACC,OAA7B,MAAsCC,aAAa,kBAAYZ,SAAS,EAArB,CAAnD,GAEA,MAAOU,CAAAA,MAAP,CACD,CAJD,EAMAT,OAAO,CAACM,YAAR,CAAqBM,QAArB,CAA8BJ,GAA9B,CAAkCK,SAAlC,CAA6C,SAACC,KAAD,CAAuB,sCAClE,KAAM,IAAIhB,CAAAA,QAAJ,CAA2B,kBAAAgB,KAAK,CAACF,QAAN,0DAAgBG,IAAhB,CAAqBC,OAArB,GAAgCF,KAAK,CAACE,OAAjE,mBAA0EF,KAAK,CAACF,QAAhF,2CAA0E,iBAAgBG,IAA1F,CAAN,CACD,CAFD","sourcesContent":["import axios from 'axios';\nimport { AxiosError } from 'axios';\nimport { ApiError } from '@app/api/ApiError';\nimport { readToken } from '@app/services/localStorage.service';\n\nexport const httpApi = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n});\n\nhttpApi.interceptors.request.use((config) => {\n  config.headers = { ...config.headers, Authorization: `Bearer ${readToken()}` };\n\n  return config;\n});\n\nhttpApi.interceptors.response.use(undefined, (error: AxiosError) => {\n  throw new ApiError<ApiErrorData>(error.response?.data.message || error.message, error.response?.data);\n});\n\nexport interface ApiErrorData {\n  message: string;\n}\n"]},"metadata":{},"sourceType":"module"}