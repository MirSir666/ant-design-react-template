{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useMemo,useState}from'react';import{useTranslation}from'react-i18next';import{DashboardCard}from'@app/components/medical-dashboard/DashboardCard/DashboardCard';import{Carousel}from'@app/components/common/Carousel/Carousel';import{DoctorCard}from'../DoctorCard/DoctorCard';import{Dates}from'@app/constants/Dates';import{getUserCalendar}from'@app/api/calendar.api';import{getDoctorsData}from'@app/api/doctors.api';import{useAppSelector}from'@app/hooks/reduxHooks';import*as S from'./FavoritesDoctorsCard.styles';import{BREAKPOINTS}from'@app/styles/themes/constants';/* eslint-disable @typescript-eslint/no-explicit-any */import{jsx as _jsx}from\"react/jsx-runtime\";var NextArrow=function NextArrow(props){var className=props.className,style=props.style,onClick=props.onClick;return/*#__PURE__*/_jsx(S.SliderArrow,{className:className,style:_objectSpread(_objectSpread({},style),{},{display:'block'}),onClick:onClick});};var PrevArrow=function PrevArrow(props){var className=props.className,style=props.style,onClick=props.onClick;return/*#__PURE__*/_jsx(S.SliderArrow,{className:className,style:_objectSpread(_objectSpread({},style),{},{display:'block'}),onClick:onClick});};export var FavoritesDoctorsCard=function FavoritesDoctorsCard(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),doctors=_useState2[0],setDoctors=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),calendar=_useState4[0],setCalendar=_useState4[1];var user=useAppSelector(function(state){return state.user.user;});var today=Dates.getToday();useEffect(function(){getDoctorsData().then(function(res){return setDoctors(res);});},[]);useEffect(function(){user&&getUserCalendar(user.id).then(function(res){return setCalendar(res);});},[user]);var pastEvents=useMemo(function(){return calendar.filter(function(event){return Dates.getDate(event.date).isBefore(today);});},[calendar,today]);return/*#__PURE__*/_jsx(DashboardCard,{title:t('medical-dashboard.favoriteDoctors.title'),padding:\"0 20px\",children:doctors.length>0&&calendar.length>0&&/*#__PURE__*/_jsx(S.CarouselWrapper,{children:/*#__PURE__*/_jsx(Carousel,{arrows:true,nextArrow:/*#__PURE__*/_jsx(NextArrow,{}),prevArrow:/*#__PURE__*/_jsx(PrevArrow,{}),slidesToShow:4,responsive:[{breakpoint:1931,settings:{slidesToShow:3}},{breakpoint:1530,settings:{slidesToShow:2}},{breakpoint:BREAKPOINTS.xl-1,settings:{slidesToShow:4}},{breakpoint:1140,settings:{slidesToShow:3}},{breakpoint:920,settings:{slidesToShow:2}},{breakpoint:BREAKPOINTS.md-1,settings:{slidesToShow:3}},{breakpoint:720,settings:{slidesToShow:2}},{breakpoint:520,settings:{slidesToShow:1}}],children:pastEvents.map(function(event){var currentDoctor=doctors.find(function(doctor){return doctor.id===event.doctor;});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DoctorCard,{imgUrl:currentDoctor===null||currentDoctor===void 0?void 0:currentDoctor.imgUrl,name:currentDoctor===null||currentDoctor===void 0?void 0:currentDoctor.name,speciality:currentDoctor===null||currentDoctor===void 0?void 0:currentDoctor.specifity,rating:currentDoctor===null||currentDoctor===void 0?void 0:currentDoctor.rating,date:event.date})},currentDoctor===null||currentDoctor===void 0?void 0:currentDoctor.id);})})})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/favoriteDoctors/FavoriteDoctorsCard/FavoritesDoctorsCard.tsx"],"names":["React","useEffect","useMemo","useState","useTranslation","DashboardCard","Carousel","DoctorCard","Dates","getUserCalendar","getDoctorsData","useAppSelector","S","BREAKPOINTS","NextArrow","props","className","style","onClick","display","PrevArrow","FavoritesDoctorsCard","t","doctors","setDoctors","calendar","setCalendar","user","state","today","getToday","then","res","id","pastEvents","filter","event","getDate","date","isBefore","length","breakpoint","settings","slidesToShow","xl","md","map","currentDoctor","find","doctor","imgUrl","name","specifity","rating"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardCard } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport { Carousel } from '@app/components/common/Carousel/Carousel';\nimport { DoctorCard } from '../DoctorCard/DoctorCard';\nimport { Dates } from '@app/constants/Dates';\nimport { CalendarEvent, getUserCalendar } from '@app/api/calendar.api';\nimport { Doctor, getDoctorsData } from '@app/api/doctors.api';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './FavoritesDoctorsCard.styles';\nimport { BREAKPOINTS } from '@app/styles/themes/constants';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst NextArrow = (props: any) => {\n  const { className, style, onClick } = props;\n  return <S.SliderArrow className={className} style={{ ...style, display: 'block' }} onClick={onClick} />;\n};\n\nconst PrevArrow = (props: any) => {\n  const { className, style, onClick } = props;\n  return <S.SliderArrow className={className} style={{ ...style, display: 'block' }} onClick={onClick} />;\n};\n\nexport const FavoritesDoctorsCard: React.FC = () => {\n  const { t } = useTranslation();\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [calendar, setCalendar] = useState<CalendarEvent[]>([]);\n\n  const user = useAppSelector((state) => state.user.user);\n\n  const today = Dates.getToday();\n\n  useEffect(() => {\n    getDoctorsData().then((res) => setDoctors(res));\n  }, []);\n\n  useEffect(() => {\n    user && getUserCalendar(user.id).then((res) => setCalendar(res));\n  }, [user]);\n\n  const pastEvents = useMemo(\n    () => calendar.filter((event) => Dates.getDate(event.date).isBefore(today)),\n    [calendar, today],\n  );\n\n  return (\n    <DashboardCard title={t('medical-dashboard.favoriteDoctors.title')} padding=\"0 20px\">\n      {doctors.length > 0 && calendar.length > 0 && (\n        <S.CarouselWrapper>\n          <Carousel\n            arrows={true}\n            nextArrow={<NextArrow />}\n            prevArrow={<PrevArrow />}\n            slidesToShow={4}\n            responsive={[\n              {\n                breakpoint: 1931,\n                settings: {\n                  slidesToShow: 3,\n                },\n              },\n              {\n                breakpoint: 1530,\n                settings: {\n                  slidesToShow: 2,\n                },\n              },\n              {\n                breakpoint: BREAKPOINTS.xl - 1,\n                settings: {\n                  slidesToShow: 4,\n                },\n              },\n              {\n                breakpoint: 1140,\n                settings: {\n                  slidesToShow: 3,\n                },\n              },\n              {\n                breakpoint: 920,\n                settings: {\n                  slidesToShow: 2,\n                },\n              },\n              {\n                breakpoint: BREAKPOINTS.md - 1,\n                settings: {\n                  slidesToShow: 3,\n                },\n              },\n              {\n                breakpoint: 720,\n                settings: {\n                  slidesToShow: 2,\n                },\n              },\n              {\n                breakpoint: 520,\n                settings: {\n                  slidesToShow: 1,\n                },\n              },\n            ]}\n          >\n            {pastEvents.map((event) => {\n              const currentDoctor = doctors.find((doctor) => doctor.id === event.doctor);\n\n              return (\n                <div key={currentDoctor?.id}>\n                  <DoctorCard\n                    imgUrl={currentDoctor?.imgUrl}\n                    name={currentDoctor?.name}\n                    speciality={currentDoctor?.specifity}\n                    rating={currentDoctor?.rating}\n                    date={event.date}\n                  />\n                </div>\n              );\n            })}\n          </Carousel>\n        </S.CarouselWrapper>\n      )}\n    </DashboardCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}