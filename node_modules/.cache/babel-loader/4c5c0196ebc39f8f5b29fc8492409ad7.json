{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/totalEarning/TotalEarning.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\nimport { NFTCard } from '@app/components/nft-dashboard/common/NFTCard/NFTCard';\nimport { TotalEarningChart } from '@app/components/nft-dashboard/totalEarning/TotalEarningChart/TotalEarningChart';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { getTotalEarning } from '@app/api/earnings.api';\nimport { Dates } from '@app/constants/Dates';\nimport { formatNumberWithCommas, getCurrencyPrice, getDifference } from '@app/utils/utils';\nimport * as S from './TotalEarning.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TotalEarning = function TotalEarning() {\n  _s();\n\n  var _totalEarning$total;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalEarning = _useState2[0],\n      setTotalEarning = _useState2[1];\n\n  var userId = useAppSelector(function (state) {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    userId && getTotalEarning(userId, 'USD').then(function (res) {\n      return setTotalEarning(res);\n    });\n  }, [userId]);\n\n  var _useMemo = useMemo(function () {\n    return {\n      totalEarningData: {\n        data: totalEarning ? totalEarning.timeline.map(function (item) {\n          return item.usd_value;\n        }) : []\n      },\n      days: totalEarning ? totalEarning.timeline.map(function (item) {\n        return Dates.getDate(item.date).format('L');\n      }) : []\n    };\n  }, [totalEarning]),\n      totalEarningData = _useMemo.totalEarningData,\n      days = _useMemo.days;\n\n  var isIncreased = Number(totalEarning === null || totalEarning === void 0 ? void 0 : totalEarning.total) > Number(totalEarning === null || totalEarning === void 0 ? void 0 : totalEarning.prevTotal);\n  return /*#__PURE__*/_jsxDEV(NFTCard, {\n    isSider: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [14, 14],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          wrap: false,\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(S.Title, {\n              level: 2,\n              children: t('nft.totalEarning')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(S.ValueText, {\n              $color: isIncreased ? 'success' : 'error',\n              children: [isIncreased ? /*#__PURE__*/_jsxDEV(CaretUpOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 32\n              }, _this) : /*#__PURE__*/_jsxDEV(CaretDownOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 54\n              }, _this), ' ', totalEarning && getDifference(totalEarning === null || totalEarning === void 0 ? void 0 : totalEarning.total, totalEarning === null || totalEarning === void 0 ? void 0 : totalEarning.prevTotal)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          wrap: false,\n          justify: \"space-between\",\n          gutter: [20, 20],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(S.Text, {\n              children: getCurrencyPrice(formatNumberWithCommas((_totalEarning$total = totalEarning === null || totalEarning === void 0 ? void 0 : totalEarning.total) !== null && _totalEarning$total !== void 0 ? _totalEarning$total : 0), 'USD')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 1,\n            children: /*#__PURE__*/_jsxDEV(TotalEarningChart, {\n              xAxisData: days,\n              earningData: totalEarningData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TotalEarning, \"jAkPuVUp4HHuAMtdv6ZQ0vcCvlQ=\", false, function () {\n  return [useAppSelector, useTranslation];\n});\n\n_c = TotalEarning;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalEarning\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/totalEarning/TotalEarning.tsx"],"names":["React","useEffect","useMemo","useState","Col","Row","useTranslation","CaretDownOutlined","CaretUpOutlined","NFTCard","TotalEarningChart","useAppSelector","getTotalEarning","Dates","formatNumberWithCommas","getCurrencyPrice","getDifference","S","TotalEarning","totalEarning","setTotalEarning","userId","state","user","id","t","then","res","totalEarningData","data","timeline","map","item","usd_value","days","getDate","date","format","isIncreased","Number","total","prevTotal"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\nimport { NFTCard } from '@app/components/nft-dashboard/common/NFTCard/NFTCard';\nimport { TotalEarningChart } from '@app/components/nft-dashboard/totalEarning/TotalEarningChart/TotalEarningChart';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { getTotalEarning, TotalEarning as ITotalEarning } from '@app/api/earnings.api';\nimport { Dates } from '@app/constants/Dates';\nimport { formatNumberWithCommas, getCurrencyPrice, getDifference } from '@app/utils/utils';\nimport * as S from './TotalEarning.styles';\n\nexport const TotalEarning: React.FC = () => {\n  const [totalEarning, setTotalEarning] = useState<ITotalEarning | null>(null);\n\n  const userId = useAppSelector((state) => state.user.user?.id);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    userId && getTotalEarning(userId, 'USD').then((res) => setTotalEarning(res));\n  }, [userId]);\n\n  const { totalEarningData, days } = useMemo(\n    () => ({\n      totalEarningData: {\n        data: totalEarning ? totalEarning.timeline.map((item) => item.usd_value) : [],\n      },\n      days: totalEarning ? totalEarning.timeline.map((item) => Dates.getDate(item.date).format('L')) : [],\n    }),\n    [totalEarning],\n  );\n\n  const isIncreased = Number(totalEarning?.total) > Number(totalEarning?.prevTotal);\n\n  return (\n    <NFTCard isSider>\n      <Row gutter={[14, 14]}>\n        <Col span={24}>\n          <Row wrap={false} justify=\"space-between\">\n            <Col>\n              <S.Title level={2}>{t('nft.totalEarning')}</S.Title>\n            </Col>\n\n            <Col>\n              <S.ValueText $color={isIncreased ? 'success' : 'error'}>\n                {isIncreased ? <CaretUpOutlined /> : <CaretDownOutlined />}{' '}\n                {totalEarning && getDifference(totalEarning?.total, totalEarning?.prevTotal)}\n              </S.ValueText>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Row wrap={false} justify=\"space-between\" gutter={[20, 20]}>\n            <Col>\n              <S.Text>{getCurrencyPrice(formatNumberWithCommas(totalEarning?.total ?? 0), 'USD')}</S.Text>\n            </Col>\n\n            <Col flex={1}>\n              <TotalEarningChart xAxisData={days} earningData={totalEarningData} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </NFTCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}