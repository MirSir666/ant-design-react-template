{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/nft-dashboard/Balance/Balance.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { NFTCard } from '@app/components/nft-dashboard/common/NFTCard/NFTCard';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport { getBalance } from '@app/api/earnings.api';\nimport * as S from './Balance.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Balance = function Balance() {\n  _s();\n  var _useState = useState({\n      usd_balance: 0,\n      eth_balance: 0,\n      btc_balance: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var userId = useAppSelector(function (state) {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.theme;\n    }),\n    theme = _useAppSelector.theme;\n  useEffect(function () {\n    userId && getBalance(userId).then(function (res) {\n      return setBalance(res);\n    });\n  }, [userId]);\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(S.TitleText, {\n        level: 2,\n        children: t('nft.yourBalance')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(NFTCard, {\n        isSider: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [30, 30],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [14, 14],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsxDEV(S.TitleBalanceText, {\n                  level: 3,\n                  children: getCurrencyPrice(formatNumberWithCommas(balance.usd_balance), 'USD')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: [55, 10],\n                  wrap: false,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(S.SubtitleBalanceText, {\n                      children: getCurrencyPrice(formatNumberWithCommas(balance.eth_balance), 'ETH')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(S.SubtitleBalanceText, {\n                      children: getCurrencyPrice(formatNumberWithCommas(balance.btc_balance), 'BTC')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(S.TopUpButton, {\n              type: theme === 'dark' ? 'ghost' : 'primary',\n              block: true,\n              children: t('nft.topUpBalance')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n_s(Balance, \"qcBZ4lFZK9S11cTEyIPG4ix8sQk=\", false, function () {\n  return [useAppSelector, useAppSelector, useTranslation];\n});\n_c = Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["React","useEffect","useState","Col","Row","useTranslation","NFTCard","useAppSelector","formatNumberWithCommas","getCurrencyPrice","getBalance","S","Balance","usd_balance","eth_balance","btc_balance","balance","setBalance","userId","state","user","id","theme","then","res","t"],"sources":["/workspace/ant-design-react-template/src/components/nft-dashboard/Balance/Balance.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { NFTCard } from '@app/components/nft-dashboard/common/NFTCard/NFTCard';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport { getBalance } from '@app/api/earnings.api';\nimport * as S from './Balance.styles';\n\nexport const Balance: React.FC = () => {\n  const [balance, setBalance] = useState({\n    usd_balance: 0,\n    eth_balance: 0,\n    btc_balance: 0,\n  });\n\n  const userId = useAppSelector((state) => state.user.user?.id);\n  const { theme } = useAppSelector((state) => state.theme);\n\n  useEffect(() => {\n    userId && getBalance(userId).then((res) => setBalance(res));\n  }, [userId]);\n\n  const { t } = useTranslation();\n\n  return (\n    <Row>\n      <Col span={24}>\n        <S.TitleText level={2}>{t('nft.yourBalance')}</S.TitleText>\n      </Col>\n\n      <Col span={24}>\n        <NFTCard isSider>\n          <Row gutter={[30, 30]}>\n            <Col span={24}>\n              <Row gutter={[14, 14]}>\n                <Col span={24}>\n                  <S.TitleBalanceText level={3}>\n                    {getCurrencyPrice(formatNumberWithCommas(balance.usd_balance), 'USD')}\n                  </S.TitleBalanceText>\n                </Col>\n\n                <Col span={24}>\n                  <Row gutter={[55, 10]} wrap={false}>\n                    <Col>\n                      <S.SubtitleBalanceText>\n                        {getCurrencyPrice(formatNumberWithCommas(balance.eth_balance), 'ETH')}\n                      </S.SubtitleBalanceText>\n                    </Col>\n\n                    <Col>\n                      <S.SubtitleBalanceText>\n                        {getCurrencyPrice(formatNumberWithCommas(balance.btc_balance), 'BTC')}\n                      </S.SubtitleBalanceText>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n\n            <Col span={24}>\n              <S.TopUpButton type={theme === 'dark' ? 'ghost' : 'primary'} block>\n                {t('nft.topUpBalance')}\n              </S.TopUpButton>\n            </Col>\n          </Row>\n        </NFTCard>\n      </Col>\n    </Row>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}