{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nimport { FONT_SIZE, FONT_WEIGHT, media } from '@app/styles/themes/constants';\nimport { Typography, Avatar as AntAvatar, Row } from 'antd';\nimport styled from 'styled-components';\nexport var ScreeningsRow = styled(Row)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n\\n  .ant-typography {\\n    font-weight: \", \";\\n  }\\n\"])), function (props) {\n  return props.$isActive ? FONT_WEIGHT.bold : FONT_WEIGHT.regular;\n});\nexport var Avatar = styled(AntAvatar)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  position: relative;\\n\\n  \", \"\\n\"])), function (props) {\n  return props.$isPrimary && \"border: 2px solid var(--primary-color)\" || props.$isSecondary && \"border 2px solid var(--error-color)\";\n});\nexport var Name = styled(Typography.Text)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  white-space: nowrap;\\n\\n  font-size: \", \";\\n\\n  font-weight: \", \";\\n\\n  color: \", \";\\n\\n  @media only screen and \", \" {\\n    font-size: \", \";\\n  }\\n\"])), FONT_SIZE.xs, FONT_WEIGHT.semibold, function (props) {\n  return props.$isPrimary && 'var(--primary-color)' || props.$isSecondary && 'var(--error-color)';\n}, media.xl, FONT_SIZE.md);\nexport var Percentage = styled(Typography.Text)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  font-size: \", \";\\n\\n  color: \", \";\\n\\n  @media only screen and \", \" {\\n    font-size: \", \";\\n  }\\n\"])), FONT_SIZE.xs, function (props) {\n  return props.$isDowngrade ? 'var(--error-color)' : 'var(--success-color)';\n}, media.xl, FONT_SIZE.md);","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/screeningsFriends/ScreeningsFriend/ScreeningsFriend.styles.ts"],"names":["FONT_SIZE","FONT_WEIGHT","media","Typography","Avatar","AntAvatar","Row","styled","ScreeningsRow","props","$isActive","bold","regular","$isPrimary","$isSecondary","Name","Text","xs","semibold","xl","md","Percentage","$isDowngrade"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,KAAjC,QAA8C,8BAA9C;AACA,SAASC,UAAT,EAAqBC,MAAM,IAAIC,SAA/B,EAA0CC,GAA1C,QAAqD,MAArD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAeA,OAAO,IAAMC,aAAa,GAAGD,MAAM,CAACD,GAAD,CAAT,8KAKP,UAACG,KAAD;AAAA,SAAYA,KAAK,CAACC,SAAN,GAAkBT,WAAW,CAACU,IAA9B,GAAqCV,WAAW,CAACW,OAA7D;AAAA,CALO,CAAnB;AASP,OAAO,IAAMR,MAAM,GAAGG,MAAM,CAACF,SAAD,CAAT,2GAGf,UAACI,KAAD;AAAA,SACCA,KAAK,CAACI,UAAN,4CAAD,IACCJ,KAAK,CAACK,YAAN,yCAFD;AAAA,CAHe,CAAZ;AAQP,OAAO,IAAMC,IAAI,GAAGR,MAAM,CAACJ,UAAU,CAACa,IAAZ,CAAT,gOAGFhB,SAAS,CAACiB,EAHR,EAKAhB,WAAW,CAACiB,QALZ,EAON,UAACT,KAAD;AAAA,SAAYA,KAAK,CAACI,UAAN,IAAoB,sBAArB,IAAiDJ,KAAK,CAACK,YAAN,IAAsB,oBAAlF;AAAA,CAPM,EASUZ,KAAK,CAACiB,EAThB,EAUAnB,SAAS,CAACoB,EAVV,CAAV;AAcP,OAAO,IAAMC,UAAU,GAAGd,MAAM,CAACJ,UAAU,CAACa,IAAZ,CAAT,8KACRhB,SAAS,CAACiB,EADF,EAGZ,UAACR,KAAD;AAAA,SAAYA,KAAK,CAACa,YAAN,GAAqB,oBAArB,GAA4C,sBAAxD;AAAA,CAHY,EAKIpB,KAAK,CAACiB,EALV,EAMNnB,SAAS,CAACoB,EANJ,CAAhB","sourcesContent":["import { FONT_SIZE, FONT_WEIGHT, media } from '@app/styles/themes/constants';\nimport { Typography, Avatar as AntAvatar, Row } from 'antd';\nimport styled from 'styled-components';\n\ninterface ScreeningsRowProps {\n  $isActive: boolean;\n}\n\ninterface PercentageProps {\n  $isDowngrade: boolean;\n}\n\ninterface Importance {\n  $isPrimary: boolean;\n  $isSecondary: boolean;\n}\n\nexport const ScreeningsRow = styled(Row)<ScreeningsRowProps>`\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  .ant-typography {\n    font-weight: ${(props) => (props.$isActive ? FONT_WEIGHT.bold : FONT_WEIGHT.regular)};\n  }\n`;\n\nexport const Avatar = styled(AntAvatar)<Importance>`\n  position: relative;\n\n  ${(props) =>\n    (props.$isPrimary && `border: 2px solid var(--primary-color)`) ||\n    (props.$isSecondary && `border 2px solid var(--error-color)`)}\n`;\n\nexport const Name = styled(Typography.Text)<Importance>`\n  white-space: nowrap;\n\n  font-size: ${FONT_SIZE.xs};\n\n  font-weight: ${FONT_WEIGHT.semibold};\n\n  color: ${(props) => (props.$isPrimary && 'var(--primary-color)') || (props.$isSecondary && 'var(--error-color)')};\n\n  @media only screen and ${media.xl} {\n    font-size: ${FONT_SIZE.md};\n  }\n`;\n\nexport const Percentage = styled(Typography.Text)<PercentageProps>`\n  font-size: ${FONT_SIZE.xs};\n\n  color: ${(props) => (props.$isDowngrade ? 'var(--error-color)' : 'var(--success-color)')};\n\n  @media only screen and ${media.xl} {\n    font-size: ${FONT_SIZE.md};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}