{"ast":null,"code":"import _defineProperty from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useMemo,useState}from'react';import{Col,Row}from'antd';import{useTranslation}from'react-i18next';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{TwoFactorOptions}from'@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions';import{TwoFactorSwitch}from'@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch';import{Button}from'@app/components/common/buttons/Button/Button';import{SecurityCodeForm}from'@app/components/auth/SecurityCodeForm/SecurityCodeForm';import{notificationController}from'@app/controllers/notificationController';import{setUser}from'@app/store/slices/userSlice';import{useAppDispatch,useAppSelector}from'@app/hooks/reduxHooks';import*as S from'./TwoFactorAuth.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var TwoFactorAuth=function TwoFactorAuth(){var user=useAppSelector(function(state){return state.user.user;});var isNeedToShowVerifyBtn=useMemo(function(){return(user===null||user===void 0?void 0:user.email.name)&&!(user!==null&&user!==void 0&&user.email.verified)||(user===null||user===void 0?void 0:user.phone.number)&&!(user!==null&&user!==void 0&&user.phone.verified);},[user]);var _useState=useState(Boolean(isNeedToShowVerifyBtn)),_useState2=_slicedToArray(_useState,2),isFieldsChanged=_useState2[0],setFieldsChanged=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(Boolean((user===null||user===void 0?void 0:user.email.verified)||(user===null||user===void 0?void 0:user.phone.verified))),_useState6=_slicedToArray(_useState5,2),isEnabled=_useState6[0],setEnabled=_useState6[1];var _useState7=useState('email'),_useState8=_slicedToArray(_useState7,2),selectedOption=_useState8[0],setSelectedOption=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isClickedVerify=_useState10[0],setClickedVerify=_useState10[1];var dispatch=useAppDispatch();var _useTranslation=useTranslation(),t=_useTranslation.t;var onClickVerify=function onClickVerify(){setClickedVerify(true);};var onVerify=useCallback(function(){if(user&&selectedOption){setLoading(false);setFieldsChanged(false);setClickedVerify(false);notificationController.success({message:t('common.success')});var newUser=_objectSpread(_objectSpread({},user),{},_defineProperty({},selectedOption,_objectSpread(_objectSpread({},user[selectedOption]),{},{verified:true})));dispatch(setUser(newUser));}},[dispatch,selectedOption,t,user]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(BaseButtonsForm,{name:\"twoFactorAuth\",requiredMark:\"optional\",isFieldsChanged:isFieldsChanged,onFieldsChange:function onFieldsChange(){return setFieldsChanged(true);},initialValues:{email:user===null||user===void 0?void 0:user.email.name,phone:user===null||user===void 0?void 0:user.phone.number},footer:isEnabled&&/*#__PURE__*/_jsx(Button,{type:\"link\",loading:isLoading,htmlType:\"submit\",children:t('profile.nav.securitySettings.verify')})||/*#__PURE__*/_jsx(\"span\",{}),onFinish:onClickVerify,children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(TwoFactorSwitch,{isEnabled:isEnabled,setEnabled:setEnabled})}),isEnabled&&/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(TwoFactorOptions,{selectedOption:selectedOption,setSelectedOption:setSelectedOption})})]})}),/*#__PURE__*/_jsx(S.AuthModal,{destroyOnClose:true,visible:isClickedVerify,footer:false,closable:false,onCancel:function onCancel(){return setClickedVerify(false);},children:/*#__PURE__*/_jsx(SecurityCodeForm,{onBack:function onBack(){return setClickedVerify(false);},onFinish:onVerify})})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorAuth.tsx"],"names":["React","useCallback","useMemo","useState","Col","Row","useTranslation","BaseButtonsForm","TwoFactorOptions","TwoFactorSwitch","Button","SecurityCodeForm","notificationController","setUser","useAppDispatch","useAppSelector","S","TwoFactorAuth","user","state","isNeedToShowVerifyBtn","email","name","verified","phone","number","Boolean","isFieldsChanged","setFieldsChanged","isLoading","setLoading","isEnabled","setEnabled","selectedOption","setSelectedOption","isClickedVerify","setClickedVerify","dispatch","t","onClickVerify","onVerify","success","message","newUser"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { TwoFactorOptions } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorOptions/TwoFactorOptions';\nimport { TwoFactorSwitch } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/twoFactorAuth/TwoFactorSwitch/TwoFactorSwitch';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { SecurityCodeForm } from '@app/components/auth/SecurityCodeForm/SecurityCodeForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { setUser } from '@app/store/slices/userSlice';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { TwoFactorAuthOption } from '@app/interfaces/interfaces';\nimport * as S from './TwoFactorAuth.styles';\n\nexport interface CurrentOption {\n  value: 'phone' | 'email';\n  isVerified: boolean;\n}\n\nexport type TwoFactorAuthOptionState = TwoFactorAuthOption | null;\n\nexport const TwoFactorAuth: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const isNeedToShowVerifyBtn = useMemo(\n    () => (user?.email.name && !user?.email.verified) || (user?.phone.number && !user?.phone.verified),\n    [user],\n  );\n\n  const [isFieldsChanged, setFieldsChanged] = useState(Boolean(isNeedToShowVerifyBtn));\n  const [isLoading, setLoading] = useState(false);\n\n  const [isEnabled, setEnabled] = useState(Boolean(user?.email.verified || user?.phone.verified));\n  const [selectedOption, setSelectedOption] = useState<TwoFactorAuthOptionState>('email');\n  const [isClickedVerify, setClickedVerify] = useState(false);\n\n  const dispatch = useAppDispatch();\n\n  const { t } = useTranslation();\n\n  const onClickVerify = () => {\n    setClickedVerify(true);\n  };\n\n  const onVerify = useCallback(() => {\n    if (user && selectedOption) {\n      setLoading(false);\n      setFieldsChanged(false);\n      setClickedVerify(false);\n      notificationController.success({ message: t('common.success') });\n\n      const newUser = { ...user, [selectedOption]: { ...user[selectedOption], verified: true } };\n\n      dispatch(setUser(newUser));\n    }\n  }, [dispatch, selectedOption, t, user]);\n\n  return (\n    <>\n      <BaseButtonsForm\n        name=\"twoFactorAuth\"\n        requiredMark=\"optional\"\n        isFieldsChanged={isFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        initialValues={{\n          email: user?.email.name,\n          phone: user?.phone.number,\n        }}\n        footer={\n          (isEnabled && (\n            <Button type=\"link\" loading={isLoading} htmlType=\"submit\">\n              {t('profile.nav.securitySettings.verify')}\n            </Button>\n          )) || <span />\n        }\n        onFinish={onClickVerify}\n      >\n        <Row>\n          <Col span={24}>\n            <TwoFactorSwitch isEnabled={isEnabled} setEnabled={setEnabled} />\n          </Col>\n\n          {isEnabled && (\n            <Col span={24}>\n              <TwoFactorOptions selectedOption={selectedOption} setSelectedOption={setSelectedOption} />\n            </Col>\n          )}\n        </Row>\n      </BaseButtonsForm>\n      <S.AuthModal\n        destroyOnClose\n        visible={isClickedVerify}\n        footer={false}\n        closable={false}\n        onCancel={() => setClickedVerify(false)}\n      >\n        <SecurityCodeForm onBack={() => setClickedVerify(false)} onFinish={onVerify} />\n      </S.AuthModal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}