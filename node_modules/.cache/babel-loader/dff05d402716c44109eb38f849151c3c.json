{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/utils/utils.tsx\",\n  _this = this;\nimport { Col, Row } from 'antd';\nimport { Priority } from '@app//constants/enums/priorities';\nimport { ReactComponent as ETHIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@app/assets/icons/eth.svg\";\nimport { ReactComponent as BTCIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!@app/assets/icons/btc.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var camelize = function camelize(string) {\n  return string.split(' ').map(function (word, index) {\n    return index === 0 ? word.toLowerCase() : word[0].toUpperCase() + word.slice(1);\n  }).join('');\n};\nexport var getCurrencyPrice = function getCurrencyPrice(price, currency) {\n  var isIcon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  switch (currency) {\n    case 'USD':\n      {\n        return isIcon ? \"$\".concat(price) : \"\".concat(price, \" USD\");\n      }\n    case 'BTC':\n      {\n        return isIcon ? /*#__PURE__*/_jsxDEV(Row, {\n          align: \"middle\",\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(BTCIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            children: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, _this) : \"\".concat(price, \" BTC\");\n      }\n    case 'ETH':\n      {\n        return isIcon ? /*#__PURE__*/_jsxDEV(Row, {\n          align: \"middle\",\n          gutter: [8, 8],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(ETHIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            children: price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, _this) : \"\".concat(price, \" ETH\");\n      }\n    default:\n      {\n        return isIcon ? \"$\".concat(price) : \"\".concat(price, \" USD\");\n      }\n  }\n};\nexport var getMarkAreaData = function getMarkAreaData(data) {\n  return data.map(function (el, index) {\n    return [{\n      xAxis: 2 * index\n    }, {\n      xAxis: 2 * index + 1\n    }];\n  });\n};\nexport var capitalize = function capitalize(word) {\n  return \"\".concat(word[0].toUpperCase()).concat(word.slice(1));\n};\nexport var hexToRGB = function hexToRGB(hex) {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n  return \"\".concat(r, \", \").concat(g, \", \").concat(b);\n};\nexport var getDifference = function getDifference(value, prevValue) {\n  return prevValue !== 0 ? \"\".concat((Math.abs(value - prevValue) / prevValue * 100).toFixed(0), \"%\") : '100%';\n};\nexport var normalizeProp = function normalizeProp(prop) {\n  return typeof prop === 'number' ? \"\".concat(prop, \"px\") : Array.isArray(prop) && \"\".concat(prop[0], \"px \").concat(prop[1], \"px\") || prop.toString();\n};\nexport var defineColorByPriority = function defineColorByPriority(priority) {\n  switch (priority) {\n    case Priority.INFO:\n      return 'var(--primary-color)';\n    case Priority.LOW:\n      return 'var(--success-color)';\n    case Priority.MEDIUM:\n      return 'var(--warning-color)';\n    case Priority.HIGH:\n      return 'var(--error-color)';\n    default:\n      return 'var(--success-color)';\n  }\n};\nexport var defineColorBySeverity = function defineColorBySeverity(severity) {\n  var rgb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var postfix = rgb ? 'rgb-color' : 'color';\n  switch (severity) {\n    case 'error':\n    case 'warning':\n    case 'success':\n      return \"var(--\".concat(severity, \"-\").concat(postfix, \")\");\n    case 'info':\n    default:\n      return \"var(--primary-\".concat(postfix, \")\");\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport var mergeBy = function mergeBy(a, b, key) {\n  return a.filter(function (elem) {\n    return !b.find(function (subElem) {\n      return subElem[key] === elem[key];\n    });\n  }).concat(b);\n};\nexport var getSmoothRandom = function getSmoothRandom(factor, start) {\n  var halfEnvelope = 1 / factor / 2;\n  var max = Math.min(1, start + halfEnvelope);\n  var min = Math.max(0, start - halfEnvelope);\n  return Math.random() * (max - min) + min;\n};\nexport var shadeColor = function shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n  R = parseInt((R * (100 + percent) / 100).toString());\n  G = parseInt((G * (100 + percent) / 100).toString());\n  B = parseInt((B * (100 + percent) / 100).toString());\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n  var RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n  return '#' + RR + GG + BB;\n};\nexport var hexToHSL = function hexToHSL(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (result) {\n    var r = parseInt(result[1], 16);\n    var g = parseInt(result[2], 16);\n    var b = parseInt(result[3], 16);\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h, s;\n    var l = (max + min) / 2;\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        default:\n          h = 0;\n      }\n      h /= 6;\n    }\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  } else {\n    throw new Error('Non valid HEX color');\n  }\n};\nexport var formatNumberWithCommas = function formatNumberWithCommas(value) {\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};","map":{"version":3,"names":["Col","Row","Priority","camelize","string","split","map","word","index","toLowerCase","toUpperCase","slice","join","getCurrencyPrice","price","currency","isIcon","display","getMarkAreaData","data","el","xAxis","capitalize","hexToRGB","hex","r","parseInt","g","b","getDifference","value","prevValue","Math","abs","toFixed","normalizeProp","prop","Array","isArray","toString","defineColorByPriority","priority","INFO","LOW","MEDIUM","HIGH","defineColorBySeverity","severity","rgb","postfix","mergeBy","a","key","filter","elem","find","subElem","concat","getSmoothRandom","factor","start","halfEnvelope","max","min","random","shadeColor","color","percent","R","substring","G","B","RR","length","GG","BB","hexToHSL","result","exec","h","s","l","d","Error","formatNumberWithCommas","replace"],"sources":["/workspace/ant-design-react-template/src/utils/utils.tsx"],"sourcesContent":["import { Col, Row } from 'antd';\nimport { NotificationType } from '@app/components/common/Notification/Notification';\nimport { CurrencyType } from '@app/interfaces/interfaces';\nimport { Priority } from '@app//constants/enums/priorities';\nimport { ReactComponent as ETHIcon } from '@app/assets/icons/eth.svg';\nimport { ReactComponent as BTCIcon } from '@app/assets/icons/btc.svg';\n\nexport const camelize = (string: string): string => {\n  return string\n    .split(' ')\n    .map((word, index) => (index === 0 ? word.toLowerCase() : word[0].toUpperCase() + word.slice(1)))\n    .join('');\n};\n\nexport const getCurrencyPrice = (\n  price: number | string,\n  currency: CurrencyType,\n  isIcon = true,\n): string | React.ReactNode => {\n  switch (currency) {\n    case 'USD': {\n      return isIcon ? `$${price}` : `${price} USD`;\n    }\n\n    case 'BTC': {\n      return isIcon ? (\n        <Row align=\"middle\" gutter={[8, 8]}>\n          <Col style={{ display: 'flex' }}>\n            <BTCIcon />\n          </Col>\n\n          <Col>{price}</Col>\n        </Row>\n      ) : (\n        `${price} BTC`\n      );\n    }\n\n    case 'ETH': {\n      return isIcon ? (\n        <Row align=\"middle\" gutter={[8, 8]}>\n          <Col style={{ display: 'flex' }}>\n            <ETHIcon />\n          </Col>\n\n          <Col>{price}</Col>\n        </Row>\n      ) : (\n        `${price} ETH`\n      );\n    }\n\n    default: {\n      return isIcon ? `$${price}` : `${price} USD`;\n    }\n  }\n};\n\ntype MarkArea = {\n  xAxis: number;\n};\n\nexport const getMarkAreaData = (data: string[] | number[]): MarkArea[][] =>\n  data.map((el, index) => [\n    {\n      xAxis: 2 * index,\n    },\n    {\n      xAxis: 2 * index + 1,\n    },\n  ]);\n\nexport const capitalize = (word: string): string => `${word[0].toUpperCase()}${word.slice(1)}`;\n\nexport const hexToRGB = (hex: string): string => {\n  const r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  return `${r}, ${g}, ${b}`;\n};\n\nexport const getDifference = (value: number, prevValue: number): string | null =>\n  prevValue !== 0 ? `${((Math.abs(value - prevValue) / prevValue) * 100).toFixed(0)}%` : '100%';\n\nexport const normalizeProp = (prop: string | number | [number, number]): string =>\n  typeof prop === 'number' ? `${prop}px` : (Array.isArray(prop) && `${prop[0]}px ${prop[1]}px`) || prop.toString();\n\nexport const defineColorByPriority = (priority: Priority): string => {\n  switch (priority) {\n    case Priority.INFO:\n      return 'var(--primary-color)';\n    case Priority.LOW:\n      return 'var(--success-color)';\n    case Priority.MEDIUM:\n      return 'var(--warning-color)';\n    case Priority.HIGH:\n      return 'var(--error-color)';\n    default:\n      return 'var(--success-color)';\n  }\n};\n\nexport const defineColorBySeverity = (severity: NotificationType | undefined, rgb = false): string => {\n  const postfix = rgb ? 'rgb-color' : 'color';\n  switch (severity) {\n    case 'error':\n    case 'warning':\n    case 'success':\n      return `var(--${severity}-${postfix})`;\n    case 'info':\n    default:\n      return `var(--primary-${postfix})`;\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeBy = (a: any[], b: any[], key: string): any[] =>\n  a.filter((elem) => !b.find((subElem) => subElem[key] === elem[key])).concat(b);\n\nexport const getSmoothRandom = (factor: number, start: number): number => {\n  const halfEnvelope = 1 / factor / 2;\n  const max = Math.min(1, start + halfEnvelope);\n  const min = Math.max(0, start - halfEnvelope);\n\n  return Math.random() * (max - min) + min;\n};\n\nexport const shadeColor = (color: string, percent: number): string => {\n  let R = parseInt(color.substring(1, 3), 16);\n  let G = parseInt(color.substring(3, 5), 16);\n  let B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt(((R * (100 + percent)) / 100).toString());\n  G = parseInt(((G * (100 + percent)) / 100).toString());\n  B = parseInt(((B * (100 + percent)) / 100).toString());\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  const RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n  const GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n  const BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n\n  return '#' + RR + GG + BB;\n};\n\nexport const hexToHSL = (hex: string): { h: number; s: number; l: number } => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  if (result) {\n    let r = parseInt(result[1], 16);\n    let g = parseInt(result[2], 16);\n    let b = parseInt(result[3], 16);\n    (r /= 255), (g /= 255), (b /= 255);\n    const max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    let h, s;\n    const l = (max + min) / 2;\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        default:\n          h = 0;\n      }\n      h /= 6;\n    }\n    return {\n      h,\n      s,\n      l,\n    };\n  } else {\n    throw new Error('Non valid HEX color');\n  }\n};\n\nexport const formatNumberWithCommas = (value: number): string => {\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}