{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectDestructuringEmpty from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/settingsOverlay/SettingsOverlay/SettingsOverlay.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DropdownCollapse } from '@app/components/header/Header.styles';\nimport { useTranslation } from 'react-i18next';\nimport { LanguagePicker } from '../LanguagePicker/LanguagePicker';\nimport { NightModeSettings } from '../nightModeSettings/NightModeSettings';\nimport { ThemePicker } from '../ThemePicker/ThemePicker';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './SettingsOverlay.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var SettingsOverlay = function SettingsOverlay(_ref) {\n  _s();\n  var props = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useAppSelector = useAppSelector(function (state) {\n      return state.pwa;\n    }),\n    isPWASupported = _useAppSelector.isPWASupported,\n    event = _useAppSelector.event;\n  return /*#__PURE__*/_jsxDEV(S.SettingsOverlayMenu, _objectSpread(_objectSpread({\n    mode: \"inline\",\n    selectable: false\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownCollapse, {\n      bordered: false,\n      expandIconPosition: \"right\",\n      ghost: true,\n      defaultActiveKey: \"themePicker\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownCollapse.Panel, {\n        header: t('header.changeLanguage'),\n        children: /*#__PURE__*/_jsxDEV(LanguagePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this)\n      }, \"languagePicker\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DropdownCollapse.Panel, {\n        header: t('header.changeTheme'),\n        children: /*#__PURE__*/_jsxDEV(ThemePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)\n      }, \"themePicker\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DropdownCollapse.Panel, {\n        header: t('header.nightMode.title'),\n        children: /*#__PURE__*/_jsxDEV(NightModeSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)\n      }, \"nightMode\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), isPWASupported && /*#__PURE__*/_jsxDEV(S.PwaInstallWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        type: \"primary\",\n        onClick: function onClick() {\n          return event && event.prompt();\n        },\n        children: t('common.pwa')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n_s(SettingsOverlay, \"KJVv6ShkKmvdM2ZdwaaHQDQ7ooM=\", false, function () {\n  return [useTranslation, useAppSelector];\n});\n_c = SettingsOverlay;\nvar _c;\n$RefreshReg$(_c, \"SettingsOverlay\");","map":{"version":3,"names":["React","DropdownCollapse","useTranslation","LanguagePicker","NightModeSettings","ThemePicker","Button","useAppSelector","S","SettingsOverlay","props","t","state","pwa","isPWASupported","event","prompt"],"sources":["/workspace/ant-design-react-template/src/components/header/components/settingsDropdown/settingsOverlay/SettingsOverlay/SettingsOverlay.tsx"],"sourcesContent":["import React from 'react';\nimport { DropdownCollapse } from '@app/components/header/Header.styles';\nimport { useTranslation } from 'react-i18next';\nimport { LanguagePicker } from '../LanguagePicker/LanguagePicker';\nimport { NightModeSettings } from '../nightModeSettings/NightModeSettings';\nimport { ThemePicker } from '../ThemePicker/ThemePicker';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport * as S from './SettingsOverlay.styles';\n\nexport const SettingsOverlay: React.FC = ({ ...props }) => {\n  const { t } = useTranslation();\n\n  const { isPWASupported, event } = useAppSelector((state) => state.pwa);\n\n  return (\n    <S.SettingsOverlayMenu mode=\"inline\" selectable={false} {...props}>\n      <DropdownCollapse bordered={false} expandIconPosition=\"right\" ghost defaultActiveKey=\"themePicker\">\n        <DropdownCollapse.Panel header={t('header.changeLanguage')} key=\"languagePicker\">\n          <LanguagePicker />\n        </DropdownCollapse.Panel>\n        <DropdownCollapse.Panel header={t('header.changeTheme')} key=\"themePicker\">\n          <ThemePicker />\n        </DropdownCollapse.Panel>\n        <DropdownCollapse.Panel header={t('header.nightMode.title')} key=\"nightMode\">\n          <NightModeSettings />\n        </DropdownCollapse.Panel>\n      </DropdownCollapse>\n      {isPWASupported && (\n        <S.PwaInstallWrapper>\n          <Button block type=\"primary\" onClick={() => event && (event as BeforeInstallPromptEvent).prompt()}>\n            {t('common.pwa')}\n          </Button>\n        </S.PwaInstallWrapper>\n      )}\n    </S.SettingsOverlayMenu>\n  );\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,iBAAiB,QAAQ,wCAAwC;AAC1E,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,MAAM,QAAQ,8CAA8C;AACrE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAO,KAAKC,CAAC,MAAM,0BAA0B;AAAC;AAE9C,OAAO,IAAMC,eAAyB,GAAG,SAA5BA,eAAyB,OAAqB;EAAA;EAAA,IAAZC,KAAK;EAClD,sBAAcR,cAAc,EAAE;IAAtBS,CAAC,mBAADA,CAAC;EAET,sBAAkCJ,cAAc,CAAC,UAACK,KAAK;MAAA,OAAKA,KAAK,CAACC,GAAG;IAAA,EAAC;IAA9DC,cAAc,mBAAdA,cAAc;IAAEC,KAAK,mBAALA,KAAK;EAE7B,oBACE,QAAC,CAAC,CAAC,mBAAmB;IAAC,IAAI,EAAC,QAAQ;IAAC,UAAU,EAAE;EAAM,GAAKL,KAAK;IAAA,wBAC/D,QAAC,gBAAgB;MAAC,QAAQ,EAAE,KAAM;MAAC,kBAAkB,EAAC,OAAO;MAAC,KAAK;MAAC,gBAAgB,EAAC,aAAa;MAAA,wBAChG,QAAC,gBAAgB,CAAC,KAAK;QAAC,MAAM,EAAEC,CAAC,CAAC,uBAAuB,CAAE;QAAA,uBACzD,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA;MAAG,GAD4C,gBAAgB;QAAA;QAAA;QAAA;MAAA,SAEvD,eACzB,QAAC,gBAAgB,CAAC,KAAK;QAAC,MAAM,EAAEA,CAAC,CAAC,oBAAoB,CAAE;QAAA,uBACtD,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA;MAAG,GAD4C,aAAa;QAAA;QAAA;QAAA;MAAA,SAEjD,eACzB,QAAC,gBAAgB,CAAC,KAAK;QAAC,MAAM,EAAEA,CAAC,CAAC,wBAAwB,CAAE;QAAA,uBAC1D,QAAC,iBAAiB;UAAA;UAAA;UAAA;QAAA;MAAG,GAD0C,WAAW;QAAA;QAAA;QAAA;MAAA,SAEnD;IAAA;MAAA;MAAA;MAAA;IAAA,SACR,EAClBG,cAAc,iBACb,QAAC,CAAC,CAAC,iBAAiB;MAAA,uBAClB,QAAC,MAAM;QAAC,KAAK;QAAC,IAAI,EAAC,SAAS;QAAC,OAAO,EAAE;UAAA,OAAMC,KAAK,IAAKA,KAAK,CAA8BC,MAAM,EAAE;QAAA,CAAC;QAAA,UAC/FL,CAAC,CAAC,YAAY;MAAC;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA,SAEZ;EAAA;IAAA;IAAA;IAAA;EAAA,SACqB;AAE5B,CAAC;AAAC,GA3BWF,eAAyB;EAAA,QACtBP,cAAc,EAEMK,cAAc;AAAA;AAAA,KAHrCE,eAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}