{"ast":null,"code":"import React from'react';import{useTranslation}from'react-i18next';import{Col,Row}from'antd';import{TwitterOutlined}from'@ant-design/icons';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{ClipboardInput}from'components/common/inputs/ClipboardInput/ClipboardInput';import{OpenURLInput}from'@app/components/common/inputs/OpenURLInput/OpenURLInput';import{LinkedinIcon}from'@app/components/common/icons/LinkedinIcon';import{FacebookIcon}from'@app/components/common/icons/FacebookIcon';import{websitePattern}from'@app/constants/patterns';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SocialLinksItem=function SocialLinksItem(){var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(BaseButtonsForm.Item,{label:t('profile.nav.personalInfo.socialLinks'),children:/*#__PURE__*/_jsxs(Row,{gutter:[20,0],children:[/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsx(BaseButtonsForm.Item,{shouldUpdate:true,children:function children(_ref){var getFieldValue=_ref.getFieldValue;var twitter=getFieldValue('twitter');return/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(BaseButtonsForm.Item,{name:\"twitter\",children:/*#__PURE__*/_jsx(ClipboardInput,{valueToCopy:twitter,addonBefore:/*#__PURE__*/_jsx(TwitterOutlined,{})})})});}})}),/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsx(BaseButtonsForm.Item,{shouldUpdate:true,children:function children(_ref2){var getFieldValue=_ref2.getFieldValue;var linkedin=getFieldValue('linkedin');return/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(BaseButtonsForm.Item,{name:\"linkedin\",rules:[{pattern:new RegExp(websitePattern),message:t('profile.nav.personalInfo.notValidWebsite')}],children:/*#__PURE__*/_jsx(OpenURLInput,{href:linkedin,target:\"_blank\",addonBefore:/*#__PURE__*/_jsx(LinkedinIcon,{})})})});}})}),/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsx(BaseButtonsForm.Item,{shouldUpdate:true,children:function children(_ref3){var getFieldValue=_ref3.getFieldValue;var facebook=getFieldValue('facebook');return/*#__PURE__*/_jsxs(\"label\",{children:[' ',/*#__PURE__*/_jsx(BaseButtonsForm.Item,{name:\"facebook\",rules:[{pattern:new RegExp(websitePattern),message:t('profile.nav.personalInfo.notValidWebsite')}],children:/*#__PURE__*/_jsx(OpenURLInput,{href:facebook,target:\"_blank\",addonBefore:/*#__PURE__*/_jsx(FacebookIcon,{})})})]});}})})]})});};","map":{"version":3,"names":["React","useTranslation","Col","Row","TwitterOutlined","BaseButtonsForm","ClipboardInput","OpenURLInput","LinkedinIcon","FacebookIcon","websitePattern","SocialLinksItem","t","getFieldValue","twitter","linkedin","pattern","RegExp","message","facebook"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/PersonalInfo/SocialLinksItem/SocialLinksItem.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { TwitterOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { ClipboardInput } from 'components/common/inputs/ClipboardInput/ClipboardInput';\nimport { OpenURLInput } from '@app/components/common/inputs/OpenURLInput/OpenURLInput';\nimport { LinkedinIcon } from '@app/components/common/icons/LinkedinIcon';\nimport { FacebookIcon } from '@app/components/common/icons/FacebookIcon';\nimport { websitePattern } from '@app/constants/patterns';\n\nexport const SocialLinksItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item label={t('profile.nav.personalInfo.socialLinks')}>\n      <Row gutter={[20, 0]}>\n        <Col xs={24} md={12}>\n          <BaseButtonsForm.Item shouldUpdate>\n            {({ getFieldValue }) => {\n              const twitter = getFieldValue('twitter');\n\n              return (\n                <label>\n                  <BaseButtonsForm.Item name=\"twitter\">\n                    <ClipboardInput valueToCopy={twitter} addonBefore={<TwitterOutlined />} />\n                  </BaseButtonsForm.Item>\n                </label>\n              );\n            }}\n          </BaseButtonsForm.Item>\n        </Col>\n        <Col xs={24} md={12}>\n          <BaseButtonsForm.Item shouldUpdate>\n            {({ getFieldValue }) => {\n              const linkedin = getFieldValue('linkedin');\n\n              return (\n                <label>\n                  <BaseButtonsForm.Item\n                    name=\"linkedin\"\n                    rules={[\n                      {\n                        pattern: new RegExp(websitePattern),\n                        message: t('profile.nav.personalInfo.notValidWebsite'),\n                      },\n                    ]}\n                  >\n                    <OpenURLInput href={linkedin} target=\"_blank\" addonBefore={<LinkedinIcon />} />\n                  </BaseButtonsForm.Item>\n                </label>\n              );\n            }}\n          </BaseButtonsForm.Item>\n        </Col>\n        <Col xs={24} md={12}>\n          <BaseButtonsForm.Item shouldUpdate>\n            {({ getFieldValue }) => {\n              const facebook = getFieldValue('facebook');\n\n              return (\n                <label>\n                  {' '}\n                  <BaseButtonsForm.Item\n                    name=\"facebook\"\n                    rules={[\n                      {\n                        pattern: new RegExp(websitePattern),\n                        message: t('profile.nav.personalInfo.notValidWebsite'),\n                      },\n                    ]}\n                  >\n                    <OpenURLInput href={facebook} target=\"_blank\" addonBefore={<FacebookIcon />} />\n                  </BaseButtonsForm.Item>\n                </label>\n              );\n            }}\n          </BaseButtonsForm.Item>\n        </Col>\n      </Row>\n    </BaseButtonsForm.Item>\n  );\n};\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,GAAG,CAAEC,GAAG,KAAQ,MAAM,CAC/B,OAASC,eAAe,KAAQ,mBAAmB,CACnD,OAASC,eAAe,KAAQ,8DAA8D,CAC9F,OAASC,cAAc,KAAQ,wDAAwD,CACvF,OAASC,YAAY,KAAQ,yDAAyD,CACtF,OAASC,YAAY,KAAQ,2CAA2C,CACxE,OAASC,YAAY,KAAQ,2CAA2C,CACxE,OAASC,cAAc,KAAQ,yBAAyB,CAAC,wFAEzD,MAAO,IAAMC,gBAAyB,CAAG,QAA5BA,gBAAyB,EAAS,CAC7C,oBAAcV,cAAc,EAAE,CAAtBW,CAAC,iBAADA,CAAC,CAET,mBACE,KAAC,eAAe,CAAC,IAAI,EAAC,KAAK,CAAEA,CAAC,CAAC,sCAAsC,CAAE,uBACrE,MAAC,GAAG,EAAC,MAAM,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE,wBACnB,KAAC,GAAG,EAAC,EAAE,CAAE,EAAG,CAAC,EAAE,CAAE,EAAG,uBAClB,KAAC,eAAe,CAAC,IAAI,EAAC,YAAY,eAC/B,uBAAuB,IAApBC,cAAa,MAAbA,aAAa,CACf,GAAMC,QAAO,CAAGD,aAAa,CAAC,SAAS,CAAC,CAExC,mBACE,oCACE,KAAC,eAAe,CAAC,IAAI,EAAC,IAAI,CAAC,SAAS,uBAClC,KAAC,cAAc,EAAC,WAAW,CAAEC,OAAQ,CAAC,WAAW,cAAE,KAAC,eAAe,IAAI,EAAG,EACrD,EACjB,CAEZ,CAAC,EACoB,EACnB,cACN,KAAC,GAAG,EAAC,EAAE,CAAE,EAAG,CAAC,EAAE,CAAE,EAAG,uBAClB,KAAC,eAAe,CAAC,IAAI,EAAC,YAAY,eAC/B,wBAAuB,IAApBD,cAAa,OAAbA,aAAa,CACf,GAAME,SAAQ,CAAGF,aAAa,CAAC,UAAU,CAAC,CAE1C,mBACE,oCACE,KAAC,eAAe,CAAC,IAAI,EACnB,IAAI,CAAC,UAAU,CACf,KAAK,CAAE,CACL,CACEG,OAAO,CAAE,GAAIC,OAAM,CAACP,cAAc,CAAC,CACnCQ,OAAO,CAAEN,CAAC,CAAC,0CAA0C,CACvD,CAAC,CACD,uBAEF,KAAC,YAAY,EAAC,IAAI,CAAEG,QAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,cAAE,KAAC,YAAY,IAAI,EAAG,EAC1D,EACjB,CAEZ,CAAC,EACoB,EACnB,cACN,KAAC,GAAG,EAAC,EAAE,CAAE,EAAG,CAAC,EAAE,CAAE,EAAG,uBAClB,KAAC,eAAe,CAAC,IAAI,EAAC,YAAY,eAC/B,wBAAuB,IAApBF,cAAa,OAAbA,aAAa,CACf,GAAMM,SAAQ,CAAGN,aAAa,CAAC,UAAU,CAAC,CAE1C,mBACE,yBACG,GAAG,cACJ,KAAC,eAAe,CAAC,IAAI,EACnB,IAAI,CAAC,UAAU,CACf,KAAK,CAAE,CACL,CACEG,OAAO,CAAE,GAAIC,OAAM,CAACP,cAAc,CAAC,CACnCQ,OAAO,CAAEN,CAAC,CAAC,0CAA0C,CACvD,CAAC,CACD,uBAEF,KAAC,YAAY,EAAC,IAAI,CAAEO,QAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,cAAE,KAAC,YAAY,IAAI,EAAG,EAC1D,GACjB,CAEZ,CAAC,EACoB,EACnB,GACF,EACe,CAE3B,CAAC"},"metadata":{},"sourceType":"module"}