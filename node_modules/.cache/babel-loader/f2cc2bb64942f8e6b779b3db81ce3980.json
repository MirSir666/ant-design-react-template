{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"required\",\"onClick\",\"verified\"];import React from'react';import{useTranslation}from'react-i18next';import{Input}from'@app/components/common/inputs/Input/Input';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{jsx as _jsx}from\"react/jsx-runtime\";export var EmailItem=function EmailItem(_ref){var required=_ref.required,onClick=_ref.onClick,verified=_ref.verified,props=_objectWithoutProperties(_ref,_excluded);var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(BaseButtonsForm.Item,_objectSpread(_objectSpread({name:\"email\",$isSuccess:verified,$successText:t('profile.nav.personalInfo.verified'),label:t('common.email'),rules:[{required:required,message:t('common.requiredField')},{type:'email',message:t('common.notValidEmail')}]},props),{},{children:/*#__PURE__*/_jsx(Input,{disabled:verified,onClick:onClick})}));};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem.tsx"],"names":["React","useTranslation","Input","BaseButtonsForm","EmailItem","required","onClick","verified","props","t","message","type"],"mappings":"mZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,KAAT,KAAsB,2CAAtB,CACA,OAASC,eAAT,KAAgC,8DAAhC,C,2CAOA,MAAO,IAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAA+C,IAA5CC,CAAAA,QAA4C,MAA5CA,QAA4C,CAAlCC,OAAkC,MAAlCA,OAAkC,CAAzBC,QAAyB,MAAzBA,QAAyB,CAAZC,KAAY,0CAChG,oBAAcP,cAAc,EAA5B,CAAQQ,CAAR,iBAAQA,CAAR,CAEA,mBACE,KAAC,eAAD,CAAiB,IAAjB,8BACE,IAAI,CAAC,OADP,CAEE,UAAU,CAAEF,QAFd,CAGE,YAAY,CAAEE,CAAC,CAAC,mCAAD,CAHjB,CAIE,KAAK,CAAEA,CAAC,CAAC,cAAD,CAJV,CAKE,KAAK,CAAE,CACL,CAAEJ,QAAQ,CAARA,QAAF,CAAYK,OAAO,CAAED,CAAC,CAAC,sBAAD,CAAtB,CADK,CAEL,CACEE,IAAI,CAAE,OADR,CAEED,OAAO,CAAED,CAAC,CAAC,sBAAD,CAFZ,CAFK,CALT,EAYMD,KAZN,4BAcE,KAAC,KAAD,EAAO,QAAQ,CAAED,QAAjB,CAA2B,OAAO,CAAED,OAApC,EAdF,GADF,CAkBD,CArBM","sourcesContent":["import React from 'react';\nimport { FormItemProps } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\ninterface EmailItemProps extends FormItemProps {\n  verified?: boolean;\n  onClick?: () => void;\n}\n\nexport const EmailItem: React.FC<EmailItemProps> = ({ required, onClick, verified, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"email\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.email')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        {\n          type: 'email',\n          message: t('common.notValidEmail'),\n        },\n      ]}\n      {...props}\n    >\n      <Input disabled={verified} onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}