{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/common/Notification/Notification.tsx\",\n  _this = this;\nimport React from 'react';\nimport { Space } from 'antd';\nimport { CheckCircleFilled, ExclamationCircleFilled, InfoCircleFilled, WarningFilled } from '@ant-design/icons';\nimport * as S from './Notification.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Notification = function Notification(_ref) {\n  var type = _ref.type,\n    mentionIconSrc = _ref.mentionIconSrc,\n    title = _ref.title,\n    description = _ref.description;\n  var icons = {\n    info: /*#__PURE__*/_jsxDEV(InfoCircleFilled, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, _this),\n    success: /*#__PURE__*/_jsxDEV(CheckCircleFilled, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, _this),\n    warning: /*#__PURE__*/_jsxDEV(ExclamationCircleFilled, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, _this),\n    error: /*#__PURE__*/_jsxDEV(WarningFilled, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, _this),\n    mention: mentionIconSrc\n  };\n  var icon = icons[type] || icons.warning;\n  return /*#__PURE__*/_jsxDEV(S.SpaceWrapper, {\n    type: type,\n    align: \"start\",\n    size: \"middle\",\n    children: [mentionIconSrc ? /*#__PURE__*/_jsxDEV(S.NotificationIcon, {\n      src: icon,\n      alt: \"User icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, _this) : icon, /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Description, {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n_c = Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","Space","CheckCircleFilled","ExclamationCircleFilled","InfoCircleFilled","WarningFilled","S","Notification","type","mentionIconSrc","title","description","icons","info","success","warning","error","mention","icon"],"sources":["/workspace/ant-design-react-template/src/components/common/Notification/Notification.tsx"],"sourcesContent":["import React from 'react';\nimport { Space } from 'antd';\nimport { CheckCircleFilled, ExclamationCircleFilled, InfoCircleFilled, WarningFilled } from '@ant-design/icons';\nimport * as S from './Notification.styles';\n\ninterface Icons {\n  info: React.ReactNode;\n  success: React.ReactNode;\n  warning: React.ReactNode;\n  error: React.ReactNode;\n  mention: React.ReactNode;\n}\n\nexport type NotificationType = 'info' | 'mention' | 'success' | 'warning' | 'error';\n\ninterface NotificationProps {\n  type: NotificationType;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  mentionIconSrc?: React.ReactNode;\n}\n\nexport const Notification: React.FC<NotificationProps> = ({ type, mentionIconSrc, title, description }) => {\n  const icons: Icons = {\n    info: <InfoCircleFilled />,\n    success: <CheckCircleFilled />,\n    warning: <ExclamationCircleFilled />,\n    error: <WarningFilled />,\n    mention: mentionIconSrc,\n  };\n\n  const icon = icons[type] || icons.warning;\n\n  return (\n    <S.SpaceWrapper type={type} align=\"start\" size=\"middle\">\n      {mentionIconSrc ? <S.NotificationIcon src={icon} alt=\"User icon\" /> : icon}\n      <Space direction=\"vertical\">\n        <S.Title>{title}</S.Title>\n        <S.Description>{description}</S.Description>\n      </Space>\n    </S.SpaceWrapper>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,MAAM;AAC5B,SAASC,iBAAiB,EAAEC,uBAAuB,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,mBAAmB;AAC/G,OAAO,KAAKC,CAAC,MAAM,uBAAuB;AAAC;AAmB3C,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAAyC,OAAqD;EAAA,IAA/CC,IAAI,QAAJA,IAAI;IAAEC,cAAc,QAAdA,cAAc;IAAEC,KAAK,QAALA,KAAK;IAAEC,WAAW,QAAXA,WAAW;EAClG,IAAMC,KAAY,GAAG;IACnBC,IAAI,eAAE,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,SAAG;IAC1BC,OAAO,eAAE,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,SAAG;IAC9BC,OAAO,eAAE,QAAC,uBAAuB;MAAA;MAAA;MAAA;IAAA,SAAG;IACpCC,KAAK,eAAE,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,SAAG;IACxBC,OAAO,EAAER;EACX,CAAC;EAED,IAAMS,IAAI,GAAGN,KAAK,CAACJ,IAAI,CAAC,IAAII,KAAK,CAACG,OAAO;EAEzC,oBACE,QAAC,CAAC,CAAC,YAAY;IAAC,IAAI,EAAEP,IAAK;IAAC,KAAK,EAAC,OAAO;IAAC,IAAI,EAAC,QAAQ;IAAA,WACpDC,cAAc,gBAAG,QAAC,CAAC,CAAC,gBAAgB;MAAC,GAAG,EAAES,IAAK;MAAC,GAAG,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,SAAG,GAAGA,IAAI,eAC1E,QAAC,KAAK;MAAC,SAAS,EAAC,UAAU;MAAA,wBACzB,QAAC,CAAC,CAAC,KAAK;QAAA,UAAER;MAAK;QAAA;QAAA;QAAA;MAAA,SAAW,eAC1B,QAAC,CAAC,CAAC,WAAW;QAAA,UAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,SAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,SACtC;EAAA;IAAA;IAAA;IAAA;EAAA,SACO;AAErB,CAAC;AAAC,KApBWJ,YAAyC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}