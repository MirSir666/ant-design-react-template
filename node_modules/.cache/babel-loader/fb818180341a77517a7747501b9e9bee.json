{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recently-added/nft-card/NftCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport * as S from './NftCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var NftCard = function NftCard(_ref) {\n  _s();\n\n  var nftItem = _ref.nftItem;\n\n  var _useResponsive = useResponsive(),\n      isTablet = _useResponsive.isTablet;\n\n  var tabletLayout = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.InfoHeader, {\n      children: /*#__PURE__*/_jsxDEV(S.InfoText, {\n        children: [\"@\", nftItem.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.InfoFooter, {\n      children: [/*#__PURE__*/_jsxDEV(S.CurrentBidWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(S.CurrentBid, {\n          children: \"Current Bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.BidCrypto, {\n          children: getCurrencyPrice(formatNumberWithCommas(nftItem.currentBidCrypto), 'ETH', false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.CurrentBidWrapper, {\n        children: /*#__PURE__*/_jsxDEV(S.Bid, {\n          children: getCurrencyPrice(formatNumberWithCommas(nftItem.currentBid), 'USD')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n\n  var mobileLayout = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.InfoRow, {\n      children: [/*#__PURE__*/_jsxDEV(S.InfoText, {\n        children: [\"@\", nftItem.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.BidCrypto, {\n        children: getCurrencyPrice(formatNumberWithCommas(nftItem.currentBidCrypto), 'ETH', false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.InfoRow, {\n      children: [/*#__PURE__*/_jsxDEV(S.CurrentBid, {\n        children: \"Current Bid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Bid, {\n        children: getCurrencyPrice(formatNumberWithCommas(nftItem.currentBid), 'USD')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(S.Card, {\n    padding: 0,\n    $img: nftItem.image,\n    children: [/*#__PURE__*/_jsxDEV(S.NftImage, {\n      src: nftItem.image,\n      alt: \"nftImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.NftInfo, {\n      children: [/*#__PURE__*/_jsxDEV(S.InfoRow, {\n        children: /*#__PURE__*/_jsxDEV(S.Title, {\n          children: nftItem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), isTablet ? tabletLayout : mobileLayout]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NftCard, \"RBQva0NpaPHySDx1FVSa0HWQ3J8=\", false, function () {\n  return [useResponsive];\n});\n\n_c = NftCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftCard\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recently-added/nft-card/NftCard.tsx"],"names":["React","useResponsive","formatNumberWithCommas","getCurrencyPrice","S","NftCard","nftItem","isTablet","tabletLayout","author","currentBidCrypto","currentBid","mobileLayout","image","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { NftItem } from '@app/api/nftDashboard.api';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport * as S from './NftCard.styles';\n\ninterface NftCardProps {\n  nftItem: NftItem;\n}\n\nexport const NftCard: React.FC<NftCardProps> = ({ nftItem }) => {\n  const { isTablet } = useResponsive();\n\n  const tabletLayout = (\n    <>\n      <S.InfoHeader>\n        <S.InfoText>@{nftItem.author}</S.InfoText>\n      </S.InfoHeader>\n\n      <S.InfoFooter>\n        <S.CurrentBidWrapper>\n          <S.CurrentBid>Current Bid</S.CurrentBid>\n          <S.BidCrypto>{getCurrencyPrice(formatNumberWithCommas(nftItem.currentBidCrypto), 'ETH', false)}</S.BidCrypto>\n        </S.CurrentBidWrapper>\n\n        <S.CurrentBidWrapper>\n          <S.Bid>{getCurrencyPrice(formatNumberWithCommas(nftItem.currentBid), 'USD')}</S.Bid>\n        </S.CurrentBidWrapper>\n      </S.InfoFooter>\n    </>\n  );\n\n  const mobileLayout = (\n    <>\n      <S.InfoRow>\n        <S.InfoText>@{nftItem.author}</S.InfoText>\n        <S.BidCrypto>{getCurrencyPrice(formatNumberWithCommas(nftItem.currentBidCrypto), 'ETH', false)}</S.BidCrypto>\n      </S.InfoRow>\n\n      <S.InfoRow>\n        <S.CurrentBid>Current Bid</S.CurrentBid>\n        <S.Bid>{getCurrencyPrice(formatNumberWithCommas(nftItem.currentBid), 'USD')}</S.Bid>\n      </S.InfoRow>\n    </>\n  );\n\n  return (\n    <S.Card padding={0} $img={nftItem.image}>\n      <S.NftImage src={nftItem.image} alt=\"nftImage\" />\n      <S.NftInfo>\n        <S.InfoRow>\n          <S.Title>{nftItem.title}</S.Title>\n        </S.InfoRow>\n        {isTablet ? tabletLayout : mobileLayout}\n      </S.NftInfo>\n    </S.Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}