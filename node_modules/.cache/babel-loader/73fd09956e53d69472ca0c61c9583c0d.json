{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/ScreeningsHeader/ScreeningsHeader.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { MonthSelect } from 'components/common/selects/MonthSelect/MonthSelect';\nimport { StatisticsSelect } from 'components/common/selects/StatisticsSelect/StatisticsSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ScreeningsHeader = function ScreeningsHeader(_ref) {\n  _s();\n\n  var currentStatistics = _ref.currentStatistics,\n      setCurrentStatistics = _ref.setCurrentStatistics;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [0, {\n      xs: 15,\n      sm: 15,\n      md: 20\n    }],\n    align: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 24,\n      xl: 12,\n      children: t('medical-dashboard.latestScreenings.title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 24,\n      xl: 12,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [{\n          xs: 15,\n          sm: 15,\n          md: 20\n        }, {\n          xs: 15,\n          sm: 15,\n          md: 20\n        }],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(MonthSelect, {\n              value: currentStatistics.month,\n              width: \"100%\",\n              bordered: false,\n              shadow: true,\n              placeholder: t('medical-dashboard.latestScreenings.month'),\n              onChange: function onChange(month) {\n                return setCurrentStatistics(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    month: month\n                  });\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(StatisticsSelect, {\n              value: currentStatistics.statistic,\n              width: \"100%\",\n              bordered: false,\n              shadow: true,\n              placeholder: t('medical-dashboard.latestScreenings.statistics'),\n              onChange: function onChange(statistic) {\n                return setCurrentStatistics(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    statistic: statistic\n                  });\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ScreeningsHeader, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ScreeningsHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreeningsHeader\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/ScreeningsHeader/ScreeningsHeader.tsx"],"names":["React","useTranslation","Col","Row","MonthSelect","StatisticsSelect","ScreeningsHeader","currentStatistics","setCurrentStatistics","t","xs","sm","md","month","prev","statistic"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AAEA,SAASC,WAAT,QAA4B,mDAA5B;AACA,SAASC,gBAAT,QAAiC,6DAAjC;;AAOA,OAAO,IAAMC,gBAAiD,GAAG,SAApDA,gBAAoD,OAAiD;AAAA;;AAAA,MAA9CC,iBAA8C,QAA9CA,iBAA8C;AAAA,MAA3BC,oBAA2B,QAA3BA,oBAA2B;;AAChH,wBAAcP,cAAc,EAA5B;AAAA,MAAQQ,CAAR,mBAAQA,CAAR;;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI;AAAEC,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,EAAE,EAAE,EAAd;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAAJ,CAAb;AAA8C,IAAA,KAAK,EAAC,QAApD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAA,gBACGH,CAAC,CAAC,0CAAD;AADJ;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,MAAM,EAAE,CACN;AAAEC,UAAAA,EAAE,EAAE,EAAN;AAAUC,UAAAA,EAAE,EAAE,EAAd;AAAkBC,UAAAA,EAAE,EAAE;AAAtB,SADM,EAEN;AAAEF,UAAAA,EAAE,EAAE,EAAN;AAAUC,UAAAA,EAAE,EAAE,EAAd;AAAkBC,UAAAA,EAAE,EAAE;AAAtB,SAFM,CADV;AAAA,gCAME,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACE;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAEL,iBAAiB,CAACM,KAD3B;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,QAAQ,EAAE,KAHZ;AAIE,cAAA,MAAM,MAJR;AAKE,cAAA,WAAW,EAAEJ,CAAC,CAAC,0CAAD,CALhB;AAME,cAAA,QAAQ,EAAE,kBAACI,KAAD;AAAA,uBAAWL,oBAAoB,CAAC,UAACM,IAAD;AAAA,yDAAgBA,IAAhB;AAAsBD,oBAAAA,KAAK,EAALA;AAAtB;AAAA,iBAAD,CAA/B;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBANF,eAmBE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACE;AAAA,mCACE,QAAC,gBAAD;AACE,cAAA,KAAK,EAAEN,iBAAiB,CAACQ,SAD3B;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,QAAQ,EAAE,KAHZ;AAIE,cAAA,MAAM,MAJR;AAKE,cAAA,WAAW,EAAEN,CAAC,CAAC,+CAAD,CALhB;AAME,cAAA,QAAQ,EAAE,kBAACM,SAAD;AAAA,uBACRP,oBAAoB,CAAC,UAACM,IAAD;AAAA,yDAAgBA,IAAhB;AAAsBC,oBAAAA,SAAS,EAATA;AAAtB;AAAA,iBAAD,CADZ;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA4CD,CA/CM;;GAAMT,gB;UACGL,c;;;KADHK,gB","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { CurrentStatisticsState } from '../ScreeningsCard/ScreeningsCard';\nimport { MonthSelect } from 'components/common/selects/MonthSelect/MonthSelect';\nimport { StatisticsSelect } from 'components/common/selects/StatisticsSelect/StatisticsSelect';\n\ninterface ScreeningsHeaderProps {\n  currentStatistics: CurrentStatisticsState;\n  setCurrentStatistics: (func: (state: CurrentStatisticsState) => CurrentStatisticsState) => void;\n}\n\nexport const ScreeningsHeader: React.FC<ScreeningsHeaderProps> = ({ currentStatistics, setCurrentStatistics }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row gutter={[0, { xs: 15, sm: 15, md: 20 }]} align=\"middle\">\n      <Col xs={24} xl={12}>\n        {t('medical-dashboard.latestScreenings.title')}\n      </Col>\n\n      <Col xs={24} xl={12}>\n        <Row\n          gutter={[\n            { xs: 15, sm: 15, md: 20 },\n            { xs: 15, sm: 15, md: 20 },\n          ]}\n        >\n          <Col xs={12}>\n            <label>\n              <MonthSelect\n                value={currentStatistics.month}\n                width=\"100%\"\n                bordered={false}\n                shadow\n                placeholder={t('medical-dashboard.latestScreenings.month')}\n                onChange={(month) => setCurrentStatistics((prev) => ({ ...prev, month } as CurrentStatisticsState))}\n              />\n            </label>\n          </Col>\n\n          <Col xs={12}>\n            <label>\n              <StatisticsSelect\n                value={currentStatistics.statistic}\n                width=\"100%\"\n                bordered={false}\n                shadow\n                placeholder={t('medical-dashboard.latestScreenings.statistics')}\n                onChange={(statistic) =>\n                  setCurrentStatistics((prev) => ({ ...prev, statistic } as CurrentStatisticsState))\n                }\n              />\n            </label>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}