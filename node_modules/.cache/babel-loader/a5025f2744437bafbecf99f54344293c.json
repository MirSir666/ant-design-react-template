{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useTranslation}from'react-i18next';import{Avatar}from'antd';import*as S from'./ProfileInfo.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ProfileInfo=function ProfileInfo(_ref){var profileData=_ref.profileData;var _useState=useState(90),_useState2=_slicedToArray(_useState,1),fullness=_useState2[0];var _useTranslation=useTranslation(),t=_useTranslation.t;return profileData?/*#__PURE__*/_jsxs(S.Wrapper,{children:[/*#__PURE__*/_jsx(S.ImgWrapper,{children:/*#__PURE__*/_jsx(Avatar,{shape:\"circle\",src:profileData===null||profileData===void 0?void 0:profileData.imgUrl,alt:\"Profile\"})}),/*#__PURE__*/_jsx(S.Title,{children:\"\".concat(profileData===null||profileData===void 0?void 0:profileData.firstName,\" \").concat(profileData===null||profileData===void 0?void 0:profileData.lastName)}),/*#__PURE__*/_jsx(S.Subtitle,{children:profileData===null||profileData===void 0?void 0:profileData.userName}),/*#__PURE__*/_jsx(S.FullnessWrapper,{children:/*#__PURE__*/_jsxs(S.FullnessLine,{width:fullness,children:[fullness,\"%\"]})}),/*#__PURE__*/_jsx(S.Text,{children:t('profile.fullness')})]}):null;};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/ProfileInfo/ProfileInfo.tsx"],"names":["React","useState","useTranslation","Avatar","S","ProfileInfo","profileData","fullness","t","imgUrl","firstName","lastName","userName"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,MAAT,KAAuB,MAAvB,CAEA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,sBAAnB,C,wFAMA,MAAO,IAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,CAC1E,cAAmBL,QAAQ,CAAC,EAAD,CAA3B,wCAAOM,QAAP,eAEA,oBAAcL,cAAc,EAA5B,CAAQM,CAAR,iBAAQA,CAAR,CAEA,MAAOF,CAAAA,WAAW,cAChB,MAAC,CAAD,CAAG,OAAH,yBACE,KAAC,CAAD,CAAG,UAAH,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,GAAG,CAAEA,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEG,MAAzC,CAAiD,GAAG,CAAC,SAArD,EADF,EADF,cAIE,KAAC,CAAD,CAAG,KAAH,qBAAaH,WAAb,SAAaA,WAAb,iBAAaA,WAAW,CAAEI,SAA1B,aAAuCJ,WAAvC,SAAuCA,WAAvC,iBAAuCA,WAAW,CAAEK,QAApD,GAJF,cAKE,KAAC,CAAD,CAAG,QAAH,WAAaL,WAAb,SAAaA,WAAb,iBAAaA,WAAW,CAAEM,QAA1B,EALF,cAME,KAAC,CAAD,CAAG,eAAH,wBACE,MAAC,CAAD,CAAG,YAAH,EAAgB,KAAK,CAAEL,QAAvB,WAAkCA,QAAlC,OADF,EANF,cASE,KAAC,CAAD,CAAG,IAAH,WAASC,CAAC,CAAC,kBAAD,CAAV,EATF,GADgB,CAYd,IAZJ,CAaD,CAlBM","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar } from 'antd';\nimport { UserModel } from '@app/domain/UserModel';\nimport * as S from './ProfileInfo.styles';\n\ninterface ProfileInfoProps {\n  profileData: UserModel | null;\n}\n\nexport const ProfileInfo: React.FC<ProfileInfoProps> = ({ profileData }) => {\n  const [fullness] = useState(90);\n\n  const { t } = useTranslation();\n\n  return profileData ? (\n    <S.Wrapper>\n      <S.ImgWrapper>\n        <Avatar shape=\"circle\" src={profileData?.imgUrl} alt=\"Profile\" />\n      </S.ImgWrapper>\n      <S.Title>{`${profileData?.firstName} ${profileData?.lastName}`}</S.Title>\n      <S.Subtitle>{profileData?.userName}</S.Subtitle>\n      <S.FullnessWrapper>\n        <S.FullnessLine width={fullness}>{fullness}%</S.FullnessLine>\n      </S.FullnessWrapper>\n      <S.Text>{t('profile.fullness')}</S.Text>\n    </S.Wrapper>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}