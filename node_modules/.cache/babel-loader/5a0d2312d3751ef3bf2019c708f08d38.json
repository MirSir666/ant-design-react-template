{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/statisticsCards/statisticsCard/StatisticsProgress/StatisticsProgress.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport { Progress } from 'antd';\nimport * as S from './StatisticsProgress.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var StatisticsProgress = function StatisticsProgress(_ref) {\n  var color = _ref.color,\n      value = _ref.value,\n      unit = _ref.unit;\n  return /*#__PURE__*/_jsxDEV(Progress, {\n    type: \"circle\",\n    width: 50,\n    strokeColor: color,\n    trailColor: \"transparent\",\n    percent: value,\n    format: function format(percent) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(S.ValueText, {\n          children: percent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.UnitText, {\n          children: unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n_c = StatisticsProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticsProgress\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/statisticsCards/statisticsCard/StatisticsProgress/StatisticsProgress.tsx"],"names":["React","Progress","S","StatisticsProgress","color","value","unit","percent"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;;;AAQA,OAAO,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAwD,OAA4B;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC/F,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE,EAFT;AAGE,IAAA,WAAW,EAAEF,KAHf;AAIE,IAAA,UAAU,EAAC,aAJb;AAKE,IAAA,OAAO,EAAEC,KALX;AAME,IAAA,MAAM,EAAE,gBAACE,OAAD;AAAA,0BACN;AAAA,gCACE,QAAC,CAAD,CAAG,SAAH;AAAA,oBAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,CAAD,CAAG,QAAH;AAAA,oBAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA,sBADM;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,WADF;AAgBD,CAjBM;KAAMH,kB","sourcesContent":["import React from 'react';\nimport { Progress } from 'antd';\nimport * as S from './StatisticsProgress.styles';\n\ninterface StatisticsProgressProps {\n  color: string;\n  unit: 'kg';\n  value: number;\n}\n\nexport const StatisticsProgress: React.FC<StatisticsProgressProps> = ({ color, value, unit }) => {\n  return (\n    <Progress\n      type=\"circle\"\n      width={50}\n      strokeColor={color}\n      trailColor=\"transparent\"\n      percent={value}\n      format={(percent) => (\n        <>\n          <S.ValueText>{percent}</S.ValueText>\n          <br />\n          <S.UnitText>{unit}</S.UnitText>\n        </>\n      )}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}