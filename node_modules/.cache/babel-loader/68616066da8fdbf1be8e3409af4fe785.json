{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"valueToCopy\"];import React,{useCallback}from'react';import{Button,Tooltip}from'antd';import{useTranslation}from'react-i18next';import{CopyOutlined}from'@ant-design/icons';import{SuffixInput}from'../SuffixInput/SuffixInput';import{notificationController}from'controllers/notificationController';import{jsx as _jsx}from\"react/jsx-runtime\";export var ClipboardInput=function ClipboardInput(_ref){var valueToCopy=_ref.valueToCopy,props=_objectWithoutProperties(_ref,_excluded);var _useTranslation=useTranslation(),t=_useTranslation.t;var handleCopy=useCallback(function(){return valueToCopy&&navigator.clipboard.writeText(valueToCopy).then(function(){notificationController.info({message:t('common.copied')});});},[valueToCopy,t]);return/*#__PURE__*/_jsx(SuffixInput,_objectSpread({suffix:/*#__PURE__*/_jsx(Tooltip,{title:t('common.copy'),children:/*#__PURE__*/_jsx(Button,{size:\"small\",disabled:!valueToCopy,type:\"text\",icon:/*#__PURE__*/_jsx(CopyOutlined,{}),onClick:handleCopy})})},props));};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/inputs/ClipboardInput/ClipboardInput.tsx"],"names":["React","useCallback","Button","Tooltip","useTranslation","CopyOutlined","SuffixInput","notificationController","ClipboardInput","valueToCopy","props","t","handleCopy","navigator","clipboard","writeText","then","info","message"],"mappings":"iYAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,MAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,YAAT,KAA6B,mBAA7B,CACA,OAASC,WAAT,KAA4B,4BAA5B,CAEA,OAASC,sBAAT,KAAuC,oCAAvC,C,2CAMA,MAAO,IAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAA+B,IAA5BC,CAAAA,WAA4B,MAA5BA,WAA4B,CAAZC,KAAY,0CAC1F,oBAAcN,cAAc,EAA5B,CAAQO,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,UAAU,CAAGX,WAAW,CAC5B,iBACEQ,CAAAA,WAAW,EACXI,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BN,WAA9B,EAA2CO,IAA3C,CAAgD,UAAM,CACpDT,sBAAsB,CAACU,IAAvB,CAA4B,CAAEC,OAAO,CAAEP,CAAC,CAAC,eAAD,CAAZ,CAA5B,EACD,CAFD,CAFF,EAD4B,CAM5B,CAACF,WAAD,CAAcE,CAAd,CAN4B,CAA9B,CASA,mBACE,KAAC,WAAD,gBACE,MAAM,cACJ,KAAC,OAAD,EAAS,KAAK,CAAEA,CAAC,CAAC,aAAD,CAAjB,uBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,QAAQ,CAAE,CAACF,WAAhC,CAA6C,IAAI,CAAC,MAAlD,CAAyD,IAAI,cAAE,KAAC,YAAD,IAA/D,CAAiF,OAAO,CAAEG,UAA1F,EADF,EAFJ,EAMMF,KANN,EADF,CAUD,CAtBM","sourcesContent":["import React, { useCallback } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { InputProps } from '../Input/Input';\nimport { notificationController } from 'controllers/notificationController';\n\ninterface ClipboardInputProps extends InputProps {\n  valueToCopy?: string;\n}\n\nexport const ClipboardInput: React.FC<ClipboardInputProps> = ({ valueToCopy, ...props }) => {\n  const { t } = useTranslation();\n\n  const handleCopy = useCallback(\n    () =>\n      valueToCopy &&\n      navigator.clipboard.writeText(valueToCopy).then(() => {\n        notificationController.info({ message: t('common.copied') });\n      }),\n    [valueToCopy, t],\n  );\n\n  return (\n    <SuffixInput\n      suffix={\n        <Tooltip title={t('common.copy')}>\n          <Button size=\"small\" disabled={!valueToCopy} type=\"text\" icon={<CopyOutlined />} onClick={handleCopy} />\n        </Tooltip>\n      }\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}