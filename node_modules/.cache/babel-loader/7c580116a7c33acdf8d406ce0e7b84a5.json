{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/statisticsCards/StatisticsCards.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Col } from 'antd';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { StatisticsCard } from './statisticsCard/StatisticsCard/StatisticsCard';\nimport { getStatistics } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var StatisticsCards = function StatisticsCards() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statistics = _useState2[0],\n      setStatistics = _useState2[1];\n\n  var _useResponsive = useResponsive(),\n      isTablet = _useResponsive.isTablet;\n\n  useEffect(function () {\n    getStatistics().then(function (res) {\n      return setStatistics(res);\n    });\n  }, []);\n  var statisticsCards = useMemo(function () {\n    return statistics.map(function (st, index) {\n      var currentStatistic = configStatistics.find(function (el) {\n        return el.id === st.id;\n      });\n      return currentStatistic ? /*#__PURE__*/_jsxDEV(Col, {\n        id: currentStatistic.name,\n        xs: 12,\n        md: index === statistics.length - 1 ? 0 : 8,\n        order: isTablet && index + 1 || 0,\n        children: /*#__PURE__*/_jsxDEV(StatisticsCard, {\n          name: currentStatistic.title,\n          value: st.value,\n          prevValue: st.prevValue,\n          color: currentStatistic.color,\n          unit: st.unit,\n          Icon: currentStatistic.Icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this)\n      }, st.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, _this) : null;\n    });\n  }, [statistics, isTablet]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: statisticsCards\n  }, void 0, false);\n};\n\n_s(StatisticsCards, \"mqvk1rBZY5u9iPI8Ond3c5BeQv0=\", false, function () {\n  return [useResponsive];\n});\n\n_c = StatisticsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticsCards\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/statisticsCards/StatisticsCards.tsx"],"names":["React","useEffect","useMemo","useState","Col","useResponsive","StatisticsCard","getStatistics","statistics","configStatistics","StatisticsCards","setStatistics","isTablet","then","res","statisticsCards","map","st","index","currentStatistic","find","el","id","name","length","title","value","prevValue","color","unit","Icon"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,GAAT,QAAoB,MAApB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,cAAT,QAA+B,gDAA/B;AACA,SAASC,aAAT,QAAyC,oBAAzC;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA+C,6BAA/C;;;AAEA,OAAO,IAAMC,eAAyB,GAAG,SAA5BA,eAA4B,GAAM;AAAA;;AAC7C,kBAAoCP,QAAQ,CAAc,EAAd,CAA5C;AAAA;AAAA,MAAOK,UAAP;AAAA,MAAmBG,aAAnB;;AAEA,uBAAqBN,aAAa,EAAlC;AAAA,MAAQO,QAAR,kBAAQA,QAAR;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,aAAa,GAAGM,IAAhB,CAAqB,UAACC,GAAD;AAAA,aAASH,aAAa,CAACG,GAAD,CAAtB;AAAA,KAArB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMC,eAAe,GAAGb,OAAO,CAC7B;AAAA,WACEM,UAAU,CAACQ,GAAX,CAAe,UAACC,EAAD,EAAKC,KAAL,EAAe;AAC5B,UAAMC,gBAAgB,GAAGV,gBAAgB,CAACW,IAAjB,CAAsB,UAACC,EAAD;AAAA,eAAQA,EAAE,CAACC,EAAH,KAAUL,EAAE,CAACK,EAArB;AAAA,OAAtB,CAAzB;AAEA,aAAOH,gBAAgB,gBACrB,QAAC,GAAD;AAEE,QAAA,EAAE,EAAEA,gBAAgB,CAACI,IAFvB;AAGE,QAAA,EAAE,EAAE,EAHN;AAIE,QAAA,EAAE,EAAEL,KAAK,KAAKV,UAAU,CAACgB,MAAX,GAAoB,CAA9B,GAAkC,CAAlC,GAAsC,CAJ5C;AAKE,QAAA,KAAK,EAAGZ,QAAQ,IAAIM,KAAK,GAAG,CAArB,IAA2B,CALpC;AAAA,+BAOE,QAAC,cAAD;AACE,UAAA,IAAI,EAAEC,gBAAgB,CAACM,KADzB;AAEE,UAAA,KAAK,EAAER,EAAE,CAACS,KAFZ;AAGE,UAAA,SAAS,EAAET,EAAE,CAACU,SAHhB;AAIE,UAAA,KAAK,EAAER,gBAAgB,CAACS,KAJ1B;AAKE,UAAA,IAAI,EAAEX,EAAE,CAACY,IALX;AAME,UAAA,IAAI,EAAEV,gBAAgB,CAACW;AANzB;AAAA;AAAA;AAAA;AAAA;AAPF,SACOb,EAAE,CAACK,EADV;AAAA;AAAA;AAAA;AAAA,eADqB,GAiBnB,IAjBJ;AAkBD,KArBD,CADF;AAAA,GAD6B,EAwB7B,CAACd,UAAD,EAAaI,QAAb,CAxB6B,CAA/B;AA2BA,sBAAO;AAAA,cAAGG;AAAH,mBAAP;AACD,CArCM;;GAAML,e;UAGUL,a;;;KAHVK,e","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Col } from 'antd';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { StatisticsCard } from './statisticsCard/StatisticsCard/StatisticsCard';\nimport { getStatistics, Statistic } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\n\nexport const StatisticsCards: React.FC = () => {\n  const [statistics, setStatistics] = useState<Statistic[]>([]);\n\n  const { isTablet } = useResponsive();\n\n  useEffect(() => {\n    getStatistics().then((res) => setStatistics(res));\n  }, []);\n\n  const statisticsCards = useMemo(\n    () =>\n      statistics.map((st, index) => {\n        const currentStatistic = configStatistics.find((el) => el.id === st.id);\n\n        return currentStatistic ? (\n          <Col\n            key={st.id}\n            id={currentStatistic.name}\n            xs={12}\n            md={index === statistics.length - 1 ? 0 : 8}\n            order={(isTablet && index + 1) || 0}\n          >\n            <StatisticsCard\n              name={currentStatistic.title}\n              value={st.value}\n              prevValue={st.prevValue}\n              color={currentStatistic.color}\n              unit={st.unit}\n              Icon={currentStatistic.Icon}\n            />\n          </Col>\n        ) : null;\n      }),\n    [statistics, isTablet],\n  );\n\n  return <>{statisticsCards}</>;\n};\n"]},"metadata":{},"sourceType":"module"}