{"ast":null,"code":"import _taggedTemplateLiteral from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nimport _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/GithubButton/GitHubButton.tsx\",\n  _this = this,\n  _s = $RefreshSig$(),\n  _templateObject,\n  _templateObject2;\nimport React from 'react';\nimport { Button as BaseButton } from 'antd';\nimport { GithubOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { BASE_COLORS } from '@app/styles/themes/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var GitHubButton = function GitHubButton(props) {\n  _s();\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n    type: \"link\",\n    href: \"https://github.com/altence/lightence-admin\",\n    icon: /*#__PURE__*/_jsxDEV(GithubIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this),\n    target: \"_blank\",\n    $isDark: theme === 'dark'\n  }, props), {}, {\n    children: \"GitHub\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n_s(GitHubButton, \"o9SdPa+99npfrY7FqNDJfsLu7gg=\", false, function () {\n  return [useAppSelector];\n});\n_c = GitHubButton;\nvar Button = styled(BaseButton)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  background: \", \";\\n  border-radius: 50px;\\n  padding-top: 0;\\n  padding-bottom: 0;\\n  display: flex;\\n  align-items: center;\\n\\n  &:hover,\\n  &:active,\\n  &:focus {\\n    color: \", \";\\n    background: \", \";\\n  }\\n\"])), function (props) {\n  return BASE_COLORS[props.$isDark ? 'white' : 'black'];\n}, function (props) {\n  return BASE_COLORS[props.$isDark ? 'black' : 'white'];\n}, function (props) {\n  return BASE_COLORS[props.$isDark ? 'black' : 'white'];\n}, function (props) {\n  return BASE_COLORS[props.$isDark ? 'white' : 'black'];\n});\n_c2 = Button;\nvar GithubIcon = styled(GithubOutlined)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-size: 1.5rem;\\n  vertical-align: middle;\\n\"])));\n_c3 = GithubIcon;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GitHubButton\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"GithubIcon\");","map":{"version":3,"names":["React","Button","BaseButton","GithubOutlined","styled","useAppSelector","BASE_COLORS","GitHubButton","props","theme","state","$isDark","GithubIcon"],"sources":["/workspace/ant-design-react-template/src/components/header/components/GithubButton/GitHubButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Button as BaseButton } from 'antd';\nimport { GithubOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { BASE_COLORS } from '@app/styles/themes/constants';\n\nexport const GitHubButton: React.FC = (props) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  return (\n    <Button\n      type=\"link\"\n      href=\"https://github.com/altence/lightence-admin\"\n      icon={<GithubIcon />}\n      target=\"_blank\"\n      $isDark={theme === 'dark'}\n      {...props}\n    >\n      GitHub\n    </Button>\n  );\n};\n\nconst Button = styled(BaseButton)<{ $isDark: boolean }>`\n  color: ${(props) => BASE_COLORS[props.$isDark ? 'white' : 'black']};\n  background: ${(props) => BASE_COLORS[props.$isDark ? 'black' : 'white']};\n  border-radius: 50px;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  align-items: center;\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: ${(props) => BASE_COLORS[props.$isDark ? 'black' : 'white']};\n    background: ${(props) => BASE_COLORS[props.$isDark ? 'white' : 'black']};\n  }\n`;\n\nconst GithubIcon = styled(GithubOutlined)`\n  font-size: 1.5rem;\n  vertical-align: middle;\n`;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,IAAIC,UAAU,QAAQ,MAAM;AAC3C,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,8BAA8B;AAAC;AAE3D,OAAO,IAAMC,YAAsB,GAAG,SAAzBA,YAAsB,CAAIC,KAAK,EAAK;EAAA;EAC/C,IAAMC,KAAK,GAAGJ,cAAc,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK,CAACD,KAAK,CAACA,KAAK;EAAA,EAAC;EAE1D,oBACE,QAAC,MAAM;IACL,IAAI,EAAC,MAAM;IACX,IAAI,EAAC,4CAA4C;IACjD,IAAI,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,SAAI;IACrB,MAAM,EAAC,QAAQ;IACf,OAAO,EAAEA,KAAK,KAAK;EAAO,GACtBD,KAAK;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,SAGF;AAEb,CAAC;AAAC,GAfWD,YAAsB;EAAA,QACnBF,cAAc;AAAA;AAAA,KADjBE,YAAsB;AAiBnC,IAAMN,MAAM,GAAGG,MAAM,CAACF,UAAU,CAAC,8SACtB,UAACM,KAAK;EAAA,OAAKF,WAAW,CAACE,KAAK,CAACG,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;AAAA,GACpD,UAACH,KAAK;EAAA,OAAKF,WAAW,CAACE,KAAK,CAACG,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;AAAA,GAU5D,UAACH,KAAK;EAAA,OAAKF,WAAW,CAACE,KAAK,CAACG,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;AAAA,GACpD,UAACH,KAAK;EAAA,OAAKF,WAAW,CAACE,KAAK,CAACG,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;AAAA,EAE1E;AAAC,MAfIV,MAAM;AAiBZ,IAAMW,UAAU,GAAGR,MAAM,CAACD,cAAc,CAAC,0HAGxC;AAAC,MAHIS,UAAU;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}