{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/common/charts/Legend/Legend.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as S from './Legend.styles';\nimport { Popover } from '@app/components/common/Popover/Popover';\nimport { getChartColors } from '@app/components/common/charts/BaseChart';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var Legend = function Legend(_ref) {\n  _s();\n\n  var legendItems = _ref.legendItems,\n      activeItemIndex = _ref.activeItemIndex;\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var colors = getChartColors(themeObject[theme]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: legendItems.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(S.LegendWrapper, {\n        isSelected: index === activeItemIndex,\n        children: /*#__PURE__*/_jsxDEV(S.LegendInfo, {\n          children: [/*#__PURE__*/_jsxDEV(S.LegendColor, {\n            style: {\n              backgroundColor: colors[index]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(S.LegendDescription, {\n            children: /*#__PURE__*/_jsxDEV(S.LegendTitle, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(S.Values, {\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n            content: /*#__PURE__*/_jsxDEV(S.PopoverContent, {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 31\n            }, _this),\n            trigger: \"hover\",\n            children: /*#__PURE__*/_jsxDEV(S.InfoStyled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(Legend, \"o9SdPa+99npfrY7FqNDJfsLu7gg=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = Legend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Legend\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/charts/Legend/Legend.tsx"],"names":["React","S","Popover","getChartColors","useAppSelector","themeObject","Legend","legendItems","activeItemIndex","theme","state","colors","map","item","index","backgroundColor","name","value","description"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,CAAZ,MAAmB,iBAAnB;AACA,SAASC,OAAT,QAAwB,wCAAxB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,mCAA5B;;;AAaA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAsC;AAAA;;AAAA,MAAnCC,WAAmC,QAAnCA,WAAmC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AACjF,MAAMC,KAAK,GAAGL,cAAc,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACD,KAAN,CAAYA,KAAvB;AAAA,GAAD,CAA5B;AACA,MAAME,MAAM,GAAGR,cAAc,CAACE,WAAW,CAACI,KAAD,CAAZ,CAA7B;AAEA,sBACE;AAAA,cACGF,WAAW,CAACK,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP;AAAA,0BACf,QAAC,CAAD,CAAG,aAAH;AAA6B,QAAA,UAAU,EAAEA,KAAK,KAAKN,eAAnD;AAAA,+BACE,QAAC,CAAD,CAAG,UAAH;AAAA,kCACE,QAAC,CAAD,CAAG,WAAH;AAAe,YAAA,KAAK,EAAE;AAAEO,cAAAA,eAAe,EAAEJ,MAAM,CAACG,KAAD;AAAzB;AAAtB;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,CAAD,CAAG,iBAAH;AAAA,mCACE,QAAC,CAAD,CAAG,WAAH;AAAA,wBAAgBD,IAAI,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAFF,eAKE,QAAC,CAAD,CAAG,MAAH;AAAA,sBAAWH,IAAI,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,mBALF,eAME,QAAC,OAAD;AAAS,YAAA,OAAO,eAAE,QAAC,CAAD,CAAG,cAAH;AAAA,wBAAmBJ,IAAI,CAACK;AAAxB;AAAA;AAAA;AAAA;AAAA,qBAAlB;AAA2E,YAAA,OAAO,EAAC,OAAnF;AAAA,mCACE,QAAC,CAAD,CAAG,UAAH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAsBJ,KAAtB;AAAA;AAAA;AAAA;AAAA,eADe;AAAA,KAAhB;AADH,mBADF;AAkBD,CAtBM;;GAAMR,M;UACGF,c;;;KADHE,M","sourcesContent":["import React from 'react';\nimport * as S from './Legend.styles';\nimport { Popover } from '@app/components/common/Popover/Popover';\nimport { getChartColors } from '@app/components/common/charts/BaseChart';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\nexport interface LegendItem {\n  name: string;\n  value: number | string;\n  description: string;\n}\n\ninterface LegendProps {\n  legendItems: LegendItem[];\n  activeItemIndex: number | null;\n}\n\nexport const Legend: React.FC<LegendProps> = ({ legendItems, activeItemIndex }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const colors = getChartColors(themeObject[theme]);\n\n  return (\n    <>\n      {legendItems.map((item, index) => (\n        <S.LegendWrapper key={index} isSelected={index === activeItemIndex}>\n          <S.LegendInfo>\n            <S.LegendColor style={{ backgroundColor: colors[index] }} />\n            <S.LegendDescription>\n              <S.LegendTitle>{item.name}</S.LegendTitle>\n            </S.LegendDescription>\n            <S.Values>{item.value}</S.Values>\n            <Popover content={<S.PopoverContent>{item.description}</S.PopoverContent>} trigger=\"hover\">\n              <S.InfoStyled />\n            </Popover>\n          </S.LegendInfo>\n        </S.LegendWrapper>\n      ))}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}