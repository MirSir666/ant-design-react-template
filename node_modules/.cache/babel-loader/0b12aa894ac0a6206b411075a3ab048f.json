{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/nft-dashboard/totalEarning/TotalEarningChart/TotalEarningChart.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TotalEarningChart = function TotalEarningChart(_ref) {\n  _s();\n  var xAxisData = _ref.xAxisData,\n    earningData = _ref.earningData;\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var option = {\n    tooltip: _objectSpread(_objectSpread({}, getDefaultTooltipStyles(themeObject[theme])), {}, {\n      trigger: 'axis',\n      crossStyle: {\n        color: 'red'\n      },\n      formatter: function formatter(data) {\n        var currentSeries = data[0];\n        return \"\".concat(currentSeries.name, \" - \").concat(getCurrencyPrice(formatNumberWithCommas(currentSeries.value), 'USD'));\n      }\n    }),\n    grid: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    xAxis: [{\n      show: false,\n      type: 'category',\n      boundaryGap: false,\n      data: xAxisData\n    }],\n    yAxis: [{\n      show: false,\n      type: 'value'\n    }],\n    series: [{\n      type: 'line',\n      smooth: true,\n      showSymbol: false,\n      lineStyle: {\n        width: 3,\n        color: themeObject[theme].chartColor3\n      },\n      emphasis: {\n        focus: 'series'\n      },\n      data: earningData === null || earningData === void 0 ? void 0 : earningData.data\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(BaseChart, {\n    option: option,\n    width: \"100%\",\n    height: 75\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, _this);\n};\n_s(TotalEarningChart, \"o9SdPa+99npfrY7FqNDJfsLu7gg=\", false, function () {\n  return [useAppSelector];\n});\n_c = TotalEarningChart;\nvar _c;\n$RefreshReg$(_c, \"TotalEarningChart\");","map":{"version":3,"names":["React","BaseChart","getDefaultTooltipStyles","formatNumberWithCommas","getCurrencyPrice","useAppSelector","themeObject","TotalEarningChart","xAxisData","earningData","theme","state","option","tooltip","trigger","crossStyle","color","formatter","data","currentSeries","name","value","grid","top","left","right","bottom","xAxis","show","type","boundaryGap","yAxis","series","smooth","showSymbol","lineStyle","width","chartColor3","emphasis","focus"],"sources":["/workspace/ant-design-react-template/src/components/nft-dashboard/totalEarning/TotalEarningChart/TotalEarningChart.tsx"],"sourcesContent":["import React from 'react';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { ChartData, ChartSeriesData } from '@app/interfaces/interfaces';\nimport { formatNumberWithCommas, getCurrencyPrice } from '@app/utils/utils';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\ninterface LineData {\n  data: ChartData;\n}\n\ninterface TotalEarningChartProps {\n  xAxisData: number[] | string[];\n  earningData: LineData;\n}\n\nexport const TotalEarningChart: React.FC<TotalEarningChartProps> = ({ xAxisData, earningData }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const option = {\n    tooltip: {\n      ...getDefaultTooltipStyles(themeObject[theme]),\n      trigger: 'axis',\n      crossStyle: {\n        color: 'red',\n      },\n      formatter: (data: ChartSeriesData) => {\n        const currentSeries = data[0];\n\n        return `${currentSeries.name} - ${getCurrencyPrice(formatNumberWithCommas(currentSeries.value), 'USD')}`;\n      },\n    },\n    grid: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n    xAxis: [\n      {\n        show: false,\n        type: 'category',\n        boundaryGap: false,\n        data: xAxisData,\n      },\n    ],\n    yAxis: [\n      {\n        show: false,\n        type: 'value',\n      },\n    ],\n    series: [\n      {\n        type: 'line',\n        smooth: true,\n        showSymbol: false,\n        lineStyle: {\n          width: 3,\n          color: themeObject[theme].chartColor3,\n        },\n        emphasis: {\n          focus: 'series',\n        },\n        data: earningData?.data,\n      },\n    ],\n  };\n\n  return <BaseChart option={option} width=\"100%\" height={75} />;\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,uBAAuB,QAAQ,yCAAyC;AAE5F,SAASC,sBAAsB,EAAEC,gBAAgB,QAAQ,kBAAkB;AAC3E,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,mCAAmC;AAAC;AAWhE,OAAO,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAmD,OAAmC;EAAA;EAAA,IAA7BC,SAAS,QAATA,SAAS;IAAEC,WAAW,QAAXA,WAAW;EAC1F,IAAMC,KAAK,GAAGL,cAAc,CAAC,UAACM,KAAK;IAAA,OAAKA,KAAK,CAACD,KAAK,CAACA,KAAK;EAAA,EAAC;EAC1D,IAAME,MAAM,GAAG;IACbC,OAAO,kCACFX,uBAAuB,CAACI,WAAW,CAACI,KAAK,CAAC,CAAC;MAC9CI,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE;QACVC,KAAK,EAAE;MACT,CAAC;MACDC,SAAS,EAAE,mBAACC,IAAqB,EAAK;QACpC,IAAMC,aAAa,GAAGD,IAAI,CAAC,CAAC,CAAC;QAE7B,iBAAUC,aAAa,CAACC,IAAI,gBAAMhB,gBAAgB,CAACD,sBAAsB,CAACgB,aAAa,CAACE,KAAK,CAAC,EAAE,KAAK,CAAC;MACxG;IAAC,EACF;IACDC,IAAI,EAAE;MACJC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IACDC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,UAAU;MAChBC,WAAW,EAAE,KAAK;MAClBZ,IAAI,EAAEV;IACR,CAAC,CACF;IACDuB,KAAK,EAAE,CACL;MACEH,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;IACR,CAAC,CACF;IACDG,MAAM,EAAE,CACN;MACEH,IAAI,EAAE,MAAM;MACZI,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE;QACTC,KAAK,EAAE,CAAC;QACRpB,KAAK,EAAEV,WAAW,CAACI,KAAK,CAAC,CAAC2B;MAC5B,CAAC;MACDC,QAAQ,EAAE;QACRC,KAAK,EAAE;MACT,CAAC;MACDrB,IAAI,EAAET,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES;IACrB,CAAC;EAEL,CAAC;EAED,oBAAO,QAAC,SAAS;IAAC,MAAM,EAAEN,MAAO;IAAC,KAAK,EAAC,MAAM;IAAC,MAAM,EAAE;EAAG;IAAA;IAAA;IAAA;EAAA,SAAG;AAC/D,CAAC;AAAC,GArDWL,iBAAmD;EAAA,QAChDF,cAAc;AAAA;AAAA,KADjBE,iBAAmD;AAAA;AAAA"},"metadata":{},"sourceType":"module"}