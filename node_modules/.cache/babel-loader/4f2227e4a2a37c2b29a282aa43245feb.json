{"ast":null,"code":"import React from'react';import{Avatar}from'antd';import{useTranslation}from'react-i18next';import*as S from'./DoctorProfile.styles';import{specifities}from'constants/specifities';import{UserOutlined}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var DoctorProfile=function DoctorProfile(_ref){var _specifities$find;var avatar=_ref.avatar,name=_ref.name,speciality=_ref.speciality;var _useTranslation=useTranslation(),t=_useTranslation.t;var specifity=(_specifities$find=specifities.find(function(el){return el.id===speciality;}))===null||_specifities$find===void 0?void 0:_specifities$find.name;return/*#__PURE__*/_jsxs(S.Profile,{children:[/*#__PURE__*/_jsx(Avatar,{size:\"large\",src:avatar,icon:/*#__PURE__*/_jsx(UserOutlined,{}),alt:\"Doctor avatar\",shape:\"square\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(S.Info,{children:[/*#__PURE__*/_jsx(S.Title,{children:t('common.doctor')}),/*#__PURE__*/_jsx(S.Text,{children:name})]}),/*#__PURE__*/_jsxs(S.Info,{children:[/*#__PURE__*/_jsx(S.Title,{children:t('common.specifity')}),/*#__PURE__*/_jsx(S.Text,{children:t(\"common.\".concat(specifity))})]})]})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/DoctorProfile/DoctorProfile.tsx"],"names":["React","Avatar","useTranslation","S","specifities","UserOutlined","DoctorProfile","avatar","name","speciality","t","specifity","find","el","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,MAAvB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,wBAAnB,CACA,OAASC,WAAT,KAA4B,uBAA5B,CACA,OAASC,YAAT,KAA6B,mBAA7B,C,wFASA,MAAO,IAAMC,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,MAAkC,0BAA/BC,CAAAA,MAA+B,MAA/BA,MAA+B,CAAvBC,IAAuB,MAAvBA,IAAuB,CAAjBC,UAAiB,MAAjBA,UAAiB,CAC3F,oBAAcP,cAAc,EAA5B,CAAQQ,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,SAAS,oBAAGP,WAAW,CAACQ,IAAZ,CAAiB,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,EAAH,GAAUL,UAAlB,EAAjB,CAAH,4CAAG,kBAAgDD,IAAlE,CAEA,mBACE,MAAC,CAAD,CAAG,OAAH,yBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,GAAG,CAAED,MAA1B,CAAkC,IAAI,cAAE,KAAC,YAAD,IAAxC,CAA0D,GAAG,CAAC,eAA9D,CAA8E,KAAK,CAAC,QAApF,EADF,cAEE,oCACE,MAAC,CAAD,CAAG,IAAH,yBACE,KAAC,CAAD,CAAG,KAAH,WAAUG,CAAC,CAAC,eAAD,CAAX,EADF,cAEE,KAAC,CAAD,CAAG,IAAH,WAASF,IAAT,EAFF,GADF,cAKE,MAAC,CAAD,CAAG,IAAH,yBACE,KAAC,CAAD,CAAG,KAAH,WAAUE,CAAC,CAAC,kBAAD,CAAX,EADF,cAEE,KAAC,CAAD,CAAG,IAAH,WAASA,CAAC,kBAAWC,SAAX,EAAV,EAFF,GALF,GAFF,GADF,CAeD,CApBM","sourcesContent":["import React from 'react';\nimport { Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './DoctorProfile.styles';\nimport { specifities } from 'constants/specifities';\nimport { UserOutlined } from '@ant-design/icons';\n\ninterface DoctorProfileProps {\n  avatar?: string;\n  name?: string;\n  speciality?: string | number;\n  rating?: number;\n}\n\nexport const DoctorProfile: React.FC<DoctorProfileProps> = ({ avatar, name, speciality }) => {\n  const { t } = useTranslation();\n\n  const specifity = specifities.find((el) => el.id === speciality)?.name;\n\n  return (\n    <S.Profile>\n      <Avatar size=\"large\" src={avatar} icon={<UserOutlined />} alt=\"Doctor avatar\" shape=\"square\" />\n      <div>\n        <S.Info>\n          <S.Title>{t('common.doctor')}</S.Title>\n          <S.Text>{name}</S.Text>\n        </S.Info>\n        <S.Info>\n          <S.Title>{t('common.specifity')}</S.Title>\n          <S.Text>{t(`common.${specifity}`)}</S.Text>\n        </S.Info>\n      </div>\n    </S.Profile>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}