{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useCallback}from'react';import{useNavigate,Link}from'react-router-dom';import{Image,Spin}from'antd';import{useTranslation}from'react-i18next';import{BaseForm}from'@app/components/common/forms/BaseForm/BaseForm';import{VerificationCodeInput}from'@app/components/common/VerificationCodeInput/VerificationCodeInput';import{useAppDispatch}from'@app/hooks/reduxHooks';import{doVerifySecurityCode}from'@app/store/slices/authSlice';import{notificationController}from'@app/controllers/notificationController';import VerifyEmailImage from'@app/assets/images/verify-email.webp';import*as Auth from'@app/components/layouts/AuthLayout/AuthLayout.styles';import*as S from'./SecurityCodeForm.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SecurityCodeForm=function SecurityCodeForm(_ref){var onBack=_ref.onBack,onFinish=_ref.onFinish;var navigate=useNavigate();var _useTranslation=useTranslation(),t=_useTranslation.t;var dispatch=useAppDispatch();var navigateBack=useCallback(function(){return navigate(-1);},[navigate]);var navigateForward=useCallback(function(){return navigate('/auth/new-password');},[navigate]);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),securityCode=_useState2[0],setSecurityCode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];useEffect(function(){if(securityCode.length===6){setLoading(true);dispatch(doVerifySecurityCode({code:securityCode})).unwrap().then(onFinish||navigateForward).catch(function(err){notificationController.error({message:err.message});setLoading(false);});}},[securityCode,navigateForward,onFinish,dispatch]);return/*#__PURE__*/_jsx(Auth.FormWrapper,{children:/*#__PURE__*/_jsxs(BaseForm,{layout:\"vertical\",requiredMark:\"optional\",children:[/*#__PURE__*/_jsxs(Auth.BackWrapper,{onClick:onBack||navigateBack,children:[/*#__PURE__*/_jsx(Auth.BackIcon,{}),t('common.back')]}),/*#__PURE__*/_jsxs(S.ContentWrapper,{children:[/*#__PURE__*/_jsx(S.ImageWrapper,{children:/*#__PURE__*/_jsx(Image,{src:VerifyEmailImage,alt:\"Not found\",preview:false})}),/*#__PURE__*/_jsx(Auth.FormTitle,{children:t('securityCodeForm.title')}),/*#__PURE__*/_jsx(S.VerifyEmailDescription,{children:t('common.verifCodeSent')}),isLoading?/*#__PURE__*/_jsx(Spin,{}):/*#__PURE__*/_jsx(VerificationCodeInput,{autoFocus:true,onChange:setSecurityCode}),/*#__PURE__*/_jsx(Link,{to:\"/\",target:\"_blank\",children:/*#__PURE__*/_jsx(S.NoCodeText,{children:t('securityCodeForm.noCode')})})]})]})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/auth/SecurityCodeForm/SecurityCodeForm.tsx"],"names":["React","useState","useEffect","useCallback","useNavigate","Link","Image","Spin","useTranslation","BaseForm","VerificationCodeInput","useAppDispatch","doVerifySecurityCode","notificationController","VerifyEmailImage","Auth","S","SecurityCodeForm","onBack","onFinish","navigate","t","dispatch","navigateBack","navigateForward","securityCode","setSecurityCode","isLoading","setLoading","length","code","unwrap","then","catch","err","error","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Image, Spin } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { VerificationCodeInput } from '@app/components/common/VerificationCodeInput/VerificationCodeInput';\nimport { useAppDispatch } from '@app/hooks/reduxHooks';\nimport { doVerifySecurityCode } from '@app/store/slices/authSlice';\nimport { notificationController } from '@app/controllers/notificationController';\nimport VerifyEmailImage from '@app/assets/images/verify-email.webp';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\nimport * as S from './SecurityCodeForm.styles';\n\ninterface SecurityCodeFormProps {\n  onBack?: () => void;\n  onFinish?: () => void;\n}\n\nexport const SecurityCodeForm: React.FC<SecurityCodeFormProps> = ({ onBack, onFinish }) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n\n  const navigateBack = useCallback(() => navigate(-1), [navigate]);\n  const navigateForward = useCallback(() => navigate('/auth/new-password'), [navigate]);\n\n  const [securityCode, setSecurityCode] = useState('');\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (securityCode.length === 6) {\n      setLoading(true);\n      dispatch(doVerifySecurityCode({ code: securityCode }))\n        .unwrap()\n        .then(onFinish || navigateForward)\n        .catch((err) => {\n          notificationController.error({ message: err.message });\n          setLoading(false);\n        });\n    }\n  }, [securityCode, navigateForward, onFinish, dispatch]);\n\n  return (\n    <Auth.FormWrapper>\n      <BaseForm layout=\"vertical\" requiredMark=\"optional\">\n        <Auth.BackWrapper onClick={onBack || navigateBack}>\n          <Auth.BackIcon />\n          {t('common.back')}\n        </Auth.BackWrapper>\n        <S.ContentWrapper>\n          <S.ImageWrapper>\n            <Image src={VerifyEmailImage} alt=\"Not found\" preview={false} />\n          </S.ImageWrapper>\n          <Auth.FormTitle>{t('securityCodeForm.title')}</Auth.FormTitle>\n          <S.VerifyEmailDescription>{t('common.verifCodeSent')}</S.VerifyEmailDescription>\n          {isLoading ? <Spin /> : <VerificationCodeInput autoFocus onChange={setSecurityCode} />}\n          <Link to=\"/\" target=\"_blank\">\n            <S.NoCodeText>{t('securityCodeForm.noCode')}</S.NoCodeText>\n          </Link>\n        </S.ContentWrapper>\n      </BaseForm>\n    </Auth.FormWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}