{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"className\"];import React,{useEffect,useMemo,useState}from'react';import{useTranslation}from'react-i18next';import{Option,Select}from'../Select/Select';import{getStatistics}from'api/statistics.api';import{statistics as configStatistics}from'constants/config/statistics';import{jsx as _jsx}from\"react/jsx-runtime\";export var StatisticsSelect=function StatisticsSelect(_ref){var className=_ref.className,props=_objectWithoutProperties(_ref,_excluded);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),statistics=_useState2[0],setStatistics=_useState2[1];useEffect(function(){getStatistics().then(function(res){return setStatistics(res);});},[]);var _useTranslation=useTranslation(),t=_useTranslation.t;var statisticsOptions=useMemo(function(){return statistics.map(function(statistic){var currentStatistic=configStatistics.find(function(configStat){return configStat.id===statistic.id;});return/*#__PURE__*/_jsx(Option,{value:statistic.id,children:t((currentStatistic===null||currentStatistic===void 0?void 0:currentStatistic.title)||'')},statistic.id);});},[statistics,t]);return/*#__PURE__*/_jsx(Select,_objectSpread(_objectSpread({className:className},props),{},{children:statisticsOptions}));};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/selects/StatisticsSelect/StatisticsSelect.tsx"],"names":["React","useEffect","useMemo","useState","useTranslation","Option","Select","getStatistics","statistics","configStatistics","StatisticsSelect","className","props","setStatistics","then","res","t","statisticsOptions","map","statistic","currentStatistic","find","configStat","id","title"],"mappings":"uiBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,OAA3B,CAAoCC,QAApC,KAAoD,OAApD,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,MAAT,CAAiBC,MAAjB,KAA4C,kBAA5C,CACA,OAASC,aAAT,KAAyC,oBAAzC,CACA,OAASC,UAAU,GAAIC,CAAAA,gBAAvB,KAA+C,6BAA/C,C,2CAEA,MAAO,IAAMC,CAAAA,gBAAuC,CAAG,QAA1CA,CAAAA,gBAA0C,MAA6B,IAA1BC,CAAAA,SAA0B,MAA1BA,SAA0B,CAAZC,KAAY,0CAClF,cAAoCT,QAAQ,CAAc,EAAd,CAA5C,wCAAOK,UAAP,eAAmBK,aAAnB,eAEAZ,SAAS,CAAC,UAAM,CACdM,aAAa,GAAGO,IAAhB,CAAqB,SAACC,GAAD,QAASF,CAAAA,aAAa,CAACE,GAAD,CAAtB,EAArB,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,oBAAcX,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,iBAAiB,CAAGf,OAAO,CAC/B,iBACEM,CAAAA,UAAU,CAACU,GAAX,CAAe,SAACC,SAAD,CAAe,CAC5B,GAAMC,CAAAA,gBAAgB,CAAGX,gBAAgB,CAACY,IAAjB,CAAsB,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAACC,EAAX,GAAkBJ,SAAS,CAACI,EAA5C,EAAtB,CAAzB,CAEA,mBACE,KAAC,MAAD,EAA2B,KAAK,CAAEJ,SAAS,CAACI,EAA5C,UACGP,CAAC,CAAC,CAAAI,gBAAgB,OAAhB,EAAAA,gBAAgB,SAAhB,QAAAA,gBAAgB,CAAEI,KAAlB,GAA2B,EAA5B,CADJ,EAAaL,SAAS,CAACI,EAAvB,CADF,CAKD,CARD,CADF,EAD+B,CAW/B,CAACf,UAAD,CAAaQ,CAAb,CAX+B,CAAjC,CAcA,mBACE,KAAC,MAAD,8BAAQ,SAAS,CAAEL,SAAnB,EAAkCC,KAAlC,eACGK,iBADH,GADF,CAKD,CA5BM","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Option, Select, SelectProps } from '../Select/Select';\nimport { getStatistics, Statistic } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\n\nexport const StatisticsSelect: React.FC<SelectProps> = ({ className, ...props }) => {\n  const [statistics, setStatistics] = useState<Statistic[]>([]);\n\n  useEffect(() => {\n    getStatistics().then((res) => setStatistics(res));\n  }, []);\n\n  const { t } = useTranslation();\n\n  const statisticsOptions = useMemo(\n    () =>\n      statistics.map((statistic) => {\n        const currentStatistic = configStatistics.find((configStat) => configStat.id === statistic.id);\n\n        return (\n          <Option key={statistic.id} value={statistic.id}>\n            {t(currentStatistic?.title || '')}\n          </Option>\n        );\n      }),\n    [statistics, t],\n  );\n\n  return (\n    <Select className={className} {...props}>\n      {statisticsOptions}\n    </Select>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}