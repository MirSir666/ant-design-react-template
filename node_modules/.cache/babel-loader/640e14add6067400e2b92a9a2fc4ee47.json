{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/covidCard/CovidChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { getMarkAreaData, hexToRGB } from '@app/utils/utils';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CovidChart = function CovidChart(_ref) {\n  _s();\n\n  var confirmed = _ref.confirmed,\n      deaths = _ref.deaths,\n      dateArr = _ref.dateArr;\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var option = {\n    color: [themeObject[theme].chartPrimaryGradient, themeObject[theme].chartSecondaryGradientSpecular],\n    grid: [{\n      top: 10,\n      left: 10,\n      right: 0,\n      height: '50%',\n      containLabel: true\n    }, {\n      left: 26.5,\n      right: 0,\n      top: '50%',\n      height: '45%',\n      containLabel: true\n    }],\n    xAxis: [{\n      show: false,\n      type: 'category',\n      boundaryGap: false,\n      data: dateArr\n    }, {\n      gridIndex: 1,\n      show: false,\n      type: 'category',\n      boundaryGap: false,\n      data: dateArr,\n      position: 'top'\n    }],\n    yAxis: [{\n      type: 'value'\n    }, {\n      gridIndex: 1,\n      type: 'value',\n      inverse: true,\n      max: 20000\n    }],\n    series: [{\n      name: confirmed.title,\n      data: confirmed.data,\n      type: 'line',\n      areaStyle: {},\n      markArea: {\n        itemStyle: {\n          color: \"rgba(\".concat(hexToRGB(themeObject[theme].chartColor1), \", 0.02)\")\n        },\n        data: dateArr && getMarkAreaData(dateArr)\n      },\n      showSymbol: false,\n      smooth: true,\n      lineStyle: {\n        width: 2,\n        color: themeObject[theme].chartColor1\n      }\n    }, {\n      xAxisIndex: 1,\n      yAxisIndex: 1,\n      name: deaths.title,\n      data: deaths.data,\n      type: 'line',\n      areaStyle: {},\n      markArea: {\n        itemStyle: {\n          color: \"rgba(\".concat(hexToRGB(themeObject[theme].chartColor5), \", 0.02)\")\n        },\n        data: dateArr && getMarkAreaData(dateArr)\n      },\n      showSymbol: false,\n      smooth: true,\n      lineStyle: {\n        width: 2,\n        color: themeObject[theme].chartColor5\n      }\n    }],\n    tooltip: _objectSpread(_objectSpread({}, getDefaultTooltipStyles(themeObject[theme])), {}, {\n      trigger: 'axis'\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(BaseChart, {\n    option: option,\n    height: \"100%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(CovidChart, \"o9SdPa+99npfrY7FqNDJfsLu7gg=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = CovidChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidChart\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/covidCard/CovidChart.tsx"],"names":["React","BaseChart","getDefaultTooltipStyles","getMarkAreaData","hexToRGB","useAppSelector","themeObject","CovidChart","confirmed","deaths","dateArr","theme","state","option","color","chartPrimaryGradient","chartSecondaryGradientSpecular","grid","top","left","right","height","containLabel","xAxis","show","type","boundaryGap","data","gridIndex","position","yAxis","inverse","max","series","name","title","areaStyle","markArea","itemStyle","chartColor1","showSymbol","smooth","lineStyle","width","xAxisIndex","yAxisIndex","chartColor5","tooltip","trigger"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { getMarkAreaData, hexToRGB } from '@app/utils/utils';\nimport { ChartData, xData } from '@app/interfaces/interfaces';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\ninterface CovidData {\n  title: string;\n  data: ChartData;\n}\n\nexport const CovidChart: React.FC<{\n  confirmed: CovidData;\n  deaths: CovidData;\n  dateArr: xData;\n}> = ({ confirmed, deaths, dateArr }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const option = {\n    color: [themeObject[theme].chartPrimaryGradient, themeObject[theme].chartSecondaryGradientSpecular],\n    grid: [\n      {\n        top: 10,\n        left: 10,\n        right: 0,\n        height: '50%',\n        containLabel: true,\n      },\n      {\n        left: 26.5,\n        right: 0,\n        top: '50%',\n        height: '45%',\n        containLabel: true,\n      },\n    ],\n    xAxis: [\n      {\n        show: false,\n        type: 'category',\n        boundaryGap: false,\n        data: dateArr,\n      },\n      {\n        gridIndex: 1,\n        show: false,\n        type: 'category',\n        boundaryGap: false,\n        data: dateArr,\n        position: 'top',\n      },\n    ],\n    yAxis: [\n      {\n        type: 'value',\n      },\n      {\n        gridIndex: 1,\n        type: 'value',\n        inverse: true,\n        max: 20000,\n      },\n    ],\n    series: [\n      {\n        name: confirmed.title,\n        data: confirmed.data,\n        type: 'line',\n        areaStyle: {},\n        markArea: {\n          itemStyle: {\n            color: `rgba(${hexToRGB(themeObject[theme].chartColor1)}, 0.02)`,\n          },\n          data: dateArr && getMarkAreaData(dateArr),\n        },\n        showSymbol: false,\n        smooth: true,\n        lineStyle: {\n          width: 2,\n          color: themeObject[theme].chartColor1,\n        },\n      },\n      {\n        xAxisIndex: 1,\n        yAxisIndex: 1,\n        name: deaths.title,\n        data: deaths.data,\n        type: 'line',\n        areaStyle: {},\n        markArea: {\n          itemStyle: {\n            color: `rgba(${hexToRGB(themeObject[theme].chartColor5)}, 0.02)`,\n          },\n          data: dateArr && getMarkAreaData(dateArr),\n        },\n        showSymbol: false,\n        smooth: true,\n        lineStyle: {\n          width: 2,\n          color: themeObject[theme].chartColor5,\n        },\n      },\n    ],\n    tooltip: {\n      ...getDefaultTooltipStyles(themeObject[theme]),\n      trigger: 'axis',\n    },\n  };\n\n  return <BaseChart option={option} height=\"100%\" />;\n};\n"]},"metadata":{},"sourceType":"module"}