{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/activityCard/ActivityChart.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { dashboardPaddings } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { Dates } from '@app/constants/Dates';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { graphic } from 'echarts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ActivityChart = function ActivityChart(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var days = Dates.getDays();\n\n  var _useResponsive = useResponsive(),\n      isTablet = _useResponsive.isTablet,\n      isDesktop = _useResponsive.isDesktop,\n      isMobile = _useResponsive.isMobile;\n\n  var size = isDesktop ? 'xl' : isTablet ? 'md' : isMobile ? 'xs' : 'xs';\n  var option = {\n    color: new graphic.LinearGradient(0, 0, 0, 1, [{\n      offset: 0,\n      color: 'rgba(51, 156, 253, 0.7)'\n    }, {\n      offset: 1,\n      color: 'rgba(51, 156, 253, 0.15)'\n    }]),\n    grid: {\n      top: dashboardPaddings[size][0],\n      right: dashboardPaddings[size][1],\n      bottom: dashboardPaddings[size][1],\n      left: dashboardPaddings[size][0],\n      containLabel: true\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false\n      },\n      axisLine: {\n        show: false\n      },\n      data: days,\n      position: 'top',\n      axisLabel: {\n        color: themeObject[theme].primary,\n        fontWeight: 500,\n        fontSize: 14\n      }\n    },\n    yAxis: {\n      type: 'value',\n      min: 1500,\n      axisLabel: {\n        formatter: '{value} kcal',\n        color: themeObject[theme].textLight,\n        fontWeight: 500,\n        fontSize: 14\n      }\n    },\n    series: [{\n      barMaxWidth: 26,\n      data: data,\n      type: 'bar',\n      itemStyle: {\n        borderRadius: 7\n      }\n    }],\n    tooltip: _objectSpread(_objectSpread({}, getDefaultTooltipStyles(themeObject[theme])), {}, {\n      trigger: 'axis',\n      formatter: function formatter(data) {\n        var currentItem = data[0];\n        return \"\".concat(currentItem.value, \" \").concat(t('medical-dashboard.activity.kcalBurned'), \" \").concat(currentItem.name);\n      }\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(BaseChart, {\n    option: option,\n    height: \"100%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ActivityChart, \"duqVTyu3PhmO2adOXobsHLggGuo=\", false, function () {\n  return [useAppSelector, useTranslation, useResponsive];\n});\n\n_c = ActivityChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityChart\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/activityCard/ActivityChart.tsx"],"names":["React","useTranslation","BaseChart","getDefaultTooltipStyles","dashboardPaddings","useResponsive","Dates","useAppSelector","themeObject","graphic","ActivityChart","data","theme","state","t","days","getDays","isTablet","isDesktop","isMobile","size","option","color","LinearGradient","offset","grid","top","right","bottom","left","containLabel","xAxis","type","axisTick","show","axisLine","position","axisLabel","primary","fontWeight","fontSize","yAxis","min","formatter","textLight","series","barMaxWidth","itemStyle","borderRadius","tooltip","trigger","currentItem","value","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { dashboardPaddings } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { Dates } from '@app/constants/Dates';\nimport { ChartData, ChartSeriesData } from '@app/interfaces/interfaces';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { graphic } from 'echarts';\n\ninterface ActivityChartProps {\n  data: ChartData;\n}\n\nexport const ActivityChart: React.FC<ActivityChartProps> = ({ data }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const { t } = useTranslation();\n\n  const days = Dates.getDays();\n\n  const { isTablet, isDesktop, isMobile } = useResponsive();\n\n  const size = isDesktop ? 'xl' : isTablet ? 'md' : isMobile ? 'xs' : 'xs';\n\n  const option = {\n    color: new graphic.LinearGradient(0, 0, 0, 1, [\n      {\n        offset: 0,\n        color: 'rgba(51, 156, 253, 0.7)',\n      },\n      {\n        offset: 1,\n        color: 'rgba(51, 156, 253, 0.15)',\n      },\n    ]),\n    grid: {\n      top: dashboardPaddings[size][0],\n      right: dashboardPaddings[size][1],\n      bottom: dashboardPaddings[size][1],\n      left: dashboardPaddings[size][0],\n      containLabel: true,\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false,\n      },\n      axisLine: {\n        show: false,\n      },\n      data: days,\n      position: 'top',\n      axisLabel: {\n        color: themeObject[theme].primary,\n        fontWeight: 500,\n        fontSize: 14,\n      },\n    },\n    yAxis: {\n      type: 'value',\n      min: 1500,\n      axisLabel: {\n        formatter: '{value} kcal',\n        color: themeObject[theme].textLight,\n        fontWeight: 500,\n        fontSize: 14,\n      },\n    },\n    series: [\n      {\n        barMaxWidth: 26,\n        data: data,\n        type: 'bar',\n        itemStyle: {\n          borderRadius: 7,\n        },\n      },\n    ],\n    tooltip: {\n      ...getDefaultTooltipStyles(themeObject[theme]),\n      trigger: 'axis',\n      formatter: (data: ChartSeriesData) => {\n        const currentItem = data[0];\n\n        return `${currentItem.value} ${t('medical-dashboard.activity.kcalBurned')} ${currentItem.name}`;\n      },\n    },\n  };\n\n  return <BaseChart option={option} height=\"100%\" />;\n};\n"]},"metadata":{},"sourceType":"module"}