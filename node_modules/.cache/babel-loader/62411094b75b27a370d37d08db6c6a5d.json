{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useMemo,useState}from'react';import{useTranslation}from'react-i18next';import{Col,Row}from'antd';import{categoriesList}from'constants/categoriesList';import*as S from'./SearchFilter.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SearchFilter=function SearchFilter(_ref){var data=_ref.data,isVisible=_ref.isVisible,children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedFilter=_useState2[0],setSelectedFilter=_useState2[1];var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),filteredResults=_useState4[0],setFilteredResults=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var filterElements=useMemo(function(){return categoriesList.map(function(filter,index){return/*#__PURE__*/_jsx(Col,{xs:12,sm:8,md:12,xl:8,children:/*#__PURE__*/_jsx(S.CheckBox,{value:filter.name,children:t(filter.title)},index)},index);});},[t]);useEffect(function(){if(data){if(selectedFilter.length>0){setFilteredResults(data.filter(function(component){return selectedFilter.some(function(filter){return filter===component.category;});}));}else{setFilteredResults(data);}}else{setFilteredResults(null);}},[data,selectedFilter]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(S.FilterWrapper,{isVisible:isVisible,children:/*#__PURE__*/_jsx(S.CheckboxGroup,{onChange:function onChange(checkedValues){return setSelectedFilter(checkedValues);},children:/*#__PURE__*/_jsx(Row,{children:filterElements})})}),filteredResults&&children(filteredResults)]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/header/components/searchDropdown/searchOverlay/SearchFilter/SearchFilter.tsx"],"names":["React","useEffect","useMemo","useState","useTranslation","Col","Row","categoriesList","S","SearchFilter","data","isVisible","children","selectedFilter","setSelectedFilter","filteredResults","setFilteredResults","t","filterElements","map","filter","index","name","title","length","component","some","category","checkedValues"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,OAA3B,CAAoCC,QAApC,KAAoD,OAApD,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,MAAzB,CACA,OAASC,cAAT,KAA6C,0BAA7C,CAEA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,uBAAnB,C,6IAQA,MAAO,IAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAmC,IAAhCC,CAAAA,IAAgC,MAAhCA,IAAgC,CAA1BC,SAA0B,MAA1BA,SAA0B,CAAfC,QAAe,MAAfA,QAAe,CAC1F,cAA4CT,QAAQ,CAAiB,EAAjB,CAApD,wCAAOU,cAAP,eAAuBC,iBAAvB,eACA,eAA8CX,QAAQ,CAA8BO,IAA9B,CAAtD,yCAAOK,eAAP,eAAwBC,kBAAxB,eAEA,oBAAcZ,cAAc,EAA5B,CAAQa,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,cAAc,CAAGhB,OAAO,CAC5B,iBACEK,CAAAA,cAAc,CAACY,GAAf,CAAmB,SAACC,MAAD,CAASC,KAAT,qBACjB,KAAC,GAAD,EAAiB,EAAE,CAAE,EAArB,CAAyB,EAAE,CAAE,CAA7B,CAAgC,EAAE,CAAE,EAApC,CAAwC,EAAE,CAAE,CAA5C,uBACE,KAAC,CAAD,CAAG,QAAH,EAAwB,KAAK,CAAED,MAAM,CAACE,IAAtC,UACGL,CAAC,CAACG,MAAM,CAACG,KAAR,CADJ,EAAiBF,KAAjB,CADF,EAAUA,KAAV,CADiB,EAAnB,CADF,EAD4B,CAS5B,CAACJ,CAAD,CAT4B,CAA9B,CAYAhB,SAAS,CAAC,UAAM,CACd,GAAIS,IAAJ,CAAU,CACR,GAAIG,cAAc,CAACW,MAAf,CAAwB,CAA5B,CAA+B,CAC7BR,kBAAkB,CAACN,IAAI,CAACU,MAAL,CAAY,SAACK,SAAD,QAAeZ,CAAAA,cAAc,CAACa,IAAf,CAAoB,SAACN,MAAD,QAAYA,CAAAA,MAAM,GAAKK,SAAS,CAACE,QAAjC,EAApB,CAAf,EAAZ,CAAD,CAAlB,CACD,CAFD,IAEO,CACLX,kBAAkB,CAACN,IAAD,CAAlB,CACD,CACF,CAND,IAMO,CACLM,kBAAkB,CAAC,IAAD,CAAlB,CACD,CACF,CAVQ,CAUN,CAACN,IAAD,CAAOG,cAAP,CAVM,CAAT,CAYA,mBACE,wCACE,KAAC,CAAD,CAAG,aAAH,EAAiB,SAAS,CAAEF,SAA5B,uBACE,KAAC,CAAD,CAAG,aAAH,EAAiB,QAAQ,CAAE,kBAACiB,aAAD,QAAmBd,CAAAA,iBAAiB,CAACc,aAAD,CAApC,EAA3B,uBACE,KAAC,GAAD,WAAMV,cAAN,EADF,EADF,EADF,CAOGH,eAAe,EAAIH,QAAQ,CAACG,eAAD,CAP9B,GADF,CAWD,CAzCM","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { categoriesList, CategoryType } from 'constants/categoriesList';\nimport { CategoryComponents } from '@app/components/header/components/HeaderSearch/HeaderSearch';\nimport * as S from './SearchFilter.styles';\n\ninterface SearchFilterProps {\n  data: CategoryComponents[] | null;\n  isVisible: boolean;\n  children: (filteredResults: CategoryComponents[]) => React.ReactNode;\n}\n\nexport const SearchFilter: React.FC<SearchFilterProps> = ({ data, isVisible, children }) => {\n  const [selectedFilter, setSelectedFilter] = useState<CategoryType[]>([]);\n  const [filteredResults, setFilteredResults] = useState<CategoryComponents[] | null>(data);\n\n  const { t } = useTranslation();\n\n  const filterElements = useMemo(\n    () =>\n      categoriesList.map((filter, index) => (\n        <Col key={index} xs={12} sm={8} md={12} xl={8}>\n          <S.CheckBox key={index} value={filter.name}>\n            {t(filter.title)}\n          </S.CheckBox>\n        </Col>\n      )),\n    [t],\n  );\n\n  useEffect(() => {\n    if (data) {\n      if (selectedFilter.length > 0) {\n        setFilteredResults(data.filter((component) => selectedFilter.some((filter) => filter === component.category)));\n      } else {\n        setFilteredResults(data);\n      }\n    } else {\n      setFilteredResults(null);\n    }\n  }, [data, selectedFilter]);\n\n  return (\n    <>\n      <S.FilterWrapper isVisible={isVisible}>\n        <S.CheckboxGroup onChange={(checkedValues) => setSelectedFilter(checkedValues as CategoryType[])}>\n          <Row>{filterElements}</Row>\n        </S.CheckboxGroup>\n      </S.FilterWrapper>\n\n      {filteredResults && children(filteredResults)}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}