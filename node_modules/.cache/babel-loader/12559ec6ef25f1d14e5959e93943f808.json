{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/auth/LockForm/LockForm.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { initValues as loginInitVal } from '@app/components/auth/LoginForm/LoginForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { Dates } from '@app/constants/Dates';\nimport { doLogin } from '@app/store/slices/authSlice';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\nimport * as S from './LockForm.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initValues = {\n  password: loginInitVal.password\n};\nexport var LockForm = function LockForm() {\n  _s();\n  var navigate = useNavigate();\n  var _useResponsive = useResponsive(),\n    mobileOnly = _useResponsive.mobileOnly;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var dispatch = useAppDispatch();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(new Date()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dateState = _useState4[0],\n    setDateState = _useState4[1];\n  var user = useAppSelector(function (state) {\n    return state.user.user;\n  });\n  var fullName = \"\".concat(user === null || user === void 0 ? void 0 : user.firstName, \" \").concat(user === null || user === void 0 ? void 0 : user.lastName);\n  var currentDateInUTC = dateState.toUTCString();\n  var currentTime = Dates.format(currentDateInUTC, 'h:mm A');\n  var currentDate = Dates.format(currentDateInUTC, 'dddd, MMMM D, YYYY');\n  useEffect(function () {\n    var interval = setInterval(function () {\n      return setDateState(new Date());\n    }, 10 * 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  var handleSubmit = function handleSubmit(_ref) {\n    var password = _ref.password;\n    setLoading(true);\n    dispatch(doLogin({\n      email: (user === null || user === void 0 ? void 0 : user.email.name) || '',\n      password: password\n    })).unwrap().then(function () {\n      navigate(-1);\n    }).catch(function (e) {\n      notificationController.error({\n        message: e.message\n      });\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Auth.FormWrapper, {\n    children: /*#__PURE__*/_jsxDEV(BaseForm, {\n      layout: \"vertical\",\n      onFinish: handleSubmit,\n      requiredMark: \"optional\",\n      initialValues: initValues,\n      children: [/*#__PURE__*/_jsxDEV(S.ContentWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(S.Time, {\n          children: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.Date, {\n          children: currentDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.AvatarCircle, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: user === null || user === void 0 ? void 0 : user.imgUrl,\n            alt: \"user avatar\",\n            size: mobileOnly ? 59 : 77\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.Name, {\n          children: fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.FormItem, {\n        label: t('common.password'),\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: t('common.requiredField')\n        }],\n        children: /*#__PURE__*/_jsxDEV(Auth.FormInputPassword, {\n          placeholder: t('common.password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(BaseForm.Item, {\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(Auth.SubmitButton, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: isLoading,\n          children: t('common.login')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n_s(LockForm, \"8R5zdLHYfqk/RFdA2YCPKMTWeLM=\", false, function () {\n  return [useNavigate, useResponsive, useTranslation, useAppDispatch, useAppSelector];\n});\n_c = LockForm;\nvar _c;\n$RefreshReg$(_c, \"LockForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Avatar","useTranslation","BaseForm","initValues","loginInitVal","notificationController","useAppDispatch","useAppSelector","useResponsive","Dates","doLogin","Auth","S","password","LockForm","navigate","mobileOnly","t","dispatch","isLoading","setLoading","Date","dateState","setDateState","user","state","fullName","firstName","lastName","currentDateInUTC","toUTCString","currentTime","format","currentDate","interval","setInterval","clearInterval","handleSubmit","email","name","unwrap","then","catch","e","error","message","imgUrl","required"],"sources":["/workspace/ant-design-react-template/src/components/auth/LockForm/LockForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { initValues as loginInitVal } from '@app/components/auth/LoginForm/LoginForm';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { useAppDispatch, useAppSelector } from '@app/hooks/reduxHooks';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { Dates } from '@app/constants/Dates';\nimport { doLogin } from '@app/store/slices/authSlice';\nimport * as Auth from '@app/components/layouts/AuthLayout/AuthLayout.styles';\nimport * as S from './LockForm.styles';\n\ninterface LockFormData {\n  password: string;\n}\n\nconst initValues = {\n  password: loginInitVal.password,\n};\n\nexport const LockForm: React.FC = () => {\n  const navigate = useNavigate();\n  const { mobileOnly } = useResponsive();\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n\n  const [isLoading, setLoading] = useState(false);\n  const [dateState, setDateState] = useState(new Date());\n  const user = useAppSelector((state) => state.user.user);\n  const fullName = `${user?.firstName} ${user?.lastName}`;\n\n  const currentDateInUTC = dateState.toUTCString();\n  const currentTime = Dates.format(currentDateInUTC, 'h:mm A');\n  const currentDate = Dates.format(currentDateInUTC, 'dddd, MMMM D, YYYY');\n\n  useEffect(() => {\n    const interval = setInterval(() => setDateState(new Date()), 10 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleSubmit = ({ password }: LockFormData) => {\n    setLoading(true);\n    dispatch(doLogin({ email: user?.email.name || '', password }))\n      .unwrap()\n      .then(() => {\n        navigate(-1);\n      })\n      .catch((e) => {\n        notificationController.error({ message: e.message });\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Auth.FormWrapper>\n      <BaseForm layout=\"vertical\" onFinish={handleSubmit} requiredMark=\"optional\" initialValues={initValues}>\n        <S.ContentWrapper>\n          <S.Time>{currentTime}</S.Time>\n          <S.Date>{currentDate}</S.Date>\n          <S.AvatarCircle>\n            <Avatar src={user?.imgUrl} alt=\"user avatar\" size={mobileOnly ? 59 : 77} />\n          </S.AvatarCircle>\n          <S.Name>{fullName}</S.Name>\n        </S.ContentWrapper>\n        <S.FormItem\n          label={t('common.password')}\n          name=\"password\"\n          rules={[{ required: true, message: t('common.requiredField') }]}\n        >\n          <Auth.FormInputPassword placeholder={t('common.password')} />\n        </S.FormItem>\n        <BaseForm.Item noStyle>\n          <Auth.SubmitButton type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            {t('common.login')}\n          </Auth.SubmitButton>\n        </BaseForm.Item>\n      </BaseForm>\n    </Auth.FormWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}