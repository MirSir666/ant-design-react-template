{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/pages/CURD/Index.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport { Table } from '@app/components/common/Table/Table';\nimport { Button } from '@app/components/common/buttons/Button/Button'; //import {  } from 'antd';\n\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar CRUDPage = function CRUDPage() {\n  var columns = [{\n    title: t('common.name'),\n    dataIndex: 'name',\n    render: function render(text) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 33\n      }, _this);\n    },\n    filterMode: 'tree',\n    filterSearch: true,\n    filters: [{\n      text: t('common.firstName'),\n      value: 'firstName',\n      children: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Pavel',\n        value: 'Pavel'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }, {\n        text: 'Josh',\n        value: 'Josh'\n      }]\n    }, {\n      text: t('common.lastName'),\n      value: 'lastName',\n      children: [{\n        text: 'Green',\n        value: 'Green'\n      }, {\n        text: 'Black',\n        value: 'Black'\n      }, {\n        text: 'Brown',\n        value: 'Brown'\n      }]\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.name.includes(value.toString());\n    }\n  }, {\n    title: t('common.age'),\n    dataIndex: 'age',\n    sorter: function sorter(a, b) {\n      return a.age - b.age;\n    },\n    showSorterTooltip: false\n  }, {\n    title: t('common.address'),\n    dataIndex: 'address'\n  }, {\n    title: t('common.tags'),\n    key: 'tags',\n    dataIndex: 'tags',\n    render: function render(tags) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [10, 10],\n        children: tags.map(function (tag) {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Status, {\n              color: defineColorByPriority(tag.priority),\n              text: tag.value.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, _this)\n          }, tag.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this);\n    }\n  }, {\n    title: t('tables.actions'),\n    dataIndex: 'actions',\n    width: '15%',\n    render: function render(text, record) {\n      return /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"ghost\",\n          onClick: function onClick() {\n            notificationController.info({\n              message: t('tables.inviteMessage', {\n                name: record.name\n              })\n            });\n          },\n          children: t('tables.invite')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          danger: true,\n          onClick: function onClick() {\n            return handleDeleteRow(record.key);\n          },\n          children: t('tables.delete')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, _this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-actionbar\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          severity: \"info\",\n          children: \"\\u6DFB\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          severity: \"success\",\n          children: \"\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          severity: \"error\",\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-searchbar\",\n        children: \"crud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: tableData.data,\n        pagination: tableData.pagination,\n        loading: tableData.loading,\n        onChange: handleTableChange,\n        scroll: {\n          x: 800\n        },\n        bordered: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = CRUDPage;\nexport default CRUDPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CRUDPage\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/pages/CURD/Index.tsx"],"names":["React","Table","Button","CRUDPage","columns","title","t","dataIndex","render","text","filterMode","filterSearch","filters","value","children","onFilter","record","name","includes","toString","sorter","a","b","age","showSorterTooltip","key","tags","map","tag","defineColorByPriority","priority","toUpperCase","width","notificationController","info","message","handleDeleteRow","tableData","data","pagination","loading","handleTableChange","x"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Table } from '@app/components/common/Table/Table';\nimport { Button } from '@app/components/common/buttons/Button/Button';\n//import {  } from 'antd';\nimport './index.css';\n\nconst CRUDPage: React.FC = () => {\n   const columns: ColumnsType<BasicTableRow> = [\n    {\n      title: t('common.name'),\n      dataIndex: 'name',\n      render: (text: string) => <span>{text}</span>,\n      filterMode: 'tree',\n      filterSearch: true,\n      filters: [\n        {\n          text: t('common.firstName'),\n          value: 'firstName',\n          children: [\n            {\n              text: 'Joe',\n              value: 'Joe',\n            },\n            {\n              text: 'Pavel',\n              value: 'Pavel',\n            },\n            {\n              text: 'Jim',\n              value: 'Jim',\n            },\n            {\n              text: 'Josh',\n              value: 'Josh',\n            },\n          ],\n        },\n        {\n          text: t('common.lastName'),\n          value: 'lastName',\n          children: [\n            {\n              text: 'Green',\n              value: 'Green',\n            },\n            {\n              text: 'Black',\n              value: 'Black',\n            },\n            {\n              text: 'Brown',\n              value: 'Brown',\n            },\n          ],\n        },\n      ],\n      onFilter: (value: string | number | boolean, record: BasicTableRow) => record.name.includes(value.toString()),\n    },\n    {\n      title: t('common.age'),\n      dataIndex: 'age',\n      sorter: (a: BasicTableRow, b: BasicTableRow) => a.age - b.age,\n      showSorterTooltip: false,\n    },\n    {\n      title: t('common.address'),\n      dataIndex: 'address',\n    },\n    {\n      title: t('common.tags'),\n      key: 'tags',\n      dataIndex: 'tags',\n      render: (tags: Tag[]) => (\n        <Row gutter={[10, 10]}>\n          {tags.map((tag: Tag) => {\n            return (\n              <Col key={tag.value}>\n                <Status color={defineColorByPriority(tag.priority)} text={tag.value.toUpperCase()} />\n              </Col>\n            );\n          })}\n        </Row>\n      ),\n    },\n    {\n      title: t('tables.actions'),\n      dataIndex: 'actions',\n      width: '15%',\n      render: (text: string, record: { name: string; key: number }) => {\n        return (\n          <Space>\n            <Button\n              type=\"ghost\"\n              onClick={() => {\n                notificationController.info({ message: t('tables.inviteMessage', { name: record.name }) });\n              }}\n            >\n              {t('tables.invite')}\n            </Button>\n            <Button type=\"default\" danger onClick={() => handleDeleteRow(record.key)}>\n              {t('tables.delete')}\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"table-content\">\n        <div className=\"table-actionbar\">\n          <Button severity=\"info\">添加</Button>\n          <Button severity=\"success\">修改</Button>\n          <Button severity=\"error\">删除</Button>\n        </div>\n        <div className=\"table-searchbar\">crud</div>\n        <Table\n      columns={columns}\n      dataSource={tableData.data}\n      pagination={tableData.pagination}\n      loading={tableData.loading}\n      onChange={handleTableChange}\n      scroll={{ x: 800 }}\n      bordered\n    />\n      </div>\n    </>\n  );\n};\nexport default CRUDPage;\n"]},"metadata":{},"sourceType":"module"}