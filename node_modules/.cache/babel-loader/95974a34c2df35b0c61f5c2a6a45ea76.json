{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/notifications/CheckboxColumn/CheckboxColumn.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Checkbox } from 'antd';\nimport * as S from './CheckboxColumn.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CheckboxColumn = function CheckboxColumn(_ref) {\n  _s();\n  var column = _ref.column,\n    handleCheck = _ref.handleCheck,\n    setTriggered = _ref.setTriggered;\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checkedList = _React$useState2[0],\n    setCheckedList = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    indeterminate = _React$useState4[0],\n    setIndeterminate = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    checkAll = _React$useState6[0],\n    setCheckAll = _React$useState6[1];\n  var onChange = function onChange(list) {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < column.data.length);\n    setCheckAll(list.length === column.data.length);\n    handleCheck(list);\n    setTriggered(true);\n  };\n  var onCheckAllChange = function onCheckAllChange(event) {\n    setCheckedList(event.target.checked ? column.data : []);\n    setIndeterminate(false);\n    setCheckAll(event.target.checked);\n    handleCheck(event.target.checked ? column.data : []);\n    setTriggered(true);\n  };\n  var props = {\n    indeterminate: indeterminate,\n    onChange: onCheckAllChange,\n    checked: checkAll\n  };\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(S.HeaderCol, {\n      children: column.headerRender ? column.headerRender(column.header, props) : column.header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n      value: checkedList,\n      onChange: onChange,\n      children: column.data.map(function (el, index) {\n        return /*#__PURE__*/_jsxDEV(S.Col, {\n          children: column.dataRender ? column.dataRender(el) : el\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n_s(CheckboxColumn, \"h0TsO4gF7pGNJGRAlwJGDhA8Suo=\");\n_c = CheckboxColumn;\nvar _c;\n$RefreshReg$(_c, \"CheckboxColumn\");","map":{"version":3,"names":["React","Checkbox","S","CheckboxColumn","column","handleCheck","setTriggered","useState","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","onChange","list","length","data","onCheckAllChange","event","target","checked","props","headerRender","header","map","el","index","dataRender"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/notifications/CheckboxColumn/CheckboxColumn.tsx"],"sourcesContent":["import React from 'react';\nimport { Checkbox } from 'antd';\nimport { Option } from '../interfaces';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport * as S from './CheckboxColumn.styles';\n\ninterface CheckboxColumnProps {\n  column: Omit<Option, 'id'>;\n  handleCheck: (list: CheckboxValueType[]) => void;\n  setTriggered: (state: boolean) => void;\n}\n\nexport const CheckboxColumn: React.FC<CheckboxColumnProps> = ({ column, handleCheck, setTriggered }) => {\n  const [checkedList, setCheckedList] = React.useState<CheckboxValueType[]>([]);\n  const [indeterminate, setIndeterminate] = React.useState(false);\n  const [checkAll, setCheckAll] = React.useState(false);\n\n  const onChange = (list: CheckboxValueType[]) => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < column.data.length);\n    setCheckAll(list.length === column.data.length);\n    handleCheck(list);\n    setTriggered(true);\n  };\n\n  const onCheckAllChange = (event: CheckboxChangeEvent) => {\n    setCheckedList(event.target.checked ? column.data : []);\n    setIndeterminate(false);\n    setCheckAll(event.target.checked);\n    handleCheck(event.target.checked ? column.data : []);\n    setTriggered(true);\n  };\n\n  const props = {\n    indeterminate,\n    onChange: onCheckAllChange,\n    checked: checkAll,\n  };\n\n  return (\n    <S.Wrapper>\n      <S.HeaderCol>{column.headerRender ? column.headerRender(column.header, props) : column.header}</S.HeaderCol>\n      <Checkbox.Group value={checkedList} onChange={onChange}>\n        {column.data.map((el, index) => (\n          <S.Col key={index}>{column.dataRender ? column.dataRender(el) : el}</S.Col>\n        ))}\n      </Checkbox.Group>\n    </S.Wrapper>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,MAAM;AAI/B,OAAO,KAAKC,CAAC,MAAM,yBAAyB;AAAC;AAQ7C,OAAO,IAAMC,cAA6C,GAAG,SAAhDA,cAA6C,OAA8C;EAAA;EAAA,IAAxCC,MAAM,QAANA,MAAM;IAAEC,WAAW,QAAXA,WAAW;IAAEC,YAAY,QAAZA,YAAY;EAC/F,sBAAsCN,KAAK,CAACO,QAAQ,CAAsB,EAAE,CAAC;IAAA;IAAtEC,WAAW;IAAEC,cAAc;EAClC,uBAA0CT,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAxDG,aAAa;IAAEC,gBAAgB;EACtC,uBAAgCX,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CK,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAyB,EAAK;IAC9CN,cAAc,CAACM,IAAI,CAAC;IACpBJ,gBAAgB,CAAC,CAAC,CAACI,IAAI,CAACC,MAAM,IAAID,IAAI,CAACC,MAAM,GAAGZ,MAAM,CAACa,IAAI,CAACD,MAAM,CAAC;IACnEH,WAAW,CAACE,IAAI,CAACC,MAAM,KAAKZ,MAAM,CAACa,IAAI,CAACD,MAAM,CAAC;IAC/CX,WAAW,CAACU,IAAI,CAAC;IACjBT,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAMY,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,KAA0B,EAAK;IACvDV,cAAc,CAACU,KAAK,CAACC,MAAM,CAACC,OAAO,GAAGjB,MAAM,CAACa,IAAI,GAAG,EAAE,CAAC;IACvDN,gBAAgB,CAAC,KAAK,CAAC;IACvBE,WAAW,CAACM,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;IACjChB,WAAW,CAACc,KAAK,CAACC,MAAM,CAACC,OAAO,GAAGjB,MAAM,CAACa,IAAI,GAAG,EAAE,CAAC;IACpDX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAMgB,KAAK,GAAG;IACZZ,aAAa,EAAbA,aAAa;IACbI,QAAQ,EAAEI,gBAAgB;IAC1BG,OAAO,EAAET;EACX,CAAC;EAED,oBACE,QAAC,CAAC,CAAC,OAAO;IAAA,wBACR,QAAC,CAAC,CAAC,SAAS;MAAA,UAAER,MAAM,CAACmB,YAAY,GAAGnB,MAAM,CAACmB,YAAY,CAACnB,MAAM,CAACoB,MAAM,EAAEF,KAAK,CAAC,GAAGlB,MAAM,CAACoB;IAAM;MAAA;MAAA;MAAA;IAAA,SAAe,eAC5G,QAAC,QAAQ,CAAC,KAAK;MAAC,KAAK,EAAEhB,WAAY;MAAC,QAAQ,EAAEM,QAAS;MAAA,UACpDV,MAAM,CAACa,IAAI,CAACQ,GAAG,CAAC,UAACC,EAAE,EAAEC,KAAK;QAAA,oBACzB,QAAC,CAAC,CAAC,GAAG;UAAA,UAAcvB,MAAM,CAACwB,UAAU,GAAGxB,MAAM,CAACwB,UAAU,CAACF,EAAE,CAAC,GAAGA;QAAE,GAAtDC,KAAK;UAAA;UAAA;UAAA;QAAA,SAA0D;MAAA,CAC5E;IAAC;MAAA;MAAA;MAAA;IAAA,SACa;EAAA;IAAA;IAAA;IAAA;EAAA,SACP;AAEhB,CAAC;AAAC,GArCWxB,cAA6C;AAAA,KAA7CA,cAA6C;AAAA;AAAA"},"metadata":{},"sourceType":"module"}