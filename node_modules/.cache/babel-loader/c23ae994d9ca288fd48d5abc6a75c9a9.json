{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/pages/uiComponentsPages/feedback/ProgressPage.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Progress } from '@app/components/common/Progress/Progress';\nimport { Button, ButtonGroup } from '@app/components/common/buttons/Button/Button';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ProgressPage = function ProgressPage() {\n  _s();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    percent = _useState2[0],\n    setPercent = _useState2[1];\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var primaryColor = 'var(--primary-color)';\n  var secondaryColor = 'var(--secondary-color)';\n  var successColor = 'var(--success-color)';\n  var errorColor = 'var(--error-color)';\n  var dynamicSuccessColor = useMemo(function () {\n    return percent === 100 ? successColor : primaryColor;\n  }, [percent]);\n  var increase = function increase() {\n    var newPercent = percent + 10;\n    if (newPercent > 100) {\n      newPercent = 100;\n    }\n    setPercent(newPercent);\n  };\n  var decrease = function decrease() {\n    var newPercent = percent - 10;\n    if (newPercent < 0) {\n      newPercent = 0;\n    }\n    setPercent(newPercent);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      children: t('common.progress')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(S.Card, {\n        title: t('progress.basic'),\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          percent: 30,\n          strokeColor: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n          percent: 50,\n          status: \"active\",\n          strokeColor: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n          percent: 70,\n          status: \"exception\",\n          strokeColor: errorColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n          percent: 100,\n          strokeColor: successColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n          percent: 50,\n          showInfo: false,\n          strokeColor: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Card, {\n        title: t('progress.circle'),\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          type: \"circle\",\n          percent: 75,\n          strokeColor: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n          type: \"circle\",\n          percent: 70,\n          status: \"exception\",\n          strokeColor: errorColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n          type: \"circle\",\n          percent: 100,\n          strokeColor: successColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Card, {\n        title: t('progress.dynamic'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Progress, {\n            percent: percent,\n            type: \"circle\",\n            strokeColor: dynamicSuccessColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n            percent: percent,\n            strokeColor: dynamicSuccessColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: decrease,\n              icon: /*#__PURE__*/_jsxDEV(MinusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 48\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: increase,\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 48\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Card, {\n        title: t('progress.medical-dashboard'),\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          type: \"dashboard\",\n          percent: 75,\n          strokeColor: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n          type: \"dashboard\",\n          percent: 75,\n          gapDegree: 30,\n          strokeColor: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(S.Card, {\n        title: t('progress.gradient'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Progress, {\n            strokeColor: {\n              '0%': primaryColor,\n              '100%': secondaryColor\n            },\n            percent: 99.9\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n            strokeColor: {\n              from: primaryColor,\n              to: secondaryColor\n            },\n            percent: 99.9,\n            status: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n            type: \"circle\",\n            strokeColor: {\n              '0%': primaryColor,\n              '100%': secondaryColor\n            },\n            percent: 90\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n            type: \"circle\",\n            strokeColor: {\n              '0%': primaryColor,\n              '100%': secondaryColor\n            },\n            percent: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n_s(ProgressPage, \"Upf5/WfiP/evyd84VjUorJkrEZA=\", false, function () {\n  return [useTranslation];\n});\n_c = ProgressPage;\nexport default ProgressPage;\nvar _c;\n$RefreshReg$(_c, \"ProgressPage\");","map":{"version":3,"names":["useState","useMemo","useTranslation","Col","MinusOutlined","PlusOutlined","Progress","Button","ButtonGroup","PageTitle","S","ProgressPage","percent","setPercent","t","primaryColor","secondaryColor","successColor","errorColor","dynamicSuccessColor","increase","newPercent","decrease","from","to"],"sources":["/workspace/ant-design-react-template/src/pages/uiComponentsPages/feedback/ProgressPage.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Progress } from '@app/components/common/Progress/Progress';\nimport { Button, ButtonGroup } from '@app/components/common/buttons/Button/Button';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\n\nconst ProgressPage: React.FC = () => {\n  const [percent, setPercent] = useState<number>(0);\n  const { t } = useTranslation();\n\n  const primaryColor = 'var(--primary-color)';\n  const secondaryColor = 'var(--secondary-color)';\n  const successColor = 'var(--success-color)';\n  const errorColor = 'var(--error-color)';\n\n  const dynamicSuccessColor = useMemo(() => (percent === 100 ? successColor : primaryColor), [percent]);\n\n  const increase = () => {\n    let newPercent = percent + 10;\n    if (newPercent > 100) {\n      newPercent = 100;\n    }\n    setPercent(newPercent);\n  };\n\n  const decrease = () => {\n    let newPercent = percent - 10;\n    if (newPercent < 0) {\n      newPercent = 0;\n    }\n    setPercent(newPercent);\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.progress')}</PageTitle>\n      <Col>\n        <S.Card title={t('progress.basic')}>\n          <Progress percent={30} strokeColor={primaryColor} />\n          <Progress percent={50} status=\"active\" strokeColor={primaryColor} />\n          <Progress percent={70} status=\"exception\" strokeColor={errorColor} />\n          <Progress percent={100} strokeColor={successColor} />\n          <Progress percent={50} showInfo={false} strokeColor={primaryColor} />\n        </S.Card>\n        <S.Card title={t('progress.circle')}>\n          <Progress type=\"circle\" percent={75} strokeColor={primaryColor} />\n          <Progress type=\"circle\" percent={70} status=\"exception\" strokeColor={errorColor} />\n          <Progress type=\"circle\" percent={100} strokeColor={successColor} />\n        </S.Card>\n        <S.Card title={t('progress.dynamic')}>\n          <div>\n            <Progress percent={percent} type=\"circle\" strokeColor={dynamicSuccessColor} />\n            <Progress percent={percent} strokeColor={dynamicSuccessColor} />\n            <ButtonGroup>\n              <Button onClick={decrease} icon={<MinusOutlined />} />\n              <Button onClick={increase} icon={<PlusOutlined />} />\n            </ButtonGroup>\n          </div>\n        </S.Card>\n        <S.Card title={t('progress.medical-dashboard')}>\n          <Progress type=\"dashboard\" percent={75} strokeColor={primaryColor} />\n          <Progress type=\"dashboard\" percent={75} gapDegree={30} strokeColor={primaryColor} />\n        </S.Card>\n        <S.Card title={t('progress.gradient')}>\n          <div>\n            <Progress\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={99.9}\n            />\n            <Progress\n              strokeColor={{\n                from: primaryColor,\n                to: secondaryColor,\n              }}\n              percent={99.9}\n              status=\"active\"\n            />\n            <Progress\n              type=\"circle\"\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={90}\n            />\n            <Progress\n              type=\"circle\"\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={100}\n            />\n          </div>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ProgressPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}