{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Col,Row}from'antd';import{useTranslation}from'react-i18next';import{PlusOutlined}from'@ant-design/icons';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{Input}from'@app/components/common/inputs/Input/Input';import{Select,Option}from'@app/components/common/selects/Select/Select';import{Button}from'@app/components/common/buttons/Button/Button';import{notificationController}from'@app/controllers/notificationController';import*as S from'./DynamicForm.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var DynamicForm=function DynamicForm(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFieldsChanged=_useState2[0],setFieldsChanged=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var _BaseButtonsForm$useF=BaseButtonsForm.useForm(),_BaseButtonsForm$useF2=_slicedToArray(_BaseButtonsForm$useF,1),form=_BaseButtonsForm$useF2[0];var _useTranslation=useTranslation(),t=_useTranslation.t;var areas=[{label:t('forms.dynamicFormLabels.beijing'),value:'Beijing'},{label:t('forms.dynamicFormLabels.shanghai'),value:'Shanghai'}];var sights={Beijing:[t('forms.dynamicFormLabels.tiananmen'),t('forms.dynamicFormLabels.greatWall')],Shanghai:[t('forms.dynamicFormLabels.orientalPearl'),t('forms.dynamicFormLabels.theBund')]};var onFinish=function onFinish(){var values=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};setLoading(true);setTimeout(function(){setLoading(false);setFieldsChanged(false);notificationController.success({message:t('common.success')});console.log(values);},1000);};var handleChange=function handleChange(){form.setFieldsValue({sights:[]});};return/*#__PURE__*/_jsxs(BaseButtonsForm,{form:form,name:\"dynamicForm\",isFieldsChanged:isFieldsChanged,loading:isLoading,onFinish:onFinish,autoComplete:\"off\",onFieldsChange:function onFieldsChange(){return setFieldsChanged(true);},children:[/*#__PURE__*/_jsx(BaseButtonsForm.Item,{name:\"area\",label:t('forms.dynamicFormLabels.area'),rules:[{required:true,message:t('forms.dynamicFormLabels.areaError')}],children:/*#__PURE__*/_jsx(Select,{options:areas,onChange:handleChange})}),/*#__PURE__*/_jsx(BaseButtonsForm.List,{name:\"sights\",children:function children(fields,_ref){var add=_ref.add,remove=_ref.remove;return/*#__PURE__*/_jsxs(_Fragment,{children:[fields.map(function(field){return/*#__PURE__*/_jsxs(Row,{wrap:false,gutter:[10,10],align:\"middle\",justify:\"space-between\",children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(BaseButtonsForm.Item,{noStyle:true// eslint-disable-next-line\n,shouldUpdate:function shouldUpdate(prevValues,curValues){return prevValues.area!==curValues.area||prevValues.sights!==curValues.sights;},children:function children(){return/*#__PURE__*/_jsx(BaseButtonsForm.Item,_objectSpread(_objectSpread({},field),{},{label:t('forms.dynamicFormLabels.sight'),name:[field.name,'sight'],fieldKey:[field.key,'sight'],rules:[{required:true,message:t('forms.dynamicFormLabels.sightError')}],children:/*#__PURE__*/_jsx(Select,{disabled:!form.getFieldValue('area'),children:(sights[form.getFieldValue('area')]||[]).map(function(item){return/*#__PURE__*/_jsx(Option,{value:item,children:item},item);})})}));}})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(BaseButtonsForm.Item,_objectSpread(_objectSpread({},field),{},{label:t('forms.dynamicFormLabels.price'),name:[field.name,'price'],fieldKey:[field.key,'price'],rules:[{required:true,message:t('forms.dynamicFormLabels.priceError')}],children:/*#__PURE__*/_jsxs(S.Wrapper,{children:[/*#__PURE__*/_jsx(Input,{}),/*#__PURE__*/_jsx(S.RemoveBtn,{onClick:function onClick(){return remove(field.name);}})]})}))})]},field.key);}),/*#__PURE__*/_jsx(BaseButtonsForm.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"dashed\",onClick:function onClick(){return add();},block:true,icon:/*#__PURE__*/_jsx(PlusOutlined,{}),children:t('forms.dynamicFormLabels.addSights')})})]});}})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/forms/DynamicForm/DynamicForm.tsx"],"names":["React","useState","Col","Row","useTranslation","PlusOutlined","BaseButtonsForm","Input","Select","Option","Button","notificationController","S","DynamicForm","isFieldsChanged","setFieldsChanged","isLoading","setLoading","useForm","form","t","areas","label","value","sights","Beijing","Shanghai","onFinish","values","setTimeout","success","message","console","log","handleChange","setFieldsValue","required","fields","add","remove","map","field","prevValues","curValues","area","name","key","getFieldValue","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { Input } from '@app/components/common/inputs/Input/Input';\nimport { Select, Option } from '@app/components/common/selects/Select/Select';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './DynamicForm.styles';\n\ninterface Sight {\n  [key: string]: string[];\n}\n\nexport const DynamicForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [form] = BaseButtonsForm.useForm();\n  const { t } = useTranslation();\n\n  const areas = [\n    { label: t('forms.dynamicFormLabels.beijing'), value: 'Beijing' },\n    { label: t('forms.dynamicFormLabels.shanghai'), value: 'Shanghai' },\n  ];\n\n  const sights: Sight = {\n    Beijing: [t('forms.dynamicFormLabels.tiananmen'), t('forms.dynamicFormLabels.greatWall')],\n    Shanghai: [t('forms.dynamicFormLabels.orientalPearl'), t('forms.dynamicFormLabels.theBund')],\n  };\n\n  const onFinish = (values = {}) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  const handleChange = () => {\n    form.setFieldsValue({ sights: [] });\n  };\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      name=\"dynamicForm\"\n      isFieldsChanged={isFieldsChanged}\n      loading={isLoading}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <BaseButtonsForm.Item\n        name=\"area\"\n        label={t('forms.dynamicFormLabels.area')}\n        rules={[{ required: true, message: t('forms.dynamicFormLabels.areaError') }]}\n      >\n        <Select options={areas} onChange={handleChange} />\n      </BaseButtonsForm.Item>\n      <BaseButtonsForm.List name=\"sights\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map((field) => (\n              <Row key={field.key} wrap={false} gutter={[10, 10]} align=\"middle\" justify=\"space-between\">\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    noStyle\n                    // eslint-disable-next-line\n                    shouldUpdate={(prevValues: any, curValues: any) =>\n                      prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\n                    }\n                  >\n                    {() => (\n                      <BaseButtonsForm.Item\n                        {...field}\n                        label={t('forms.dynamicFormLabels.sight')}\n                        name={[field.name, 'sight']}\n                        fieldKey={[field.key, 'sight']}\n                        rules={[{ required: true, message: t('forms.dynamicFormLabels.sightError') }]}\n                      >\n                        <Select disabled={!form.getFieldValue('area')}>\n                          {(sights[form.getFieldValue('area')] || []).map((item) => (\n                            <Option key={item} value={item}>\n                              {item}\n                            </Option>\n                          ))}\n                        </Select>\n                      </BaseButtonsForm.Item>\n                    )}\n                  </BaseButtonsForm.Item>\n                </Col>\n                <Col span={12}>\n                  <BaseButtonsForm.Item\n                    {...field}\n                    label={t('forms.dynamicFormLabels.price')}\n                    name={[field.name, 'price']}\n                    fieldKey={[field.key, 'price']}\n                    rules={[{ required: true, message: t('forms.dynamicFormLabels.priceError') }]}\n                  >\n                    <S.Wrapper>\n                      <Input />\n                      <S.RemoveBtn onClick={() => remove(field.name)} />\n                    </S.Wrapper>\n                  </BaseButtonsForm.Item>\n                </Col>\n              </Row>\n            ))}\n\n            <BaseButtonsForm.Item>\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                {t('forms.dynamicFormLabels.addSights')}\n              </Button>\n            </BaseButtonsForm.Item>\n          </>\n        )}\n      </BaseButtonsForm.List>\n    </BaseButtonsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}