{"ast":null,"code":"import React from'react';import{useTranslation}from'react-i18next';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{InputPassword}from'@app/components/common/inputs/InputPassword/InputPassword';import{passwordPattern}from'@app/constants/patterns';import{jsx as _jsx}from\"react/jsx-runtime\";export var NewPasswordItem=function NewPasswordItem(){var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(BaseButtonsForm.Item,{name:\"newPassword\",label:t('profile.nav.securitySettings.newPassword'),dependencies:['password'],rules:[{required:true,message:t('profile.nav.securitySettings.requiredPassword')},{pattern:passwordPattern,message:t('profile.nav.securitySettings.notValidPassword')},function(_ref){var getFieldValue=_ref.getFieldValue;return{validator:function validator(_,value){if(!value||getFieldValue('password')!==value){return Promise.resolve();}return Promise.reject(new Error(t('profile.nav.securitySettings.samePassword')));}};}],children:/*#__PURE__*/_jsx(InputPassword,{})});};","map":{"version":3,"names":["React","useTranslation","BaseButtonsForm","InputPassword","passwordPattern","NewPasswordItem","t","required","message","pattern","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport { passwordPattern } from '@app/constants/patterns';\n\nexport const NewPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"newPassword\"\n      label={t('profile.nav.securitySettings.newPassword')}\n      dependencies={['password']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        {\n          pattern: passwordPattern,\n          message: t('profile.nav.securitySettings.notValidPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') !== value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.samePassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,eAAe,KAAQ,8DAA8D,CAC9F,OAASC,aAAa,KAAQ,2DAA2D,CACzF,OAASC,eAAe,KAAQ,yBAAyB,CAAC,2CAE1D,MAAO,IAAMC,gBAAyB,CAAG,QAA5BA,gBAAyB,EAAS,CAC7C,oBAAcJ,cAAc,EAAE,CAAtBK,CAAC,iBAADA,CAAC,CAET,mBACE,KAAC,eAAe,CAAC,IAAI,EACnB,IAAI,CAAC,aAAa,CAClB,KAAK,CAAEA,CAAC,CAAC,0CAA0C,CAAE,CACrD,YAAY,CAAE,CAAC,UAAU,CAAE,CAC3B,KAAK,CAAE,CACL,CACEC,QAAQ,CAAE,IAAI,CACdC,OAAO,CAAEF,CAAC,CAAC,+CAA+C,CAC5D,CAAC,CACD,CACEG,OAAO,CAAEL,eAAe,CACxBI,OAAO,CAAEF,CAAC,CAAC,+CAA+C,CAC5D,CAAC,CACD,kBAAGI,cAAa,MAAbA,aAAa,OAAQ,CACtBC,SAAS,oBAACC,CAAC,CAAEC,KAAK,CAAE,CAClB,GAAI,CAACA,KAAK,EAAIH,aAAa,CAAC,UAAU,CAAC,GAAKG,KAAK,CAAE,CACjD,MAAOC,QAAO,CAACC,OAAO,EAAE,CAC1B,CACA,MAAOD,QAAO,CAACE,MAAM,CAAC,GAAIC,MAAK,CAACX,CAAC,CAAC,2CAA2C,CAAC,CAAC,CAAC,CAClF,CACF,CAAC,EAAC,CACF,uBAEF,KAAC,aAAa,IAAG,EACI,CAE3B,CAAC"},"metadata":{},"sourceType":"module"}