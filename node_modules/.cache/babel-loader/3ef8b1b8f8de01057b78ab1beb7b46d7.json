{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/screeningsFriends/DesktopScreenings/DesktopScreenings.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { LeftOutlined } from '@ant-design/icons';\nimport { useResponsive } from 'hooks/useResponsive';\nimport * as S from './DesktopScreenings.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var DesktopScreenings = function DesktopScreenings(_ref) {\n  _s();\n\n  var screeningsItems = _ref.screeningsItems,\n      isVisibleMenu = _ref.isVisibleMenu,\n      setVisibleMenu = _ref.setVisibleMenu;\n\n  var _useResponsive = useResponsive(),\n      isDesktop = _useResponsive.isDesktop;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var colItems = useMemo(function () {\n    return screeningsItems.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this);\n    });\n  }, [screeningsItems]);\n\n  var handleClick = function handleClick() {\n    setVisibleMenu(!isVisibleMenu);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [{\n      xs: 10,\n      sm: 10,\n      xl: 22\n    }, {\n      xs: 10,\n      sm: 10,\n      xl: 22\n    }],\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        justify: isVisibleMenu ? 'space-between' : 'center',\n        children: [isVisibleMenu && /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(S.Title, {\n            children: t('medical-dashboard.latestScreenings.friends')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this), isDesktop && /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(LeftOutlined, {\n            onClick: handleClick,\n            rotate: isVisibleMenu ? 0 : 180\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), colItems]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DesktopScreenings, \"ceM1aUQELofbY9KWIkFp0QGKpYo=\", false, function () {\n  return [useResponsive, useTranslation];\n});\n\n_c = DesktopScreenings;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesktopScreenings\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/screeningsFriends/DesktopScreenings/DesktopScreenings.tsx"],"names":["React","useMemo","Col","Row","useTranslation","LeftOutlined","useResponsive","S","DesktopScreenings","screeningsItems","isVisibleMenu","setVisibleMenu","isDesktop","t","colItems","map","item","index","handleClick","xs","sm","xl"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA,OAAO,KAAKC,CAAZ,MAAmB,4BAAnB;;AASA,OAAO,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAsD,OAI7D;AAAA;;AAAA,MAHJC,eAGI,QAHJA,eAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,cACI,QADJA,cACI;;AACJ,uBAAsBL,aAAa,EAAnC;AAAA,MAAQM,SAAR,kBAAQA,SAAR;;AAEA,wBAAcR,cAAc,EAA5B;AAAA,MAAQS,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,QAAQ,GAAGb,OAAO,CACtB;AAAA,WACEQ,eAAe,CAACM,GAAhB,CAAoB,UAACC,IAAD,EAAOC,KAAP;AAAA,0BAClB,QAAC,GAAD;AAAiB,QAAA,IAAI,EAAE,EAAvB;AAAA,kBACGD;AADH,SAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,eADkB;AAAA,KAApB,CADF;AAAA,GADsB,EAOtB,CAACR,eAAD,CAPsB,CAAxB;;AAUA,MAAMS,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBP,IAAAA,cAAc,CAAC,CAACD,aAAF,CAAd;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AACE,IAAA,MAAM,EAAE,CACN;AAAES,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,EAAE,EAAE,EAAd;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KADM,EAEN;AAAEF,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,EAAE,EAAE,EAAd;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAFM,CADV;AAAA,4BAME,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAEX,aAAa,GAAG,eAAH,GAAqB,QAAhD;AAAA,mBACGA,aAAa,iBACZ,QAAC,GAAD;AAAA,iCACE,QAAC,CAAD,CAAG,KAAH;AAAA,sBAAUG,CAAC,CAAC,4CAAD;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAOGD,SAAS,iBACR,QAAC,GAAD;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEM,WAAvB;AAAoC,YAAA,MAAM,EAAER,aAAa,GAAG,CAAH,GAAO;AAAhE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aANF,EAsBGI,QAtBH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA0BD,CAjDM;;GAAMN,iB;UAKWF,a,EAERF,c;;;KAPHI,iB","sourcesContent":["import React, { useMemo } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { LeftOutlined } from '@ant-design/icons';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { ScreeningsProps } from '../interfaces';\nimport * as S from './DesktopScreenings.styles';\n\ninterface CollapseProps {\n  isVisibleMenu: boolean;\n  setVisibleMenu: (state: boolean) => void;\n}\n\ntype DesktopScreeningsProps = ScreeningsProps & CollapseProps;\n\nexport const DesktopScreenings: React.FC<DesktopScreeningsProps> = ({\n  screeningsItems,\n  isVisibleMenu,\n  setVisibleMenu,\n}) => {\n  const { isDesktop } = useResponsive();\n\n  const { t } = useTranslation();\n\n  const colItems = useMemo(\n    () =>\n      screeningsItems.map((item, index) => (\n        <Col key={index} span={24}>\n          {item}\n        </Col>\n      )),\n    [screeningsItems],\n  );\n\n  const handleClick = () => {\n    setVisibleMenu(!isVisibleMenu);\n  };\n\n  return (\n    <Row\n      gutter={[\n        { xs: 10, sm: 10, xl: 22 },\n        { xs: 10, sm: 10, xl: 22 },\n      ]}\n    >\n      <Col span={24}>\n        <Row justify={isVisibleMenu ? 'space-between' : 'center'}>\n          {isVisibleMenu && (\n            <Col>\n              <S.Title>{t('medical-dashboard.latestScreenings.friends')}</S.Title>\n            </Col>\n          )}\n\n          {isDesktop && (\n            <Col>\n              <LeftOutlined onClick={handleClick} rotate={isVisibleMenu ? 0 : 180} />\n            </Col>\n          )}\n        </Row>\n      </Col>\n\n      {colItems}\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}