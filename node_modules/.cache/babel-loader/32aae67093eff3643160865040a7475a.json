{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{useTranslation}from'react-i18next';import{Col,Row}from'antd';import{MonthSelect}from'components/common/selects/MonthSelect/MonthSelect';import{StatisticsSelect}from'components/common/selects/StatisticsSelect/StatisticsSelect';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ScreeningsHeader=function ScreeningsHeader(_ref){var currentStatistics=_ref.currentStatistics,setCurrentStatistics=_ref.setCurrentStatistics;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(Row,{gutter:[0,{xs:15,sm:15,md:20}],align:\"middle\",children:[/*#__PURE__*/_jsx(Col,{xs:24,xl:12,children:t('medical-dashboard.latestScreenings.title')}),/*#__PURE__*/_jsx(Col,{xs:24,xl:12,children:/*#__PURE__*/_jsxs(Row,{gutter:[{xs:15,sm:15,md:20},{xs:15,sm:15,md:20}],children:[/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(MonthSelect,{value:currentStatistics.month,width:\"100%\",bordered:false,shadow:true,placeholder:t('medical-dashboard.latestScreenings.month'),onChange:function onChange(month){return setCurrentStatistics(function(prev){return _objectSpread(_objectSpread({},prev),{},{month:month});});}})})}),/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(StatisticsSelect,{value:currentStatistics.statistic,width:\"100%\",bordered:false,shadow:true,placeholder:t('medical-dashboard.latestScreenings.statistics'),onChange:function onChange(statistic){return setCurrentStatistics(function(prev){return _objectSpread(_objectSpread({},prev),{},{statistic:statistic});});}})})})]})})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/ScreeningsHeader/ScreeningsHeader.tsx"],"names":["React","useTranslation","Col","Row","MonthSelect","StatisticsSelect","ScreeningsHeader","currentStatistics","setCurrentStatistics","t","xs","sm","md","month","prev","statistic"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,MAAzB,CAEA,OAASC,WAAT,KAA4B,mDAA5B,CACA,OAASC,gBAAT,KAAiC,6DAAjC,C,wFAOA,MAAO,IAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAAiD,IAA9CC,CAAAA,iBAA8C,MAA9CA,iBAA8C,CAA3BC,oBAA2B,MAA3BA,oBAA2B,CAChH,oBAAcP,cAAc,EAA5B,CAAQQ,CAAR,iBAAQA,CAAR,CAEA,mBACE,MAAC,GAAD,EAAK,MAAM,CAAE,CAAC,CAAD,CAAI,CAAEC,EAAE,CAAE,EAAN,CAAUC,EAAE,CAAE,EAAd,CAAkBC,EAAE,CAAE,EAAtB,CAAJ,CAAb,CAA8C,KAAK,CAAC,QAApD,wBACE,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,UACGH,CAAC,CAAC,0CAAD,CADJ,EADF,cAKE,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,uBACE,MAAC,GAAD,EACE,MAAM,CAAE,CACN,CAAEC,EAAE,CAAE,EAAN,CAAUC,EAAE,CAAE,EAAd,CAAkBC,EAAE,CAAE,EAAtB,CADM,CAEN,CAAEF,EAAE,CAAE,EAAN,CAAUC,EAAE,CAAE,EAAd,CAAkBC,EAAE,CAAE,EAAtB,CAFM,CADV,wBAME,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,uBACE,oCACE,KAAC,WAAD,EACE,KAAK,CAAEL,iBAAiB,CAACM,KAD3B,CAEE,KAAK,CAAC,MAFR,CAGE,QAAQ,CAAE,KAHZ,CAIE,MAAM,KAJR,CAKE,WAAW,CAAEJ,CAAC,CAAC,0CAAD,CALhB,CAME,QAAQ,CAAE,kBAACI,KAAD,QAAWL,CAAAA,oBAAoB,CAAC,SAACM,IAAD,wCAAgBA,IAAhB,MAAsBD,KAAK,CAALA,KAAtB,IAAD,CAA/B,EANZ,EADF,EADF,EANF,cAmBE,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,uBACE,oCACE,KAAC,gBAAD,EACE,KAAK,CAAEN,iBAAiB,CAACQ,SAD3B,CAEE,KAAK,CAAC,MAFR,CAGE,QAAQ,CAAE,KAHZ,CAIE,MAAM,KAJR,CAKE,WAAW,CAAEN,CAAC,CAAC,+CAAD,CALhB,CAME,QAAQ,CAAE,kBAACM,SAAD,QACRP,CAAAA,oBAAoB,CAAC,SAACM,IAAD,wCAAgBA,IAAhB,MAAsBC,SAAS,CAATA,SAAtB,IAAD,CADZ,EANZ,EADF,EADF,EAnBF,GADF,EALF,GADF,CA4CD,CA/CM","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { CurrentStatisticsState } from '../ScreeningsCard/ScreeningsCard';\nimport { MonthSelect } from 'components/common/selects/MonthSelect/MonthSelect';\nimport { StatisticsSelect } from 'components/common/selects/StatisticsSelect/StatisticsSelect';\n\ninterface ScreeningsHeaderProps {\n  currentStatistics: CurrentStatisticsState;\n  setCurrentStatistics: (func: (state: CurrentStatisticsState) => CurrentStatisticsState) => void;\n}\n\nexport const ScreeningsHeader: React.FC<ScreeningsHeaderProps> = ({ currentStatistics, setCurrentStatistics }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Row gutter={[0, { xs: 15, sm: 15, md: 20 }]} align=\"middle\">\n      <Col xs={24} xl={12}>\n        {t('medical-dashboard.latestScreenings.title')}\n      </Col>\n\n      <Col xs={24} xl={12}>\n        <Row\n          gutter={[\n            { xs: 15, sm: 15, md: 20 },\n            { xs: 15, sm: 15, md: 20 },\n          ]}\n        >\n          <Col xs={12}>\n            <label>\n              <MonthSelect\n                value={currentStatistics.month}\n                width=\"100%\"\n                bordered={false}\n                shadow\n                placeholder={t('medical-dashboard.latestScreenings.month')}\n                onChange={(month) => setCurrentStatistics((prev) => ({ ...prev, month } as CurrentStatisticsState))}\n              />\n            </label>\n          </Col>\n\n          <Col xs={12}>\n            <label>\n              <StatisticsSelect\n                value={currentStatistics.statistic}\n                width=\"100%\"\n                bordered={false}\n                shadow\n                placeholder={t('medical-dashboard.latestScreenings.statistics')}\n                onChange={(statistic) =>\n                  setCurrentStatistics((prev) => ({ ...prev, statistic } as CurrentStatisticsState))\n                }\n              />\n            </label>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}