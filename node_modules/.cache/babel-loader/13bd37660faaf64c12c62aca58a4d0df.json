{"ast":null,"code":"import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Empty}from'antd';import{ArticleCard}from'@app/components/common/ArticleCard/ArticleCard';import{Feed}from'@app/components/common/Feed/Feed';import{NewsFilter}from'@app/components/apps/newsFeed/NewsFilter/NewsFilter';import{getNews}from'@app/api/news.api';import{jsx as _jsx}from\"react/jsx-runtime\";export var NewsFeed=function NewsFeed(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),news=_useState2[0],setNews=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,1),hasMore=_useState4[0];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loaded=_useState6[0],setLoaded=_useState6[1];useEffect(function(){getNews().then(function(res){return setNews(res);}).finally(function(){return setLoaded(true);});},[]);var next=function next(){getNews().then(function(newNews){return setNews(news.concat(newNews));});};return/*#__PURE__*/_jsx(NewsFilter,{news:news,children:function children(_ref){var filteredNews=_ref.filteredNews;return filteredNews!==null&&filteredNews!==void 0&&filteredNews.length||!loaded?/*#__PURE__*/_jsx(Feed,{next:next,hasMore:hasMore,children:filteredNews.map(function(post,index){return/*#__PURE__*/_jsx(ArticleCard,{title:post.title,description:post.text,date:post.date,imgUrl:post.img,author:post.author,avatar:post.avatarUrl,tags:post.tags},index);})}):/*#__PURE__*/_jsx(Empty,{});}});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/apps/newsFeed/NewsFeed.tsx"],"names":["React","useEffect","useState","Empty","ArticleCard","Feed","NewsFilter","getNews","NewsFeed","news","setNews","hasMore","loaded","setLoaded","then","res","finally","next","newNews","concat","filteredNews","length","map","post","index","title","text","date","img","author","avatarUrl","tags"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,KAAT,KAAsB,MAAtB,CACA,OAASC,WAAT,KAA4B,gDAA5B,CACA,OAASC,IAAT,KAAqB,kCAArB,CACA,OAASC,UAAT,KAA2B,qDAA3B,CACA,OAASC,OAAT,KAA8B,mBAA9B,C,2CAEA,MAAO,IAAMC,CAAAA,QAAkB,CAAG,QAArBA,CAAAA,QAAqB,EAAM,CACtC,cAAwBN,QAAQ,CAAS,EAAT,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eACA,eAAkBR,QAAQ,CAAU,IAAV,CAA1B,yCAAOS,OAAP,eACA,eAA4BT,QAAQ,CAAU,KAAV,CAApC,yCAAOU,MAAP,eAAeC,SAAf,eAEAZ,SAAS,CAAC,UAAM,CACdM,OAAO,GACJO,IADH,CACQ,SAACC,GAAD,QAASL,CAAAA,OAAO,CAACK,GAAD,CAAhB,EADR,EAEGC,OAFH,CAEW,iBAAMH,CAAAA,SAAS,CAAC,IAAD,CAAf,EAFX,EAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMI,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjBV,OAAO,GAAGO,IAAV,CAAe,SAACI,OAAD,QAAaR,CAAAA,OAAO,CAACD,IAAI,CAACU,MAAL,CAAYD,OAAZ,CAAD,CAApB,EAAf,EACD,CAFD,CAIA,mBACE,KAAC,UAAD,EAAY,IAAI,CAAET,IAAlB,UACG,2BAAGW,CAAAA,YAAH,MAAGA,YAAH,OACCA,CAAAA,YAAY,OAAZ,EAAAA,YAAY,SAAZ,EAAAA,YAAY,CAAEC,MAAd,EAAwB,CAACT,MAAzB,cACE,KAAC,IAAD,EAAM,IAAI,CAAEK,IAAZ,CAAkB,OAAO,CAAEN,OAA3B,UACGS,YAAY,CAACE,GAAb,CAAiB,SAACC,IAAD,CAAOC,KAAP,qBAChB,KAAC,WAAD,EAEE,KAAK,CAAED,IAAI,CAACE,KAFd,CAGE,WAAW,CAAEF,IAAI,CAACG,IAHpB,CAIE,IAAI,CAAEH,IAAI,CAACI,IAJb,CAKE,MAAM,CAAEJ,IAAI,CAACK,GALf,CAME,MAAM,CAAEL,IAAI,CAACM,MANf,CAOE,MAAM,CAAEN,IAAI,CAACO,SAPf,CAQE,IAAI,CAAEP,IAAI,CAACQ,IARb,EACOP,KADP,CADgB,EAAjB,CADH,EADF,cAgBE,KAAC,KAAD,IAjBH,EADH,EADF,CAwBD,CAvCM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Empty } from 'antd';\nimport { ArticleCard } from '@app/components/common/ArticleCard/ArticleCard';\nimport { Feed } from '@app/components/common/Feed/Feed';\nimport { NewsFilter } from '@app/components/apps/newsFeed/NewsFilter/NewsFilter';\nimport { getNews, Post } from '@app/api/news.api';\n\nexport const NewsFeed: React.FC = () => {\n  const [news, setNews] = useState<Post[]>([]);\n  const [hasMore] = useState<boolean>(true);\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  useEffect(() => {\n    getNews()\n      .then((res) => setNews(res))\n      .finally(() => setLoaded(true));\n  }, []);\n\n  const next = () => {\n    getNews().then((newNews) => setNews(news.concat(newNews)));\n  };\n\n  return (\n    <NewsFilter news={news}>\n      {({ filteredNews }) =>\n        filteredNews?.length || !loaded ? (\n          <Feed next={next} hasMore={hasMore}>\n            {filteredNews.map((post, index) => (\n              <ArticleCard\n                key={index}\n                title={post.title}\n                description={post.text}\n                date={post.date}\n                imgUrl={post.img}\n                author={post.author}\n                avatar={post.avatarUrl}\n                tags={post.tags}\n              />\n            ))}\n          </Feed>\n        ) : (\n          <Empty />\n        )\n      }\n    </NewsFilter>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}