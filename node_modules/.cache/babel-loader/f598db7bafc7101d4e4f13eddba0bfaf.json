{"ast":null,"code":"import React,{useMemo}from'react';import{Avatar}from'antd';import{useTranslation}from'react-i18next';import{Dates}from'constants/Dates';import{Status}from'../Status/Status';import{paymentStatuses}from'constants/paymentStatuses';import{defineColorByPriority,getCurrencyPrice}from'utils/utils';import*as S from'./PaymentsTable.styles';import{Button}from'components/common/buttons/Button/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var PaymentsTable=function PaymentsTable(_ref){var payments=_ref.payments;var _useTranslation=useTranslation(),t=_useTranslation.t;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar columns=useMemo(function(){return[{title:t('profile.nav.payments.recipient'),dataIndex:'recipient',key:'recipient',render:function render(recipient){return/*#__PURE__*/_jsxs(S.RecipientWrapper,{children:[/*#__PURE__*/_jsx(Avatar,{src:recipient.img,alt:recipient.name}),recipient.name]});},align:'center'},{title:t('profile.nav.payments.date'),dataIndex:'date',key:'date',render:function render(text){return Dates.format(text,'LL');},sorter:function sorter(a,b){return a.date-b.date;},align:'center'},{title:t('profile.nav.payments.status.title'),dataIndex:'status',key:'status',render:function render(status){return/*#__PURE__*/_jsx(Status,{color:defineColorByPriority(status.priority),text:t(status.name).toUpperCase()});},align:'center'},{title:t('profile.nav.payments.totalAmount'),dataIndex:'totalAmount',key:'totalAmount',align:'center'},{title:'',dataIndex:'details',key:'details',align:'center',render:function render(){return/*#__PURE__*/_jsx(Button,{type:\"link\",children:t('profile.nav.payments.details')});}}];},[t]);var dataSource=useMemo(function(){return payments.map(function(payment,index){return{key:index,recipient:{name:payment.recipient,img:payment.imgUrl},date:payment.date,status:paymentStatuses.find(function(status){return status.id===payment.status;}),totalAmount:getCurrencyPrice(payment.amount,payment.currency),details:payment};});},[payments]);return/*#__PURE__*/_jsx(S.PaymentHistoryTable,{size:\"middle\",columns:columns,dataSource:dataSource,pagination:false});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable.tsx"],"names":["React","useMemo","Avatar","useTranslation","Dates","Status","paymentStatuses","defineColorByPriority","getCurrencyPrice","S","Button","PaymentsTable","payments","t","columns","title","dataIndex","key","render","recipient","img","name","align","text","format","sorter","a","b","date","status","priority","toUpperCase","dataSource","map","payment","index","imgUrl","find","id","totalAmount","amount","currency","details"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { ColumnType } from 'antd/lib/table';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport { paymentStatuses, PaymentStatus } from 'constants/paymentStatuses';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport { Payment } from 'api/paymentHistory.api';\nimport * as S from './PaymentsTable.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\n\ninterface Recipient {\n  name: string;\n  img: string;\n}\n\ninterface Status {\n  key: number;\n  recipient: Recipient;\n  date: number;\n  status: PaymentStatus | undefined;\n  totalAmount: string | React.ReactNode;\n}\n\ninterface PaymentsTableProps {\n  payments: Payment[];\n}\n\nexport const PaymentsTable: React.FC<PaymentsTableProps> = ({ payments }) => {\n  const { t } = useTranslation();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const columns: ColumnType<any>[] = useMemo(() => {\n    return [\n      {\n        title: t('profile.nav.payments.recipient'),\n        dataIndex: 'recipient',\n        key: 'recipient',\n        render: (recipient: Recipient) => (\n          <S.RecipientWrapper>\n            <Avatar src={recipient.img} alt={recipient.name} />\n            {recipient.name}\n          </S.RecipientWrapper>\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.date'),\n        dataIndex: 'date',\n        key: 'date',\n        render: (text: string) => Dates.format(text, 'LL'),\n        sorter: (a, b) => a.date - b.date,\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.status.title'),\n        dataIndex: 'status',\n        key: 'status',\n        render: (status: PaymentStatus) => (\n          <Status color={defineColorByPriority(status.priority)} text={t(status.name).toUpperCase()} />\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.totalAmount'),\n        dataIndex: 'totalAmount',\n        key: 'totalAmount',\n        align: 'center',\n      },\n      {\n        title: '',\n        dataIndex: 'details',\n        key: 'details',\n        align: 'center',\n        render: () => <Button type=\"link\">{t('profile.nav.payments.details')}</Button>,\n      },\n    ];\n  }, [t]);\n\n  const dataSource: Status[] = useMemo(\n    () =>\n      payments.map((payment, index) => {\n        return {\n          key: index,\n          recipient: {\n            name: payment.recipient,\n            img: payment.imgUrl,\n          },\n          date: payment.date,\n          status: paymentStatuses.find((status) => status.id === payment.status),\n          totalAmount: getCurrencyPrice(payment.amount, payment.currency),\n          details: payment,\n        };\n      }),\n    [payments],\n  );\n\n  return <S.PaymentHistoryTable size=\"middle\" columns={columns} dataSource={dataSource} pagination={false} />;\n};\n"]},"metadata":{},"sourceType":"module"}