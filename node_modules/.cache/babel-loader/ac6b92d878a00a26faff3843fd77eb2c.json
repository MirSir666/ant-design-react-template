{"ast":null,"code":"import _slicedToArray from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useMemo}from'react';import{useTranslation}from'react-i18next';import{Col}from'antd';import{MinusOutlined,PlusOutlined}from'@ant-design/icons';import{Progress}from'@app/components/common/Progress/Progress';import{Button,ButtonGroup}from'@app/components/common/buttons/Button/Button';import{PageTitle}from'@app/components/common/PageTitle/PageTitle';import*as S from'@app/pages/uiComponentsPages//UIComponentsPage.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ProgressPage=function ProgressPage(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),percent=_useState2[0],setPercent=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var primaryColor='var(--primary-color)';var secondaryColor='var(--secondary-color)';var successColor='var(--success-color)';var errorColor='var(--error-color)';var dynamicSuccessColor=useMemo(function(){return percent===100?successColor:primaryColor;},[percent]);var increase=function increase(){var newPercent=percent+10;if(newPercent>100){newPercent=100;}setPercent(newPercent);};var decrease=function decrease(){var newPercent=percent-10;if(newPercent<0){newPercent=0;}setPercent(newPercent);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageTitle,{children:t('common.progress')}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(S.Card,{title:t('progress.basic'),children:[/*#__PURE__*/_jsx(Progress,{percent:30,strokeColor:primaryColor}),/*#__PURE__*/_jsx(Progress,{percent:50,status:\"active\",strokeColor:primaryColor}),/*#__PURE__*/_jsx(Progress,{percent:70,status:\"exception\",strokeColor:errorColor}),/*#__PURE__*/_jsx(Progress,{percent:100,strokeColor:successColor}),/*#__PURE__*/_jsx(Progress,{percent:50,showInfo:false,strokeColor:primaryColor})]}),/*#__PURE__*/_jsxs(S.Card,{title:t('progress.circle'),children:[/*#__PURE__*/_jsx(Progress,{type:\"circle\",percent:75,strokeColor:primaryColor}),/*#__PURE__*/_jsx(Progress,{type:\"circle\",percent:70,status:\"exception\",strokeColor:errorColor}),/*#__PURE__*/_jsx(Progress,{type:\"circle\",percent:100,strokeColor:successColor})]}),/*#__PURE__*/_jsx(S.Card,{title:t('progress.dynamic'),children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Progress,{percent:percent,type:\"circle\",strokeColor:dynamicSuccessColor}),/*#__PURE__*/_jsx(Progress,{percent:percent,strokeColor:dynamicSuccessColor}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{onClick:decrease,icon:/*#__PURE__*/_jsx(MinusOutlined,{})}),/*#__PURE__*/_jsx(Button,{onClick:increase,icon:/*#__PURE__*/_jsx(PlusOutlined,{})})]})]})}),/*#__PURE__*/_jsxs(S.Card,{title:t('progress.medical-dashboard'),children:[/*#__PURE__*/_jsx(Progress,{type:\"dashboard\",percent:75,strokeColor:primaryColor}),/*#__PURE__*/_jsx(Progress,{type:\"dashboard\",percent:75,gapDegree:30,strokeColor:primaryColor})]}),/*#__PURE__*/_jsx(S.Card,{title:t('progress.gradient'),children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Progress,{strokeColor:{'0%':primaryColor,'100%':secondaryColor},percent:99.9}),/*#__PURE__*/_jsx(Progress,{strokeColor:{from:primaryColor,to:secondaryColor},percent:99.9,status:\"active\"}),/*#__PURE__*/_jsx(Progress,{type:\"circle\",strokeColor:{'0%':primaryColor,'100%':secondaryColor},percent:90}),/*#__PURE__*/_jsx(Progress,{type:\"circle\",strokeColor:{'0%':primaryColor,'100%':secondaryColor},percent:100})]})})]})]});};export default ProgressPage;","map":{"version":3,"names":["useState","useMemo","useTranslation","Col","MinusOutlined","PlusOutlined","Progress","Button","ButtonGroup","PageTitle","S","ProgressPage","percent","setPercent","t","primaryColor","secondaryColor","successColor","errorColor","dynamicSuccessColor","increase","newPercent","decrease","from","to"],"sources":["/workspace/ant-design-react-template/src/pages/uiComponentsPages/feedback/ProgressPage.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Progress } from '@app/components/common/Progress/Progress';\nimport { Button, ButtonGroup } from '@app/components/common/buttons/Button/Button';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\n\nconst ProgressPage: React.FC = () => {\n  const [percent, setPercent] = useState<number>(0);\n  const { t } = useTranslation();\n\n  const primaryColor = 'var(--primary-color)';\n  const secondaryColor = 'var(--secondary-color)';\n  const successColor = 'var(--success-color)';\n  const errorColor = 'var(--error-color)';\n\n  const dynamicSuccessColor = useMemo(() => (percent === 100 ? successColor : primaryColor), [percent]);\n\n  const increase = () => {\n    let newPercent = percent + 10;\n    if (newPercent > 100) {\n      newPercent = 100;\n    }\n    setPercent(newPercent);\n  };\n\n  const decrease = () => {\n    let newPercent = percent - 10;\n    if (newPercent < 0) {\n      newPercent = 0;\n    }\n    setPercent(newPercent);\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.progress')}</PageTitle>\n      <Col>\n        <S.Card title={t('progress.basic')}>\n          <Progress percent={30} strokeColor={primaryColor} />\n          <Progress percent={50} status=\"active\" strokeColor={primaryColor} />\n          <Progress percent={70} status=\"exception\" strokeColor={errorColor} />\n          <Progress percent={100} strokeColor={successColor} />\n          <Progress percent={50} showInfo={false} strokeColor={primaryColor} />\n        </S.Card>\n        <S.Card title={t('progress.circle')}>\n          <Progress type=\"circle\" percent={75} strokeColor={primaryColor} />\n          <Progress type=\"circle\" percent={70} status=\"exception\" strokeColor={errorColor} />\n          <Progress type=\"circle\" percent={100} strokeColor={successColor} />\n        </S.Card>\n        <S.Card title={t('progress.dynamic')}>\n          <div>\n            <Progress percent={percent} type=\"circle\" strokeColor={dynamicSuccessColor} />\n            <Progress percent={percent} strokeColor={dynamicSuccessColor} />\n            <ButtonGroup>\n              <Button onClick={decrease} icon={<MinusOutlined />} />\n              <Button onClick={increase} icon={<PlusOutlined />} />\n            </ButtonGroup>\n          </div>\n        </S.Card>\n        <S.Card title={t('progress.medical-dashboard')}>\n          <Progress type=\"dashboard\" percent={75} strokeColor={primaryColor} />\n          <Progress type=\"dashboard\" percent={75} gapDegree={30} strokeColor={primaryColor} />\n        </S.Card>\n        <S.Card title={t('progress.gradient')}>\n          <div>\n            <Progress\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={99.9}\n            />\n            <Progress\n              strokeColor={{\n                from: primaryColor,\n                to: secondaryColor,\n              }}\n              percent={99.9}\n              status=\"active\"\n            />\n            <Progress\n              type=\"circle\"\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={90}\n            />\n            <Progress\n              type=\"circle\"\n              strokeColor={{\n                '0%': primaryColor,\n                '100%': secondaryColor,\n              }}\n              percent={100}\n            />\n          </div>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ProgressPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}