{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/activityCard/ActivityChart.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { dashboardPaddings } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { Dates } from '@app/constants/Dates';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { graphic } from 'echarts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ActivityChart = function ActivityChart(_ref) {\n  _s();\n  var data = _ref.data;\n  var theme = useAppSelector(function (state) {\n    return state.theme.theme;\n  });\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var days = Dates.getDays();\n  var _useResponsive = useResponsive(),\n    isTablet = _useResponsive.isTablet,\n    isDesktop = _useResponsive.isDesktop,\n    isMobile = _useResponsive.isMobile;\n  var size = isDesktop ? 'xl' : isTablet ? 'md' : isMobile ? 'xs' : 'xs';\n  var option = {\n    color: new graphic.LinearGradient(0, 0, 0, 1, [{\n      offset: 0,\n      color: 'rgba(51, 156, 253, 0.7)'\n    }, {\n      offset: 1,\n      color: 'rgba(51, 156, 253, 0.15)'\n    }]),\n    grid: {\n      top: dashboardPaddings[size][0],\n      right: dashboardPaddings[size][1],\n      bottom: dashboardPaddings[size][1],\n      left: dashboardPaddings[size][0],\n      containLabel: true\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false\n      },\n      axisLine: {\n        show: false\n      },\n      data: days,\n      position: 'top',\n      axisLabel: {\n        color: themeObject[theme].primary,\n        fontWeight: 500,\n        fontSize: 14\n      }\n    },\n    yAxis: {\n      type: 'value',\n      min: 1500,\n      axisLabel: {\n        formatter: '{value} kcal',\n        color: themeObject[theme].textLight,\n        fontWeight: 500,\n        fontSize: 14\n      }\n    },\n    series: [{\n      barMaxWidth: 26,\n      data: data,\n      type: 'bar',\n      itemStyle: {\n        borderRadius: 7\n      }\n    }],\n    tooltip: _objectSpread(_objectSpread({}, getDefaultTooltipStyles(themeObject[theme])), {}, {\n      trigger: 'axis',\n      formatter: function formatter(data) {\n        var currentItem = data[0];\n        return \"\".concat(currentItem.value, \" \").concat(t('medical-dashboard.activity.kcalBurned'), \" \").concat(currentItem.name);\n      }\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(BaseChart, {\n    option: option,\n    height: \"100%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, _this);\n};\n_s(ActivityChart, \"duqVTyu3PhmO2adOXobsHLggGuo=\", false, function () {\n  return [useAppSelector, useTranslation, useResponsive];\n});\n_c = ActivityChart;\nvar _c;\n$RefreshReg$(_c, \"ActivityChart\");","map":{"version":3,"names":["React","useTranslation","BaseChart","getDefaultTooltipStyles","dashboardPaddings","useResponsive","Dates","useAppSelector","themeObject","graphic","ActivityChart","data","theme","state","t","days","getDays","isTablet","isDesktop","isMobile","size","option","color","LinearGradient","offset","grid","top","right","bottom","left","containLabel","xAxis","type","axisTick","show","axisLine","position","axisLabel","primary","fontWeight","fontSize","yAxis","min","formatter","textLight","series","barMaxWidth","itemStyle","borderRadius","tooltip","trigger","currentItem","value","name"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/activityCard/ActivityChart.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseChart, getDefaultTooltipStyles } from '@app/components/common/charts/BaseChart';\nimport { dashboardPaddings } from '@app/components/medical-dashboard/DashboardCard/DashboardCard';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { Dates } from '@app/constants/Dates';\nimport { ChartData, ChartSeriesData } from '@app/interfaces/interfaces';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\nimport { graphic } from 'echarts';\n\ninterface ActivityChartProps {\n  data: ChartData;\n}\n\nexport const ActivityChart: React.FC<ActivityChartProps> = ({ data }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  const { t } = useTranslation();\n\n  const days = Dates.getDays();\n\n  const { isTablet, isDesktop, isMobile } = useResponsive();\n\n  const size = isDesktop ? 'xl' : isTablet ? 'md' : isMobile ? 'xs' : 'xs';\n\n  const option = {\n    color: new graphic.LinearGradient(0, 0, 0, 1, [\n      {\n        offset: 0,\n        color: 'rgba(51, 156, 253, 0.7)',\n      },\n      {\n        offset: 1,\n        color: 'rgba(51, 156, 253, 0.15)',\n      },\n    ]),\n    grid: {\n      top: dashboardPaddings[size][0],\n      right: dashboardPaddings[size][1],\n      bottom: dashboardPaddings[size][1],\n      left: dashboardPaddings[size][0],\n      containLabel: true,\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false,\n      },\n      axisLine: {\n        show: false,\n      },\n      data: days,\n      position: 'top',\n      axisLabel: {\n        color: themeObject[theme].primary,\n        fontWeight: 500,\n        fontSize: 14,\n      },\n    },\n    yAxis: {\n      type: 'value',\n      min: 1500,\n      axisLabel: {\n        formatter: '{value} kcal',\n        color: themeObject[theme].textLight,\n        fontWeight: 500,\n        fontSize: 14,\n      },\n    },\n    series: [\n      {\n        barMaxWidth: 26,\n        data: data,\n        type: 'bar',\n        itemStyle: {\n          borderRadius: 7,\n        },\n      },\n    ],\n    tooltip: {\n      ...getDefaultTooltipStyles(themeObject[theme]),\n      trigger: 'axis',\n      formatter: (data: ChartSeriesData) => {\n        const currentItem = data[0];\n\n        return `${currentItem.value} ${t('medical-dashboard.activity.kcalBurned')} ${currentItem.name}`;\n      },\n    },\n  };\n\n  return <BaseChart option={option} height=\"100%\" />;\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,EAAEC,uBAAuB,QAAQ,yCAAyC;AAC5F,SAASC,iBAAiB,QAAQ,+DAA+D;AACjG,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,KAAK,QAAQ,sBAAsB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,OAAO,QAAQ,SAAS;AAAC;AAMlC,OAAO,IAAMC,aAA2C,GAAG,SAA9CA,aAA2C,OAAiB;EAAA;EAAA,IAAXC,IAAI,QAAJA,IAAI;EAChE,IAAMC,KAAK,GAAGL,cAAc,CAAC,UAACM,KAAK;IAAA,OAAKA,KAAK,CAACD,KAAK,CAACA,KAAK;EAAA,EAAC;EAE1D,sBAAcX,cAAc,EAAE;IAAtBa,CAAC,mBAADA,CAAC;EAET,IAAMC,IAAI,GAAGT,KAAK,CAACU,OAAO,EAAE;EAE5B,qBAA0CX,aAAa,EAAE;IAAjDY,QAAQ,kBAARA,QAAQ;IAAEC,SAAS,kBAATA,SAAS;IAAEC,QAAQ,kBAARA,QAAQ;EAErC,IAAMC,IAAI,GAAGF,SAAS,GAAG,IAAI,GAAGD,QAAQ,GAAG,IAAI,GAAGE,QAAQ,GAAG,IAAI,GAAG,IAAI;EAExE,IAAME,MAAM,GAAG;IACbC,KAAK,EAAE,IAAIb,OAAO,CAACc,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAC5C;MACEC,MAAM,EAAE,CAAC;MACTF,KAAK,EAAE;IACT,CAAC,EACD;MACEE,MAAM,EAAE,CAAC;MACTF,KAAK,EAAE;IACT,CAAC,CACF,CAAC;IACFG,IAAI,EAAE;MACJC,GAAG,EAAEtB,iBAAiB,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/BO,KAAK,EAAEvB,iBAAiB,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC;MACjCQ,MAAM,EAAExB,iBAAiB,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC;MAClCS,IAAI,EAAEzB,iBAAiB,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC;MAChCU,YAAY,EAAE;IAChB,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE;QACRC,IAAI,EAAE;MACR,CAAC;MACDC,QAAQ,EAAE;QACRD,IAAI,EAAE;MACR,CAAC;MACDvB,IAAI,EAAEI,IAAI;MACVqB,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE;QACTf,KAAK,EAAEd,WAAW,CAACI,KAAK,CAAC,CAAC0B,OAAO;QACjCC,UAAU,EAAE,GAAG;QACfC,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,KAAK,EAAE;MACLT,IAAI,EAAE,OAAO;MACbU,GAAG,EAAE,IAAI;MACTL,SAAS,EAAE;QACTM,SAAS,EAAE,cAAc;QACzBrB,KAAK,EAAEd,WAAW,CAACI,KAAK,CAAC,CAACgC,SAAS;QACnCL,UAAU,EAAE,GAAG;QACfC,QAAQ,EAAE;MACZ;IACF,CAAC;IACDK,MAAM,EAAE,CACN;MACEC,WAAW,EAAE,EAAE;MACfnC,IAAI,EAAEA,IAAI;MACVqB,IAAI,EAAE,KAAK;MACXe,SAAS,EAAE;QACTC,YAAY,EAAE;MAChB;IACF,CAAC,CACF;IACDC,OAAO,kCACF9C,uBAAuB,CAACK,WAAW,CAACI,KAAK,CAAC,CAAC;MAC9CsC,OAAO,EAAE,MAAM;MACfP,SAAS,EAAE,mBAAChC,IAAqB,EAAK;QACpC,IAAMwC,WAAW,GAAGxC,IAAI,CAAC,CAAC,CAAC;QAE3B,iBAAUwC,WAAW,CAACC,KAAK,cAAItC,CAAC,CAAC,uCAAuC,CAAC,cAAIqC,WAAW,CAACE,IAAI;MAC/F;IAAC;EAEL,CAAC;EAED,oBAAO,QAAC,SAAS;IAAC,MAAM,EAAEhC,MAAO;IAAC,MAAM,EAAC;EAAM;IAAA;IAAA;IAAA;EAAA,SAAG;AACpD,CAAC;AAAC,GA7EWX,aAA2C;EAAA,QACxCH,cAAc,EAEdN,cAAc,EAIcI,aAAa;AAAA;AAAA,KAP5CK,aAA2C;AAAA;AAAA"},"metadata":{},"sourceType":"module"}