{"ast":null,"code":"import App from'./App';import reportWebVitals from'./reportWebVitals';import'./i18n';import*as serviceWorkerRegistration from'./serviceWorkerRegistration';import'config/config';import{Provider}from'react-redux';import{store}from'@app/store/store';import ReactDOM from'react-dom';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(App,{})})}),document.getElementById('root'));serviceWorkerRegistration.register({onUpdate:function onUpdate(registration){var waitingServiceWorker=registration.waiting;if(waitingServiceWorker){waitingServiceWorker.addEventListener('statechange',function(event){if(event.target.state==='activated')window.location.reload();});waitingServiceWorker.postMessage({type:'SKIP_WAITING'});}}});// app will reload if new version of app is available\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["App","reportWebVitals","serviceWorkerRegistration","Provider","store","ReactDOM","React","render","document","getElementById","register","onUpdate","registration","waitingServiceWorker","waiting","addEventListener","event","target","state","window","location","reload","postMessage","type"],"sources":["/workspace/ant-design-react-template/src/index.tsx"],"sourcesContent":["import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport 'config/config';\nimport { Provider } from 'react-redux';\nimport { store } from '@app/store/store';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\ninterface EventTarget {\n  state?: 'activated';\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorkerRegistration.register({\n  onUpdate: (registration) => {\n    const waitingServiceWorker = registration.waiting;\n\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener('statechange', (event) => {\n        if ((event.target as EventTarget).state === 'activated') window.location.reload();\n      });\n      waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' });\n    }\n  },\n}); // app will reload if new version of app is available\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,MAAOA,IAAG,KAAM,OAAO,CACvB,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,MAAO,QAAQ,CACf,MAAO,GAAKC,0BAAyB,KAAM,6BAA6B,CACxE,MAAO,eAAe,CACtB,OAASC,QAAQ,KAAQ,aAAa,CACtC,OAASC,KAAK,KAAQ,kBAAkB,CACxC,MAAOC,SAAQ,KAAM,WAAW,CAChC,MAAOC,MAAK,KAAM,OAAO,CAAC,2CAM1BD,QAAQ,CAACE,MAAM,cACb,KAAC,KAAK,CAAC,UAAU,wBACf,KAAC,QAAQ,EAAC,KAAK,CAAEH,KAAM,uBACrB,KAAC,GAAG,IAAG,EACE,EACM,CACnBI,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC,CAEDP,yBAAyB,CAACQ,QAAQ,CAAC,CACjCC,QAAQ,CAAE,kBAACC,YAAY,CAAK,CAC1B,GAAMC,qBAAoB,CAAGD,YAAY,CAACE,OAAO,CAEjD,GAAID,oBAAoB,CAAE,CACxBA,oBAAoB,CAACE,gBAAgB,CAAC,aAAa,CAAE,SAACC,KAAK,CAAK,CAC9D,GAAKA,KAAK,CAACC,MAAM,CAAiBC,KAAK,GAAK,WAAW,CAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE,CACnF,CAAC,CAAC,CACFR,oBAAoB,CAACS,WAAW,CAAC,CAAEC,IAAI,CAAE,cAAe,CAAC,CAAC,CAC5D,CACF,CACF,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACAtB,eAAe,EAAE"},"metadata":{},"sourceType":"module"}