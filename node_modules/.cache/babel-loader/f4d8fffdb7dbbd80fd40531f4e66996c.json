{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentPanel.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDoctorsData } from 'api/doctors.api';\nimport { TreatmentDoctor } from './TreatmentDoctor/TreatmentDoctor';\nimport { specifities } from '../../../constants/specifities';\nimport { TreatmentNotFound } from './TreatmentNotFound/TreatmentNotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TreatmentPanel = function TreatmentPanel(_ref) {\n  _s();\n  var event = _ref.event;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    doctors = _useState2[0],\n    setDoctors = _useState2[1];\n  useEffect(function () {\n    getDoctorsData().then(function (res) {\n      return setDoctors(res);\n    });\n  }, []);\n  var currentDoctor = doctors.find(function (doctor) {\n    return doctor.id === (event === null || event === void 0 ? void 0 : event.doctor);\n  });\n  if (event && currentDoctor) {\n    var _specifities$find;\n    var doctor = {\n      name: currentDoctor.name,\n      address: currentDoctor.address,\n      date: event.date,\n      imgUrl: currentDoctor.imgUrl,\n      phone: currentDoctor.phone,\n      speciality: ((_specifities$find = specifities.find(function (_ref2) {\n        var id = _ref2.id;\n        return id === currentDoctor.specifity;\n      })) === null || _specifities$find === void 0 ? void 0 : _specifities$find.name) || ''\n    };\n    return /*#__PURE__*/_jsxDEV(TreatmentDoctor, {\n      doctor: doctor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, _this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(TreatmentNotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, _this);\n  }\n};\n_s(TreatmentPanel, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n_c = TreatmentPanel;\nvar _c;\n$RefreshReg$(_c, \"TreatmentPanel\");","map":{"version":3,"names":["React","useEffect","useState","getDoctorsData","TreatmentDoctor","specifities","TreatmentNotFound","TreatmentPanel","event","doctors","setDoctors","then","res","currentDoctor","find","doctor","id","name","address","date","imgUrl","phone","speciality","specifity"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/treatmentCard/TreatmentPanel.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CalendarEvent } from 'api/calendar.api';\nimport { getDoctorsData, Doctor } from 'api/doctors.api';\nimport { TreatmentDoctor } from './TreatmentDoctor/TreatmentDoctor';\nimport { specifities } from '../../../constants/specifities';\nimport { TreatmentNotFound } from './TreatmentNotFound/TreatmentNotFound';\n\ninterface TreatmentPanelProps {\n  event?: CalendarEvent;\n}\n\nexport const TreatmentPanel: React.FC<TreatmentPanelProps> = ({ event }) => {\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n\n  useEffect(() => {\n    getDoctorsData().then((res) => setDoctors(res));\n  }, []);\n\n  const currentDoctor = doctors.find((doctor) => doctor.id === event?.doctor);\n\n  if (event && currentDoctor) {\n    const doctor: TreatmentDoctor = {\n      name: currentDoctor.name,\n      address: currentDoctor.address,\n      date: event.date,\n      imgUrl: currentDoctor.imgUrl,\n      phone: currentDoctor.phone,\n      speciality: specifities.find(({ id }) => id === currentDoctor.specifity)?.name || '',\n    };\n\n    return <TreatmentDoctor doctor={doctor} />;\n  } else {\n    return <TreatmentNotFound />;\n  }\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,cAAc,QAAgB,iBAAiB;AACxD,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,iBAAiB,QAAQ,uCAAuC;AAAC;AAM1E,OAAO,IAAMC,cAA6C,GAAG,SAAhDA,cAA6C,OAAkB;EAAA;EAAA,IAAZC,KAAK,QAALA,KAAK;EACnE,gBAA8BN,QAAQ,CAAW,EAAE,CAAC;IAAA;IAA7CO,OAAO;IAAEC,UAAU;EAE1BT,SAAS,CAAC,YAAM;IACdE,cAAc,EAAE,CAACQ,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKF,UAAU,CAACE,GAAG,CAAC;IAAA,EAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,aAAa,GAAGJ,OAAO,CAACK,IAAI,CAAC,UAACC,MAAM;IAAA,OAAKA,MAAM,CAACC,EAAE,MAAKR,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,MAAM;EAAA,EAAC;EAE3E,IAAIP,KAAK,IAAIK,aAAa,EAAE;IAAA;IAC1B,IAAME,MAAuB,GAAG;MAC9BE,IAAI,EAAEJ,aAAa,CAACI,IAAI;MACxBC,OAAO,EAAEL,aAAa,CAACK,OAAO;MAC9BC,IAAI,EAAEX,KAAK,CAACW,IAAI;MAChBC,MAAM,EAAEP,aAAa,CAACO,MAAM;MAC5BC,KAAK,EAAER,aAAa,CAACQ,KAAK;MAC1BC,UAAU,EAAE,sBAAAjB,WAAW,CAACS,IAAI,CAAC;QAAA,IAAGE,EAAE,SAAFA,EAAE;QAAA,OAAOA,EAAE,KAAKH,aAAa,CAACU,SAAS;MAAA,EAAC,sDAA5D,kBAA8DN,IAAI,KAAI;IACpF,CAAC;IAED,oBAAO,QAAC,eAAe;MAAC,MAAM,EAAEF;IAAO;MAAA;MAAA;MAAA;IAAA,SAAG;EAC5C,CAAC,MAAM;IACL,oBAAO,QAAC,iBAAiB;MAAA;MAAA;MAAA;IAAA,SAAG;EAC9B;AACF,CAAC;AAAC,GAvBWR,cAA6C;AAAA,KAA7CA,cAA6C;AAAA;AAAA"},"metadata":{},"sourceType":"module"}