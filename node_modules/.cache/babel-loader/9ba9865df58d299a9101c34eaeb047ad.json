{"ast":null,"code":"import React,{useMemo}from'react';import{DayjsDatePicker}from'@app/components/common/pickers/DayjsDatePicker';import{Dates}from'@app/constants/Dates';import{jsx as _jsx}from\"react/jsx-runtime\";var clearDate=Dates.getToday().hour(0).minute(0).second(0).millisecond(0);var clearDateMs=+clearDate;export var TimeRangePicker=function TimeRangePicker(_ref){var timeRange=_ref.timeRange,setTimeRange=_ref.setTimeRange;var timeRangePrepared=useMemo(function(){return timeRange.map(function(time){return clearDate.add(time);});},[timeRange]);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar onChange=function onChange(timeRange){var timeRangeSinceTodayMs=timeRange.map(function(time){return time.subtract(clearDateMs,'ms');}).map(function(time){return+time;});setTimeRange(timeRangeSinceTodayMs);};return/*#__PURE__*/_jsx(DayjsDatePicker.RangePicker,{value:[timeRangePrepared[0],timeRangePrepared[1]],picker:\"time\",format:\"HH:mm\",onChange:onChange,allowClear:false,order:false});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/pickers/TimeRangePicker.tsx"],"names":["React","useMemo","DayjsDatePicker","Dates","clearDate","getToday","hour","minute","second","millisecond","clearDateMs","TimeRangePicker","timeRange","setTimeRange","timeRangePrepared","map","time","add","onChange","timeRangeSinceTodayMs","subtract"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,eAAT,KAAgC,gDAAhC,CACA,OAAkBC,KAAlB,KAA+B,sBAA/B,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,QAAN,GAAiBC,IAAjB,CAAsB,CAAtB,EAAyBC,MAAzB,CAAgC,CAAhC,EAAmCC,MAAnC,CAA0C,CAA1C,EAA6CC,WAA7C,CAAyD,CAAzD,CAAlB,CACA,GAAMC,CAAAA,WAAW,CAAG,CAACN,SAArB,CAOA,MAAO,IAAMO,CAAAA,eAA0C,CAAG,QAA7CA,CAAAA,eAA6C,MAAiC,IAA9BC,CAAAA,SAA8B,MAA9BA,SAA8B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACzF,GAAMC,CAAAA,iBAAiB,CAAGb,OAAO,CAAC,iBAAMW,CAAAA,SAAS,CAACG,GAAV,CAAc,SAACC,IAAD,QAAUZ,CAAAA,SAAS,CAACa,GAAV,CAAcD,IAAd,CAAV,EAAd,CAAN,EAAD,CAAqD,CAACJ,SAAD,CAArD,CAAjC,CAEA;AACA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACN,SAAD,CAAoB,CACnC,GAAMO,CAAAA,qBAAqB,CAAGP,SAAS,CACpCG,GAD2B,CACvB,SAACC,IAAD,QAAmBA,CAAAA,IAAI,CAACI,QAAL,CAAcV,WAAd,CAA2B,IAA3B,CAAnB,EADuB,EAE3BK,GAF2B,CAEvB,SAACC,IAAD,QAAmB,CAACA,IAApB,EAFuB,CAA9B,CAIAH,YAAY,CAACM,qBAAD,CAAZ,CACD,CAND,CAQA,mBACE,KAAC,eAAD,CAAiB,WAAjB,EACE,KAAK,CAAE,CAACL,iBAAiB,CAAC,CAAD,CAAlB,CAAuBA,iBAAiB,CAAC,CAAD,CAAxC,CADT,CAEE,MAAM,CAAC,MAFT,CAGE,MAAM,CAAC,OAHT,CAIE,QAAQ,CAAEI,QAJZ,CAKE,UAAU,CAAE,KALd,CAME,KAAK,CAAE,KANT,EADF,CAUD,CAtBM","sourcesContent":["import React, { useMemo } from 'react';\nimport { DayjsDatePicker } from '@app/components/common/pickers/DayjsDatePicker';\nimport { AppDate, Dates } from '@app/constants/Dates';\n\nconst clearDate = Dates.getToday().hour(0).minute(0).second(0).millisecond(0);\nconst clearDateMs = +clearDate;\n\ninterface TimePickerProps {\n  timeRange: number[];\n  setTimeRange: (timeRange: number[]) => void;\n}\n\nexport const TimeRangePicker: React.FC<TimePickerProps> = ({ timeRange, setTimeRange }) => {\n  const timeRangePrepared = useMemo(() => timeRange.map((time) => clearDate.add(time)), [timeRange]);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onChange = (timeRange: any) => {\n    const timeRangeSinceTodayMs = timeRange\n      .map((time: AppDate) => time.subtract(clearDateMs, 'ms'))\n      .map((time: AppDate) => +time);\n\n    setTimeRange(timeRangeSinceTodayMs);\n  };\n\n  return (\n    <DayjsDatePicker.RangePicker\n      value={[timeRangePrepared[0], timeRangePrepared[1]]}\n      picker=\"time\"\n      format=\"HH:mm\"\n      onChange={onChange}\n      allowClear={false}\n      order={false}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}