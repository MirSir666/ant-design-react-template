{"ast":null,"code":"var _jsxFileName = \"/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ConfirmItemPassword = function ConfirmItemPassword() {\n  _s();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm.Item, {\n    name: \"confirmPassword\",\n    label: t('profile.nav.securitySettings.confirmPassword'),\n    dependencies: ['newPassword'],\n    rules: [{\n      required: true,\n      message: t('profile.nav.securitySettings.requiredPassword')\n    }, function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(_, value) {\n          if (!value || getFieldValue('newPassword') === value) {\n            return Promise.resolve();\n          }\n          return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\n        }\n      };\n    }],\n    children: /*#__PURE__*/_jsxDEV(InputPassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, _this);\n};\n_s(ConfirmItemPassword, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ConfirmItemPassword;\nvar _c;\n$RefreshReg$(_c, \"ConfirmItemPassword\");","map":{"version":3,"names":["React","useTranslation","BaseButtonsForm","InputPassword","ConfirmItemPassword","t","required","message","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const ConfirmItemPassword: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"confirmPassword\"\n      label={t('profile.nav.securitySettings.confirmPassword')}\n      dependencies={['newPassword']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('newPassword') === value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,eAAe,QAAQ,8DAA8D;AAC9F,SAASC,aAAa,QAAQ,2DAA2D;AAAC;AAE1F,OAAO,IAAMC,mBAA6B,GAAG,SAAhCA,mBAA6B,GAAS;EAAA;EACjD,sBAAcH,cAAc,EAAE;IAAtBI,CAAC,mBAADA,CAAC;EAET,oBACE,QAAC,eAAe,CAAC,IAAI;IACnB,IAAI,EAAC,iBAAiB;IACtB,KAAK,EAAEA,CAAC,CAAC,8CAA8C,CAAE;IACzD,YAAY,EAAE,CAAC,aAAa,CAAE;IAC9B,KAAK,EAAE,CACL;MACEC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAEF,CAAC,CAAC,+CAA+C;IAC5D,CAAC,EACD;MAAA,IAAGG,aAAa,QAAbA,aAAa;MAAA,OAAQ;QACtBC,SAAS,qBAACC,CAAC,EAAEC,KAAK,EAAE;UAClB,IAAI,CAACA,KAAK,IAAIH,aAAa,CAAC,aAAa,CAAC,KAAKG,KAAK,EAAE;YACpD,OAAOC,OAAO,CAACC,OAAO,EAAE;UAC1B;UACA,OAAOD,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAACV,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;QACvF;MACF,CAAC;IAAA,CAAC,CACF;IAAA,uBAEF,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,SACI;AAE3B,CAAC;AAAC,GA1BWD,mBAA6B;EAAA,QAC1BH,cAAc;AAAA;AAAA,KADjBG,mBAA6B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}