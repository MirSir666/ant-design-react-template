{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{Row,Col,Space}from'antd';import{CaretDownOutlined,CaretUpOutlined}from'@ant-design/icons';import{useResponsive}from'hooks/useResponsive';import{getDifference}from'utils/utils';import*as S from'./ScreeningsFriend.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ScreeningsFriend=function ScreeningsFriend(_ref){var name=_ref.name,src=_ref.src,value=_ref.value,prevValue=_ref.prevValue,isPrimary=_ref.isPrimary,isSecondary=_ref.isSecondary,onClick=_ref.onClick,isVisibleMenu=_ref.isVisibleMenu;var isDowngrade=value<prevValue;var _useResponsive=useResponsive(),isTabletOrHigher=_useResponsive.isTablet,mobileOnly=_useResponsive.mobileOnly;return/*#__PURE__*/_jsxs(S.ScreeningsRow,{onClick:onClick,justify:isVisibleMenu?'space-between':'center',$isActive:isPrimary||isSecondary,wrap:false,children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Row,{gutter:[10,0],align:\"middle\",wrap:false,children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(S.Avatar,_objectSpread(_objectSpread({},mobileOnly&&{size:'large'}),{},{shape:\"square\",src:src,alt:\"Friend avatar\",$isPrimary:isPrimary,$isSecondary:isSecondary}))}),isTabletOrHigher&&isVisibleMenu&&/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(S.Name,{$isPrimary:isPrimary,$isSecondary:isSecondary,children:name})})]})}),isTabletOrHigher&&isVisibleMenu&&/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(S.Percentage,{$isDowngrade:isDowngrade,children:/*#__PURE__*/_jsxs(Space,{size:0,children:[isDowngrade?/*#__PURE__*/_jsx(CaretDownOutlined,{}):/*#__PURE__*/_jsx(CaretUpOutlined,{}),/*#__PURE__*/_jsx(S.Percentage,{$isDowngrade:isDowngrade,children:getDifference(value,prevValue)})]})})})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/screeningsCard/screeningsFriends/ScreeningsFriend/ScreeningsFriend.tsx"],"names":["React","Row","Col","Space","CaretDownOutlined","CaretUpOutlined","useResponsive","getDifference","S","ScreeningsFriend","name","src","value","prevValue","isPrimary","isSecondary","onClick","isVisibleMenu","isDowngrade","isTabletOrHigher","isTablet","mobileOnly","size"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,KAAnB,KAAgC,MAAhC,CACA,OAASC,iBAAT,CAA4BC,eAA5B,KAAmD,mBAAnD,CACA,OAASC,aAAT,KAA8B,qBAA9B,CACA,OAASC,aAAT,KAA8B,aAA9B,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,2BAAnB,C,wFAaA,MAAO,IAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAS3D,IARJC,CAAAA,IAQI,MARJA,IAQI,CAPJC,GAOI,MAPJA,GAOI,CANJC,KAMI,MANJA,KAMI,CALJC,SAKI,MALJA,SAKI,CAJJC,SAII,MAJJA,SAII,CAHJC,WAGI,MAHJA,WAGI,CAFJC,OAEI,MAFJA,OAEI,CADJC,aACI,MADJA,aACI,CACJ,GAAMC,CAAAA,WAAW,CAAGN,KAAK,CAAGC,SAA5B,CAEA,mBAAmDP,aAAa,EAAhE,CAAkBa,gBAAlB,gBAAQC,QAAR,CAAoCC,UAApC,gBAAoCA,UAApC,CAEA,mBACE,MAAC,CAAD,CAAG,aAAH,EACE,OAAO,CAAEL,OADX,CAEE,OAAO,CAAEC,aAAa,CAAG,eAAH,CAAqB,QAF7C,CAGE,SAAS,CAAEH,SAAS,EAAIC,WAH1B,CAIE,IAAI,CAAE,KAJR,wBAME,KAAC,GAAD,wBACE,MAAC,GAAD,EAAK,MAAM,CAAE,CAAC,EAAD,CAAK,CAAL,CAAb,CAAsB,KAAK,CAAC,QAA5B,CAAqC,IAAI,CAAE,KAA3C,wBACE,KAAC,GAAD,wBACE,KAAC,CAAD,CAAG,MAAH,gCACOM,UAAU,EAAI,CAAEC,IAAI,CAAE,OAAR,CADrB,MAEE,KAAK,CAAC,QAFR,CAGE,GAAG,CAAEX,GAHP,CAIE,GAAG,CAAC,eAJN,CAKE,UAAU,CAAEG,SALd,CAME,YAAY,CAAEC,WANhB,GADF,EADF,CAYGI,gBAAgB,EAAIF,aAApB,eACC,KAAC,GAAD,wBACE,KAAC,CAAD,CAAG,IAAH,EAAQ,UAAU,CAAEH,SAApB,CAA+B,YAAY,CAAEC,WAA7C,UACGL,IADH,EADF,EAbJ,GADF,EANF,CA6BGS,gBAAgB,EAAIF,aAApB,eACC,KAAC,GAAD,wBACE,KAAC,CAAD,CAAG,UAAH,EAAc,YAAY,CAAEC,WAA5B,uBACE,MAAC,KAAD,EAAO,IAAI,CAAE,CAAb,WACGA,WAAW,cAAG,KAAC,iBAAD,IAAH,cAA2B,KAAC,eAAD,IADzC,cAEE,KAAC,CAAD,CAAG,UAAH,EAAc,YAAY,CAAEA,WAA5B,UAA0CX,aAAa,CAACK,KAAD,CAAQC,SAAR,CAAvD,EAFF,GADF,EADF,EA9BJ,GADF,CA0CD,CAxDM","sourcesContent":["import React from 'react';\nimport { Row, Col, Space } from 'antd';\nimport { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { getDifference } from 'utils/utils';\nimport * as S from './ScreeningsFriend.styles';\n\ninterface ScreeningsFriendProps {\n  name: string;\n  src: string;\n  value: number;\n  prevValue: number;\n  isPrimary: boolean;\n  isSecondary: boolean;\n  onClick?: () => void;\n  isVisibleMenu: boolean;\n}\n\nexport const ScreeningsFriend: React.FC<ScreeningsFriendProps> = ({\n  name,\n  src,\n  value,\n  prevValue,\n  isPrimary,\n  isSecondary,\n  onClick,\n  isVisibleMenu,\n}) => {\n  const isDowngrade = value < prevValue;\n\n  const { isTablet: isTabletOrHigher, mobileOnly } = useResponsive();\n\n  return (\n    <S.ScreeningsRow\n      onClick={onClick}\n      justify={isVisibleMenu ? 'space-between' : 'center'}\n      $isActive={isPrimary || isSecondary}\n      wrap={false}\n    >\n      <Col>\n        <Row gutter={[10, 0]} align=\"middle\" wrap={false}>\n          <Col>\n            <S.Avatar\n              {...(mobileOnly && { size: 'large' })}\n              shape=\"square\"\n              src={src}\n              alt=\"Friend avatar\"\n              $isPrimary={isPrimary}\n              $isSecondary={isSecondary}\n            />\n          </Col>\n\n          {isTabletOrHigher && isVisibleMenu && (\n            <Col>\n              <S.Name $isPrimary={isPrimary} $isSecondary={isSecondary}>\n                {name}\n              </S.Name>\n            </Col>\n          )}\n        </Row>\n      </Col>\n\n      {isTabletOrHigher && isVisibleMenu && (\n        <Col>\n          <S.Percentage $isDowngrade={isDowngrade}>\n            <Space size={0}>\n              {isDowngrade ? <CaretDownOutlined /> : <CaretUpOutlined />}\n              <S.Percentage $isDowngrade={isDowngrade}>{getDifference(value, prevValue)}</S.Percentage>\n            </Space>\n          </S.Percentage>\n        </Col>\n      )}\n    </S.ScreeningsRow>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}