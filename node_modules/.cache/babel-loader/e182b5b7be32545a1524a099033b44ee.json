{"ast":null,"code":"import _asyncToGenerator from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";import React,{useCallback,useState}from'react';import{Checkbox}from'antd';import{useTranslation}from'react-i18next';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{CheckboxColumn}from'@app/components/profile/profileCard/profileFormNav/nav/notifications/CheckboxColumn/CheckboxColumn';import*as S from'./NotificationsTypes.styles';import{BaseButtonsGroup}from'@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';import{notificationController}from'@app/controllers/notificationController';import{jsx as _jsx}from\"react/jsx-runtime\";export var NotificationsTypes=function NotificationsTypes(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({1:[],2:[],3:[]}),_useState4=_slicedToArray(_useState3,2),checkedElements=_useState4[0],setCheckedElements=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isTriggered=_useState6[0],setTriggered=_useState6[1];var options=[{id:1,header:t('common.email'),headerRender:function headerRender(text,props){return/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},props),{},{children:text}));},data:['emailMessages','emailMentions','emailReminders','emailAllNews','emailImportantNews','emailActionRequired'],dataRender:function dataRender(text){return/*#__PURE__*/_jsx(Checkbox,{value:text});}},{id:2,header:t('profile.nav.notifications.push'),headerRender:function headerRender(text,props){return/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},props),{},{children:text}));},data:['pushMessages','pushMentions','pushReminders','pushAllNews','pushImportantNews','pushActionRequired'],dataRender:function dataRender(text){return/*#__PURE__*/_jsx(Checkbox,{value:text});}},{id:3,header:t('profile.nav.notifications.SMS'),headerRender:function headerRender(text,props){return/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},props),{},{children:text}));},data:['smsMessages','smsMentions','smsReminders','smsAllNews','smsImportantNews','smsActionRequired'],dataRender:function dataRender(text){return/*#__PURE__*/_jsx(Checkbox,{value:text});}},{id:4,header:t('profile.nav.notifications.activities'),data:[t('profile.nav.notifications.directMessages'),t('profile.nav.notifications.mentions'),t('profile.nav.notifications.reminders'),t('profile.nav.notifications.allNews'),t('profile.nav.notifications.importantNews'),t('profile.nav.notifications.actionRequired')]}];var handleCheck=useCallback(function(mode){return function(list){setCheckedElements(_objectSpread(_objectSpread({},checkedElements),{},_defineProperty({},mode,list)));};},[checkedElements]);var onCancel=useCallback(function(){setTriggered(false);},[setTriggered]);var onFinish=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);setTimeout(function(){setLoading(false);setTriggered(false);notificationController.success({message:t('common.success')});console.log(checkedElements);},1000);case 2:case\"end\":return _context.stop();}}},_callee);})),[setTriggered,checkedElements,t]);return/*#__PURE__*/_jsx(BaseButtonsForm,{name:\"notifications\",onFinish:onFinish,isFieldsChanged:isTriggered,setFieldsChanged:setTriggered,footer:/*#__PURE__*/_jsx(BaseButtonsGroup,{loading:isLoading,onCancel:onCancel}),children:/*#__PURE__*/_jsx(S.Wrapper,{children:options.map(function(item){return/*#__PURE__*/_jsx(CheckboxColumn,{column:item,handleCheck:handleCheck(item.id),setTriggered:setTriggered},item.id);})})});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/notifications/NotificationsTypes/NotificationsTypes.tsx"],"names":["React","useCallback","useState","Checkbox","useTranslation","BaseButtonsForm","CheckboxColumn","S","BaseButtonsGroup","notificationController","NotificationsTypes","t","isLoading","setLoading","checkedElements","setCheckedElements","isTriggered","setTriggered","options","id","header","headerRender","text","props","data","dataRender","handleCheck","mode","list","onCancel","onFinish","setTimeout","success","message","console","log","map","item"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Checkbox } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CheckboxColumn } from '@app/components/profile/profileCard/profileFormNav/nav/notifications/CheckboxColumn/CheckboxColumn';\nimport { Option } from '@app/components/profile/profileCard/profileFormNav/nav/notifications/interfaces';\nimport * as S from './NotificationsTypes.styles';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { notificationController } from '@app/controllers/notificationController';\n\ninterface Notifications {\n  1: string[];\n  2: string[];\n  3: string[];\n}\n\nexport const NotificationsTypes: React.FC = () => {\n  const { t } = useTranslation();\n  const [isLoading, setLoading] = useState(false);\n  const [checkedElements, setCheckedElements] = useState<Notifications>({\n    1: [],\n    2: [],\n    3: [],\n  });\n\n  const [isTriggered, setTriggered] = useState(false);\n\n  const options: Option[] = [\n    {\n      id: 1,\n      header: t('common.email'),\n      headerRender: (text, props) => <Checkbox {...props}>{text}</Checkbox>,\n      data: [\n        'emailMessages',\n        'emailMentions',\n        'emailReminders',\n        'emailAllNews',\n        'emailImportantNews',\n        'emailActionRequired',\n      ],\n      dataRender: (text) => <Checkbox value={text} />,\n    },\n    {\n      id: 2,\n      header: t('profile.nav.notifications.push'),\n      headerRender: (text, props) => <Checkbox {...props}>{text}</Checkbox>,\n      data: ['pushMessages', 'pushMentions', 'pushReminders', 'pushAllNews', 'pushImportantNews', 'pushActionRequired'],\n      dataRender: (text) => <Checkbox value={text} />,\n    },\n    {\n      id: 3,\n      header: t('profile.nav.notifications.SMS'),\n      headerRender: (text, props) => <Checkbox {...props}>{text}</Checkbox>,\n      data: ['smsMessages', 'smsMentions', 'smsReminders', 'smsAllNews', 'smsImportantNews', 'smsActionRequired'],\n      dataRender: (text) => <Checkbox value={text} />,\n    },\n    {\n      id: 4,\n      header: t('profile.nav.notifications.activities'),\n      data: [\n        t('profile.nav.notifications.directMessages'),\n        t('profile.nav.notifications.mentions'),\n        t('profile.nav.notifications.reminders'),\n        t('profile.nav.notifications.allNews'),\n        t('profile.nav.notifications.importantNews'),\n        t('profile.nav.notifications.actionRequired'),\n      ],\n    },\n  ];\n\n  const handleCheck = useCallback(\n    (mode: number) => (list: CheckboxValueType[]) => {\n      setCheckedElements({ ...checkedElements, [mode]: list });\n    },\n    [checkedElements],\n  );\n\n  const onCancel = useCallback(() => {\n    setTriggered(false);\n  }, [setTriggered]);\n\n  const onFinish = useCallback(async () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setTriggered(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(checkedElements);\n    }, 1000);\n  }, [setTriggered, checkedElements, t]);\n\n  return (\n    <BaseButtonsForm\n      name=\"notifications\"\n      onFinish={onFinish}\n      isFieldsChanged={isTriggered}\n      setFieldsChanged={setTriggered}\n      footer={<BaseButtonsGroup loading={isLoading} onCancel={onCancel} />}\n    >\n      <S.Wrapper>\n        {options.map((item) => (\n          <CheckboxColumn key={item.id} column={item} handleCheck={handleCheck(item.id)} setTriggered={setTriggered} />\n        ))}\n      </S.Wrapper>\n    </BaseButtonsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}