{"ast":null,"code":"import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React from'react';import{notification}from'antd';import styled from'styled-components';import{CheckCircleFilled,ExclamationCircleFilled,InfoCircleFilled,StopFilled}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";var IconWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: \",\";\\n  line-height: 2rem;\\n\"])),function(props){return props.$isOnlyTitle?'2rem':'3rem';});var EmptyDescription=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-top: -0.75rem;\\n\"])));var openSuccessNotification=function openSuccessNotification(config){notification.success(_objectSpread(_objectSpread({},config),{},{icon:/*#__PURE__*/_jsx(IconWrapper,{$isOnlyTitle:!config.description,children:/*#__PURE__*/_jsx(CheckCircleFilled,{className:\"success-icon\"})}),message:/*#__PURE__*/_jsx(\"div\",{className:\"title \".concat(!config.description&&\"title-only\"),children:config.message}),description:config.description?/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:config.description}):/*#__PURE__*/_jsx(EmptyDescription,{}),className:config.description?'':'notification-without-description'}));};var openInfoNotification=function openInfoNotification(config){notification.info(_objectSpread(_objectSpread({},config),{},{icon:/*#__PURE__*/_jsx(IconWrapper,{$isOnlyTitle:!config.description,children:/*#__PURE__*/_jsx(InfoCircleFilled,{className:\"info-icon\"})}),message:/*#__PURE__*/_jsx(\"div\",{className:\"title \".concat(!config.description&&\"title-only\"),children:config.message}),description:config.description?/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:config.description}):/*#__PURE__*/_jsx(EmptyDescription,{}),className:config.description?'':'notification-without-description'}));};var openWarningNotification=function openWarningNotification(config){notification.warning(_objectSpread(_objectSpread({},config),{},{icon:/*#__PURE__*/_jsx(IconWrapper,{$isOnlyTitle:!config.description,children:/*#__PURE__*/_jsx(ExclamationCircleFilled,{className:\"warning-icon\"})}),message:/*#__PURE__*/_jsx(\"div\",{className:\"title \".concat(!config.description&&\"title-only\"),children:config.message}),description:config.description?/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:config.description}):/*#__PURE__*/_jsx(EmptyDescription,{}),className:config.description?'':'notification-without-description'}));};var openErrorNotification=function openErrorNotification(config){notification.error(_objectSpread(_objectSpread({},config),{},{icon:/*#__PURE__*/_jsx(IconWrapper,{$isOnlyTitle:!config.description,children:/*#__PURE__*/_jsx(StopFilled,{className:\"error-icon\"})}),message:/*#__PURE__*/_jsx(\"div\",{className:\"title \".concat(!config.description&&\"title-only\"),children:config.message}),description:config.description?/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:config.description}):/*#__PURE__*/_jsx(EmptyDescription,{}),className:config.description?'':'notification-without-description'}));};export var notificationController={success:openSuccessNotification,info:openInfoNotification,warning:openWarningNotification,error:openErrorNotification};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/controllers/notificationController.tsx"],"names":["React","notification","styled","CheckCircleFilled","ExclamationCircleFilled","InfoCircleFilled","StopFilled","IconWrapper","div","props","$isOnlyTitle","EmptyDescription","openSuccessNotification","config","success","icon","description","message","className","openInfoNotification","info","openWarningNotification","warning","openErrorNotification","error","notificationController"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { notification } from 'antd';\nimport styled from 'styled-components';\nimport { CheckCircleFilled, ExclamationCircleFilled, InfoCircleFilled, StopFilled } from '@ant-design/icons';\nimport { ArgsProps } from 'antd/lib/notification';\n\ninterface IconWrapperProps {\n  $isOnlyTitle: boolean;\n}\n\nconst IconWrapper = styled.div<IconWrapperProps>`\n  font-size: ${(props) => (props.$isOnlyTitle ? '2rem' : '3rem')};\n  line-height: 2rem;\n`;\n\nconst EmptyDescription = styled.div`\n  margin-top: -0.75rem;\n`;\n\ntype NotificationProps = ArgsProps;\n\nconst openSuccessNotification = (config: NotificationProps): void => {\n  notification.success({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <CheckCircleFilled className=\"success-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nconst openInfoNotification = (config: NotificationProps): void => {\n  notification.info({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <InfoCircleFilled className=\"info-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nconst openWarningNotification = (config: NotificationProps): void => {\n  notification.warning({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <ExclamationCircleFilled className=\"warning-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nconst openErrorNotification = (config: NotificationProps): void => {\n  notification.error({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <StopFilled className=\"error-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nexport const notificationController = {\n  success: openSuccessNotification,\n  info: openInfoNotification,\n  warning: openWarningNotification,\n  error: openErrorNotification,\n};\n"]},"metadata":{},"sourceType":"module"}