{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { BREAKPOINTS, media } from '@app/styles/themes/constants';\nimport { useMediaQuery } from 'react-responsive';\nexport var useResponsive = function useResponsive() {\n  _s();\n\n  var isMobile = useMediaQuery({\n    query: media.xs\n  });\n  var isTablet = useMediaQuery({\n    query: media.md\n  });\n  var isDesktop = useMediaQuery({\n    query: media.xl\n  });\n  var isBigScreen = useMediaQuery({\n    query: media.xxl\n  });\n  var mobileOnly = useMediaQuery({\n    query: \"(max-width: \".concat(BREAKPOINTS.md - 0.02, \"px)\")\n  });\n  var tabletOnly = useMediaQuery({\n    query: \"(min-width: \".concat(BREAKPOINTS.md, \"px) and (max-width: \").concat(BREAKPOINTS.xl - 0.02, \"px)\")\n  });\n  var desktopOnly = useMediaQuery({\n    query: \"(min-width: \".concat(BREAKPOINTS.xl, \"px) and (max-width: \").concat(BREAKPOINTS.xxl - 0.02, \"px)\")\n  });\n  return {\n    isMobile: isMobile,\n    isTablet: isTablet,\n    isDesktop: isDesktop,\n    isBigScreen: isBigScreen,\n    mobileOnly: mobileOnly,\n    tabletOnly: tabletOnly,\n    desktopOnly: desktopOnly,\n    useMediaQuery: useMediaQuery\n  };\n};\n\n_s(useResponsive, \"KMZqtfMjK8tFevGY/m5bTEYZ3BM=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/hooks/useResponsive.ts"],"names":["BREAKPOINTS","media","useMediaQuery","useResponsive","isMobile","query","xs","isTablet","md","isDesktop","xl","isBigScreen","xxl","mobileOnly","tabletOnly","desktopOnly"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,KAAtB,QAAmC,8BAAnC;AACA,SAAqDC,aAArD,QAA0E,kBAA1E;AAiBA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA8B;AAAA;;AACzD,MAAMC,QAAQ,GAAGF,aAAa,CAAC;AAAEG,IAAAA,KAAK,EAAEJ,KAAK,CAACK;AAAf,GAAD,CAA9B;AACA,MAAMC,QAAQ,GAAGL,aAAa,CAAC;AAAEG,IAAAA,KAAK,EAAEJ,KAAK,CAACO;AAAf,GAAD,CAA9B;AACA,MAAMC,SAAS,GAAGP,aAAa,CAAC;AAAEG,IAAAA,KAAK,EAAEJ,KAAK,CAACS;AAAf,GAAD,CAA/B;AACA,MAAMC,WAAW,GAAGT,aAAa,CAAC;AAAEG,IAAAA,KAAK,EAAEJ,KAAK,CAACW;AAAf,GAAD,CAAjC;AAEA,MAAMC,UAAU,GAAGX,aAAa,CAAC;AAC/BG,IAAAA,KAAK,wBAAiBL,WAAW,CAACQ,EAAZ,GAAiB,IAAlC;AAD0B,GAAD,CAAhC;AAIA,MAAMM,UAAU,GAAGZ,aAAa,CAAC;AAC/BG,IAAAA,KAAK,wBAAiBL,WAAW,CAACQ,EAA7B,iCAAsDR,WAAW,CAACU,EAAZ,GAAiB,IAAvE;AAD0B,GAAD,CAAhC;AAIA,MAAMK,WAAW,GAAGb,aAAa,CAAC;AAChCG,IAAAA,KAAK,wBAAiBL,WAAW,CAACU,EAA7B,iCAAsDV,WAAW,CAACY,GAAZ,GAAkB,IAAxE;AAD2B,GAAD,CAAjC;AAIA,SAAO;AACLR,IAAAA,QAAQ,EAARA,QADK;AAELG,IAAAA,QAAQ,EAARA,QAFK;AAGLE,IAAAA,SAAS,EAATA,SAHK;AAILE,IAAAA,WAAW,EAAXA,WAJK;AAKLE,IAAAA,UAAU,EAAVA,UALK;AAMLC,IAAAA,UAAU,EAAVA,UANK;AAOLC,IAAAA,WAAW,EAAXA,WAPK;AAQLb,IAAAA,aAAa,EAAbA;AARK,GAAP;AAUD,CA5BM;;GAAMC,a;UACMD,a,EACAA,a,EACCA,a,EACEA,a,EAEDA,a,EAIAA,a,EAICA,a","sourcesContent":["import { BREAKPOINTS, media } from '@app/styles/themes/constants';\nimport { MediaQueryAllQueryable, MediaQueryMatchers, useMediaQuery } from 'react-responsive';\n\ninterface ResponsiveReturnValues {\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n  isBigScreen: boolean;\n  mobileOnly: boolean;\n  tabletOnly: boolean;\n  desktopOnly: boolean;\n  useMediaQuery: (\n    settings: Partial<MediaQueryAllQueryable & { query?: string | undefined }>,\n    device?: MediaQueryMatchers,\n    callback?: (matches: boolean) => void,\n  ) => boolean;\n}\n\nexport const useResponsive = (): ResponsiveReturnValues => {\n  const isMobile = useMediaQuery({ query: media.xs });\n  const isTablet = useMediaQuery({ query: media.md });\n  const isDesktop = useMediaQuery({ query: media.xl });\n  const isBigScreen = useMediaQuery({ query: media.xxl });\n\n  const mobileOnly = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS.md - 0.02}px)`,\n  });\n\n  const tabletOnly = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS.md}px) and (max-width: ${BREAKPOINTS.xl - 0.02}px)`,\n  });\n\n  const desktopOnly = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS.xl}px) and (max-width: ${BREAKPOINTS.xxl - 0.02}px)`,\n  });\n\n  return {\n    isMobile,\n    isTablet,\n    isDesktop,\n    isBigScreen,\n    mobileOnly,\n    tabletOnly,\n    desktopOnly,\n    useMediaQuery,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}