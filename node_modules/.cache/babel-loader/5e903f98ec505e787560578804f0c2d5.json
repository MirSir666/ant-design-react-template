{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/apps/newsFeed/NewsFeed.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Empty } from 'antd';\nimport { ArticleCard } from '@app/components/common/ArticleCard/ArticleCard';\nimport { Feed } from '@app/components/common/Feed/Feed';\nimport { NewsFilter } from '@app/components/apps/newsFeed/NewsFilter/NewsFilter';\nimport { getNews } from '@app/api/news.api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var NewsFeed = function NewsFeed() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      setNews = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 1),\n      hasMore = _useState4[0];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setLoaded = _useState6[1];\n\n  useEffect(function () {\n    getNews().then(function (res) {\n      return setNews(res);\n    }).finally(function () {\n      return setLoaded(true);\n    });\n  }, []);\n\n  var next = function next() {\n    getNews().then(function (newNews) {\n      return setNews(news.concat(newNews));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(NewsFilter, {\n    news: news,\n    children: function children(_ref) {\n      var filteredNews = _ref.filteredNews;\n      return filteredNews !== null && filteredNews !== void 0 && filteredNews.length || !loaded ? /*#__PURE__*/_jsxDEV(Feed, {\n        next: next,\n        hasMore: hasMore,\n        children: filteredNews.map(function (post, index) {\n          return /*#__PURE__*/_jsxDEV(ArticleCard, {\n            title: post.title,\n            description: post.text,\n            date: post.date,\n            imgUrl: post.img,\n            author: post.author,\n            avatar: post.avatarUrl,\n            tags: post.tags\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NewsFeed, \"60lRgTMkIud0IPAjXMtwjgN89M4=\");\n\n_c = NewsFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsFeed\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/apps/newsFeed/NewsFeed.tsx"],"names":["React","useEffect","useState","Empty","ArticleCard","Feed","NewsFilter","getNews","NewsFeed","news","setNews","hasMore","loaded","setLoaded","then","res","finally","next","newNews","concat","filteredNews","length","map","post","index","title","text","date","img","author","avatarUrl","tags"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,WAAT,QAA4B,gDAA5B;AACA,SAASC,IAAT,QAAqB,kCAArB;AACA,SAASC,UAAT,QAA2B,qDAA3B;AACA,SAASC,OAAT,QAA8B,mBAA9B;;AAEA,OAAO,IAAMC,QAAkB,GAAG,SAArBA,QAAqB,GAAM;AAAA;;AACtC,kBAAwBN,QAAQ,CAAS,EAAT,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkBR,QAAQ,CAAU,IAAV,CAA1B;AAAA;AAAA,MAAOS,OAAP;;AACA,mBAA4BT,QAAQ,CAAU,KAAV,CAApC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAeC,SAAf;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,OAAO,GACJO,IADH,CACQ,UAACC,GAAD;AAAA,aAASL,OAAO,CAACK,GAAD,CAAhB;AAAA,KADR,EAEGC,OAFH,CAEW;AAAA,aAAMH,SAAS,CAAC,IAAD,CAAf;AAAA,KAFX;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAMI,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBV,IAAAA,OAAO,GAAGO,IAAV,CAAe,UAACI,OAAD;AAAA,aAAaR,OAAO,CAACD,IAAI,CAACU,MAAL,CAAYD,OAAZ,CAAD,CAApB;AAAA,KAAf;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAET,IAAlB;AAAA,cACG;AAAA,UAAGW,YAAH,QAAGA,YAAH;AAAA,aACCA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,IAAAA,YAAY,CAAEC,MAAd,IAAwB,CAACT,MAAzB,gBACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEK,IAAZ;AAAkB,QAAA,OAAO,EAAEN,OAA3B;AAAA,kBACGS,YAAY,CAACE,GAAb,CAAiB,UAACC,IAAD,EAAOC,KAAP;AAAA,8BAChB,QAAC,WAAD;AAEE,YAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,YAAA,WAAW,EAAEF,IAAI,CAACG,IAHpB;AAIE,YAAA,IAAI,EAAEH,IAAI,CAACI,IAJb;AAKE,YAAA,MAAM,EAAEJ,IAAI,CAACK,GALf;AAME,YAAA,MAAM,EAAEL,IAAI,CAACM,MANf;AAOE,YAAA,MAAM,EAAEN,IAAI,CAACO,SAPf;AAQE,YAAA,IAAI,EAAEP,IAAI,CAACQ;AARb,aACOP,KADP;AAAA;AAAA;AAAA;AAAA,mBADgB;AAAA,SAAjB;AADH;AAAA;AAAA;AAAA;AAAA,eADF,gBAgBE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,eAjBH;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CAvCM;;GAAMhB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Empty } from 'antd';\nimport { ArticleCard } from '@app/components/common/ArticleCard/ArticleCard';\nimport { Feed } from '@app/components/common/Feed/Feed';\nimport { NewsFilter } from '@app/components/apps/newsFeed/NewsFilter/NewsFilter';\nimport { getNews, Post } from '@app/api/news.api';\n\nexport const NewsFeed: React.FC = () => {\n  const [news, setNews] = useState<Post[]>([]);\n  const [hasMore] = useState<boolean>(true);\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  useEffect(() => {\n    getNews()\n      .then((res) => setNews(res))\n      .finally(() => setLoaded(true));\n  }, []);\n\n  const next = () => {\n    getNews().then((newNews) => setNews(news.concat(newNews)));\n  };\n\n  return (\n    <NewsFilter news={news}>\n      {({ filteredNews }) =>\n        filteredNews?.length || !loaded ? (\n          <Feed next={next} hasMore={hasMore}>\n            {filteredNews.map((post, index) => (\n              <ArticleCard\n                key={index}\n                title={post.title}\n                description={post.text}\n                date={post.date}\n                imgUrl={post.img}\n                author={post.author}\n                avatar={post.avatarUrl}\n                tags={post.tags}\n              />\n            ))}\n          </Feed>\n        ) : (\n          <Empty />\n        )\n      }\n    </NewsFilter>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}