{"ast":null,"code":"import React,{useMemo}from'react';import{useTranslation}from'react-i18next';import{Avatar}from'antd';import{defineColorByPriority,getCurrencyPrice}from'utils/utils';import{paymentStatuses}from'constants/paymentStatuses';import{Dates}from'constants/Dates';import{Status}from'../Status/Status';import*as S from'./Payment.styles';import{Button}from'components/common/buttons/Button/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Payment=function Payment(_ref){var src=_ref.src,recipient=_ref.recipient,date=_ref.date,status=_ref.status,price=_ref.price,currency=_ref.currency;var _useTranslation=useTranslation(),t=_useTranslation.t;var paymentStatus=useMemo(function(){return paymentStatuses.find(function(item){return item.id===status;});},[status]);return paymentStatus?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(S.Header,{children:[/*#__PURE__*/_jsx(S.AvatarWrapper,{children:/*#__PURE__*/_jsx(Avatar,{src:src,alt:recipient,shape:\"circle\"})}),/*#__PURE__*/_jsx(S.Text,{children:recipient})]}),/*#__PURE__*/_jsxs(S.ContentWrapper,{children:[/*#__PURE__*/_jsxs(S.Item,{children:[/*#__PURE__*/_jsx(S.Subtitle,{children:t('profile.nav.payments.date')}),/*#__PURE__*/_jsx(S.Text,{children:Dates.format(date,'LL')})]}),/*#__PURE__*/_jsxs(S.Item,{children:[/*#__PURE__*/_jsx(S.Subtitle,{children:t('profile.nav.payments.status.title')}),/*#__PURE__*/_jsx(Status,{color:defineColorByPriority(paymentStatus.priority),text:t(paymentStatus.name)})]}),/*#__PURE__*/_jsxs(S.Item,{children:[/*#__PURE__*/_jsx(S.Subtitle,{children:t('profile.nav.payments.date')}),/*#__PURE__*/_jsx(S.Text,{children:getCurrencyPrice(price,currency)})]})]}),/*#__PURE__*/_jsx(S.DetailsWrapper,{children:/*#__PURE__*/_jsx(Button,{type:\"link\",children:t('profile.nav.payments.details')})})]}):null;};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment.tsx"],"names":["React","useMemo","useTranslation","Avatar","defineColorByPriority","getCurrencyPrice","paymentStatuses","Dates","Status","S","Button","Payment","src","recipient","date","status","price","currency","t","paymentStatus","find","item","id","format","priority","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,MAAT,KAAuB,MAAvB,CACA,OAASC,qBAAT,CAAgCC,gBAAhC,KAAwD,aAAxD,CACA,OAASC,eAAT,KAAgC,2BAAhC,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,kBAAnB,CACA,OAASC,MAAT,KAAuB,yCAAvB,C,6IAYA,MAAO,IAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAuD,IAApDC,CAAAA,GAAoD,MAApDA,GAAoD,CAA/CC,SAA+C,MAA/CA,SAA+C,CAApCC,IAAoC,MAApCA,IAAoC,CAA9BC,MAA8B,MAA9BA,MAA8B,CAAtBC,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CACpG,oBAAcf,cAAc,EAA5B,CAAQgB,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,aAAa,CAAGlB,OAAO,CAAC,iBAAMK,CAAAA,eAAe,CAACc,IAAhB,CAAqB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYP,MAAtB,EAArB,CAAN,EAAD,CAA2D,CAACA,MAAD,CAA3D,CAA7B,CAEA,MAAOI,CAAAA,aAAa,cAClB,wCACE,MAAC,CAAD,CAAG,MAAH,yBACE,KAAC,CAAD,CAAG,aAAH,wBACE,KAAC,MAAD,EAAQ,GAAG,CAAEP,GAAb,CAAkB,GAAG,CAAEC,SAAvB,CAAkC,KAAK,CAAC,QAAxC,EADF,EADF,cAIE,KAAC,CAAD,CAAG,IAAH,WAASA,SAAT,EAJF,GADF,cAOE,MAAC,CAAD,CAAG,cAAH,yBACE,MAAC,CAAD,CAAG,IAAH,yBACE,KAAC,CAAD,CAAG,QAAH,WAAaK,CAAC,CAAC,2BAAD,CAAd,EADF,cAEE,KAAC,CAAD,CAAG,IAAH,WAASX,KAAK,CAACgB,MAAN,CAAaT,IAAb,CAAmB,IAAnB,CAAT,EAFF,GADF,cAKE,MAAC,CAAD,CAAG,IAAH,yBACE,KAAC,CAAD,CAAG,QAAH,WAAaI,CAAC,CAAC,mCAAD,CAAd,EADF,cAEE,KAAC,MAAD,EAAQ,KAAK,CAAEd,qBAAqB,CAACe,aAAa,CAACK,QAAf,CAApC,CAA8D,IAAI,CAAEN,CAAC,CAACC,aAAa,CAACM,IAAf,CAArE,EAFF,GALF,cASE,MAAC,CAAD,CAAG,IAAH,yBACE,KAAC,CAAD,CAAG,QAAH,WAAaP,CAAC,CAAC,2BAAD,CAAd,EADF,cAEE,KAAC,CAAD,CAAG,IAAH,WAASb,gBAAgB,CAACW,KAAD,CAAQC,QAAR,CAAzB,EAFF,GATF,GAPF,cAqBE,KAAC,CAAD,CAAG,cAAH,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,UAAqBC,CAAC,CAAC,8BAAD,CAAtB,EADF,EArBF,GADkB,CA0BhB,IA1BJ,CA2BD,CAhCM","sourcesContent":["import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar } from 'antd';\nimport { defineColorByPriority, getCurrencyPrice } from 'utils/utils';\nimport { paymentStatuses } from 'constants/paymentStatuses';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport * as S from './Payment.styles';\nimport { Button } from 'components/common/buttons/Button/Button';\nimport { CurrencyType } from '@app/interfaces/interfaces';\n\ninterface PaymentProps {\n  src: string;\n  recipient: string;\n  date: number;\n  status: number;\n  price: number;\n  currency: CurrencyType;\n}\n\nexport const Payment: React.FC<PaymentProps> = ({ src, recipient, date, status, price, currency }) => {\n  const { t } = useTranslation();\n\n  const paymentStatus = useMemo(() => paymentStatuses.find((item) => item.id === status), [status]);\n\n  return paymentStatus ? (\n    <>\n      <S.Header>\n        <S.AvatarWrapper>\n          <Avatar src={src} alt={recipient} shape=\"circle\" />\n        </S.AvatarWrapper>\n        <S.Text>{recipient}</S.Text>\n      </S.Header>\n      <S.ContentWrapper>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{Dates.format(date, 'LL')}</S.Text>\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.status.title')}</S.Subtitle>\n          <Status color={defineColorByPriority(paymentStatus.priority)} text={t(paymentStatus.name)} />\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{getCurrencyPrice(price, currency)}</S.Text>\n        </S.Item>\n      </S.ContentWrapper>\n      <S.DetailsWrapper>\n        <Button type=\"link\">{t('profile.nav.payments.details')}</Button>\n      </S.DetailsWrapper>\n    </>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}