{"ast":null,"code":"import _objectWithoutProperties from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"result\"],\n    _excluded2 = [\"result\", \"min\", \"max\"];\nexport var results = [{\n  test: 'WBC',\n  result: 6.6,\n  min: 3.4,\n  max: 10.8,\n  units: 'K/uL'\n}, {\n  test: 'RBC',\n  result: 4.07,\n  min: 4.14,\n  max: 5.8,\n  units: 'K/uL'\n}, {\n  test: 'Hemoglobin',\n  result: 15.6,\n  min: 13,\n  max: 17.7,\n  units: 'g/uL'\n}, {\n  test: 'Hematocrit',\n  result: 45.5,\n  min: 37.5,\n  max: 51,\n  units: '%'\n}, {\n  test: 'MCV',\n  result: 112,\n  min: 79,\n  max: 97,\n  units: 'fL'\n}, {\n  test: 'MCH',\n  result: 38.3,\n  min: 26.6,\n  max: 33,\n  units: 'pg'\n}, {\n  test: 'MCHC',\n  result: 34.3,\n  min: 31.5,\n  max: 35.7,\n  units: 'g/dL'\n}, {\n  test: 'RDW',\n  result: 14.2,\n  min: 12.3,\n  max: 15.4,\n  units: '%'\n}, {\n  test: 'Platelets',\n  result: 256,\n  min: 150,\n  max: 379,\n  units: 'K/uL'\n}, {\n  test: 'Neutrophils',\n  result: 57,\n  units: '%'\n}, {\n  test: 'Lymphs',\n  result: 32,\n  units: '%'\n}, {\n  test: 'Monocytes',\n  result: 8,\n  units: '%'\n}, {\n  test: 'Eos',\n  result: 2,\n  units: '%'\n}, {\n  test: 'Basos',\n  result: 1,\n  units: '%'\n}, {\n  test: 'Neutrophils (abs)',\n  result: 3.7,\n  min: 1.4,\n  max: 7,\n  units: 'K/uL'\n}, {\n  test: 'Lymphs (abs)',\n  result: 2.1,\n  min: 0.7,\n  max: 3.1,\n  units: 'K/uL'\n}, {\n  test: 'Monocytes (abs)',\n  result: 0.5,\n  min: 0.1,\n  max: 0.9,\n  units: 'K/uL'\n}, {\n  test: 'Eos (asb)',\n  result: 0.1,\n  min: 0,\n  max: 0.4,\n  units: 'K/uL'\n}, {\n  test: 'Baso (abs)',\n  result: 0.0,\n  min: 0,\n  max: 0.2,\n  units: 'K/uL'\n}, {\n  test: 'Immature Granulocytes',\n  result: 0,\n  units: '%'\n}, {\n  test: 'Immature Gran (abs)',\n  result: 0.0,\n  min: 0,\n  max: 0.1,\n  units: 'K/uL'\n}].map(function (result, index) {\n  return _objectSpread(_objectSpread({}, result), {}, {\n    key: index\n  });\n}).map(function (_ref) {\n  var result = _ref.result,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _objectSpread(_objectSpread({}, rest), {}, {\n    result: result,\n    yearData: Array(12).fill(null).map(function () {\n      return result * Math.abs(Math.sin(Math.random() * result));\n    })\n  });\n}).map(function (_ref2) {\n  var result = _ref2.result,\n      min = _ref2.min,\n      max = _ref2.max,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var flag = 0;\n\n  if (min !== undefined && max !== undefined) {\n    if (result < min) {\n      flag = 1;\n    } else if (result > max) {\n      flag = 2;\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, rest), {}, {\n    result: result,\n    min: min,\n    max: max,\n    flag: flag\n  });\n});\nexport var flags = ['medical-dashboard.bloodScreening.norm', 'medical-dashboard.bloodScreening.low', 'medical-dashboard.bloodScreening.high'];","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/constants/bloodTestResults.ts"],"names":["results","test","result","min","max","units","map","index","key","rest","yearData","Array","fill","Math","abs","sin","random","flag","undefined","flags"],"mappings":"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","sourcesContent":["export interface BloodTestResult {\n  key: number;\n  test: string;\n  result: number;\n  min?: number;\n  max?: number;\n  units: string;\n  yearData: number[];\n  flag: number;\n}\n\nexport const results: BloodTestResult[] = [\n  { test: 'WBC', result: 6.6, min: 3.4, max: 10.8, units: 'K/uL' },\n  { test: 'RBC', result: 4.07, min: 4.14, max: 5.8, units: 'K/uL' },\n  { test: 'Hemoglobin', result: 15.6, min: 13, max: 17.7, units: 'g/uL' },\n  { test: 'Hematocrit', result: 45.5, min: 37.5, max: 51, units: '%' },\n  { test: 'MCV', result: 112, min: 79, max: 97, units: 'fL' },\n  { test: 'MCH', result: 38.3, min: 26.6, max: 33, units: 'pg' },\n  { test: 'MCHC', result: 34.3, min: 31.5, max: 35.7, units: 'g/dL' },\n  { test: 'RDW', result: 14.2, min: 12.3, max: 15.4, units: '%' },\n  { test: 'Platelets', result: 256, min: 150, max: 379, units: 'K/uL' },\n  { test: 'Neutrophils', result: 57, units: '%' },\n  { test: 'Lymphs', result: 32, units: '%' },\n  { test: 'Monocytes', result: 8, units: '%' },\n  { test: 'Eos', result: 2, units: '%' },\n  { test: 'Basos', result: 1, units: '%' },\n  { test: 'Neutrophils (abs)', result: 3.7, min: 1.4, max: 7, units: 'K/uL' },\n  { test: 'Lymphs (abs)', result: 2.1, min: 0.7, max: 3.1, units: 'K/uL' },\n  { test: 'Monocytes (abs)', result: 0.5, min: 0.1, max: 0.9, units: 'K/uL' },\n  { test: 'Eos (asb)', result: 0.1, min: 0, max: 0.4, units: 'K/uL' },\n  { test: 'Baso (abs)', result: 0.0, min: 0, max: 0.2, units: 'K/uL' },\n  { test: 'Immature Granulocytes', result: 0, units: '%' },\n  { test: 'Immature Gran (abs)', result: 0.0, min: 0, max: 0.1, units: 'K/uL' },\n]\n  .map((result, index) => ({ ...result, key: index }))\n  .map(({ result, ...rest }) => ({\n    ...rest,\n    result,\n    yearData: Array(12)\n      .fill(null)\n      .map(() => result * Math.abs(Math.sin(Math.random() * result))),\n  }))\n  .map(({ result, min, max, ...rest }) => {\n    let flag = 0;\n    if (min !== undefined && max !== undefined) {\n      if (result < min) {\n        flag = 1;\n      } else if (result > max) {\n        flag = 2;\n      }\n    }\n    return { ...rest, result, min, max, flag };\n  });\n\nexport const flags = [\n  'medical-dashboard.bloodScreening.norm',\n  'medical-dashboard.bloodScreening.low',\n  'medical-dashboard.bloodScreening.high',\n];\n"]},"metadata":{},"sourceType":"module"}