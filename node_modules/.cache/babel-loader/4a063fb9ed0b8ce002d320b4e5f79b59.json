{"ast":null,"code":"import _defineProperty from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useState}from'react';import{Col,Form,Row}from'antd';import{BaseButtonsForm}from'@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';import{BaseButtonsGroup}from'@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';import{CardNumberItem}from'@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem';import{CardholderItem}from'@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem';import{ExpDateItem}from'@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem';import{CVVItem}from'@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem';import{CardThemeItem}from'@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem';import{cardThemes}from'@app/constants/cardThemes';import*as S from'./PaymentForm.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var clearCardData={name:'',cvc:'',expiry:'',number:'',focused:'',background:cardThemes[0].background,isEdit:false};export var PaymentForm=function PaymentForm(_ref){var closeModal=_ref.closeModal,onFormFinish=_ref.onFormFinish;var _useState=useState(clearCardData),_useState2=_slicedToArray(_useState,2),cardData=_useState2[0],setCardData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isFieldsChanged=_useState6[0],setFieldsChanged=_useState6[1];var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var handleInputFocus=useCallback(function(event){setCardData(_objectSpread(_objectSpread({},cardData),{},{focused:event.target.name}));},[setCardData,cardData]);var onFinish=useCallback(function(values){setLoading(true);setTimeout(function(){setLoading(false);setFieldsChanged(false);var card=_objectSpread(_objectSpread({},values),{},{background:cardData.background});onFormFinish(card);setCardData(clearCardData);closeModal();form.setFieldsValue(clearCardData);},1000);},[cardData.background,closeModal,form,onFormFinish]);return/*#__PURE__*/_jsxs(BaseButtonsForm,{form:form,requiredMark:\"optional\",name:\"paymentCard\",onFinish:onFinish,footer:/*#__PURE__*/_jsx(BaseButtonsGroup,{loading:isLoading,onCancel:closeModal}),initialValues:clearCardData,onValuesChange:function onValuesChange(field){var values=Object.entries(field)[0];setCardData(_objectSpread(_objectSpread({},cardData),{},_defineProperty({},values[0],values[1])));},isFieldsChanged:isFieldsChanged,onFieldsChange:function onFieldsChange(){return setFieldsChanged(true);},children:[/*#__PURE__*/_jsx(S.PayCard,{cardData:cardData}),/*#__PURE__*/_jsxs(S.FormItemsWrapper,{children:[/*#__PURE__*/_jsx(CardNumberItem,{handleInputFocus:handleInputFocus}),/*#__PURE__*/_jsx(CardholderItem,{handleInputFocus:handleInputFocus}),/*#__PURE__*/_jsxs(Row,{gutter:[20,0],children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(ExpDateItem,{handleInputFocus:handleInputFocus})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(CVVItem,{handleInputFocus:handleInputFocus})})]}),/*#__PURE__*/_jsx(CardThemeItem,{cardData:cardData,setCardData:setCardData})]})]});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/PaymentForm/PaymentForm.tsx"],"names":["React","useCallback","useState","Col","Form","Row","BaseButtonsForm","BaseButtonsGroup","CardNumberItem","CardholderItem","ExpDateItem","CVVItem","CardThemeItem","cardThemes","S","clearCardData","name","cvc","expiry","number","focused","background","isEdit","PaymentForm","closeModal","onFormFinish","cardData","setCardData","isLoading","setLoading","isFieldsChanged","setFieldsChanged","useForm","form","handleInputFocus","event","target","onFinish","values","setTimeout","card","setFieldsValue","field","Object","entries"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Col, Form, Row } from 'antd';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { CardNumberItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem';\nimport { CardholderItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem';\nimport { ExpDateItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem';\nimport { CVVItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem';\nimport { CardThemeItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\nimport { cardThemes } from '@app/constants/cardThemes';\nimport * as S from './PaymentForm.styles';\n\nexport const clearCardData: CreditCard = {\n  name: '',\n  cvc: '',\n  expiry: '',\n  number: '',\n  focused: '',\n  background: cardThemes[0].background,\n  isEdit: false,\n};\n\ninterface PaymentFormProps {\n  closeModal: () => void;\n  onFormFinish: (card: CreditCard) => void;\n}\n\nexport const PaymentForm: React.FC<PaymentFormProps> = ({ closeModal, onFormFinish }) => {\n  const [cardData, setCardData] = useState<CreditCard>(clearCardData);\n  const [isLoading, setLoading] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n\n  const [form] = Form.useForm();\n\n  const handleInputFocus = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setCardData({\n        ...cardData,\n        focused: event.target.name,\n      });\n    },\n    [setCardData, cardData],\n  );\n\n  const onFinish = useCallback(\n    (values: CreditCard) => {\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setFieldsChanged(false);\n        const card = { ...values, background: cardData.background };\n        onFormFinish(card);\n        setCardData(clearCardData);\n        closeModal();\n        form.setFieldsValue(clearCardData);\n      }, 1000);\n    },\n    [cardData.background, closeModal, form, onFormFinish],\n  );\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      requiredMark=\"optional\"\n      name=\"paymentCard\"\n      onFinish={onFinish}\n      footer={<BaseButtonsGroup loading={isLoading} onCancel={closeModal} />}\n      initialValues={clearCardData}\n      onValuesChange={(field) => {\n        const values = Object.entries(field)[0];\n\n        setCardData({ ...cardData, [values[0]]: values[1] });\n      }}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <S.PayCard cardData={cardData} />\n      <S.FormItemsWrapper>\n        <CardNumberItem handleInputFocus={handleInputFocus} />\n        <CardholderItem handleInputFocus={handleInputFocus} />\n        <Row gutter={[20, 0]}>\n          <Col span={12}>\n            <ExpDateItem handleInputFocus={handleInputFocus} />\n          </Col>\n          <Col span={12}>\n            <CVVItem handleInputFocus={handleInputFocus} />\n          </Col>\n        </Row>\n        <CardThemeItem cardData={cardData} setCardData={setCardData} />\n      </S.FormItemsWrapper>\n    </BaseButtonsForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}