{"ast":null,"code":"import _toConsumableArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useTranslation}from'react-i18next';import{Col,Row}from'antd';import{BaseForm}from'@app/components/common/forms/BaseForm/BaseForm';import{Card}from'@app/components/common/Card/Card';import{PaymentCardsWidget}from'@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget';import{useResponsive}from'@app/hooks/useResponsive';import{cards as initialCards}from'@app/constants/cards';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var PaymentMethod=function PaymentMethod(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(initialCards),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useResponsive=useResponsive(),isTablet=_useResponsive.isTablet;var handleCardRemove=function handleCardRemove(cardNumber){return setCards(cards.filter(function(card){return card.number!==cardNumber;}));};var handleCardAdd=function handleCardAdd(card){setCards([].concat(_toConsumableArray(cards),[card]));};var content=/*#__PURE__*/_jsxs(Row,{gutter:[32,32],children:[/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(BaseForm.Title,{children:t('profile.nav.payments.paymentMethod')})}),/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(PaymentCardsWidget,{cards:cards,onCardRemove:handleCardRemove,onCardAdd:handleCardAdd})})]});return isTablet?content:/*#__PURE__*/_jsx(Card,{children:content});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentMethod.tsx"],"names":["React","useState","useTranslation","Col","Row","BaseForm","Card","PaymentCardsWidget","useResponsive","cards","initialCards","PaymentMethod","t","setCards","isTablet","handleCardRemove","cardNumber","filter","card","number","handleCardAdd","content"],"mappings":"wVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,MAAzB,CACA,OAASC,QAAT,KAAyB,gDAAzB,CACA,OAASC,IAAT,KAAqB,kCAArB,CACA,OAASC,kBAAT,KAAmC,kGAAnC,CACA,OAASC,aAAT,KAA8B,0BAA9B,CACA,OAASC,KAAK,GAAIC,CAAAA,YAAlB,KAAsC,sBAAtC,C,wFAGA,MAAO,IAAMC,CAAAA,aAAuB,CAAG,QAA1BA,CAAAA,aAA0B,EAAM,CAC3C,oBAAcT,cAAc,EAA5B,CAAQU,CAAR,iBAAQA,CAAR,CAEA,cAA0BX,QAAQ,CAAeS,YAAf,CAAlC,wCAAOD,KAAP,eAAcI,QAAd,eAEA,mBAAqBL,aAAa,EAAlC,CAAQM,QAAR,gBAAQA,QAAR,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,UAAD,QAAwBH,CAAAA,QAAQ,CAACJ,KAAK,CAACQ,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,MAAL,GAAgBH,UAA1B,EAAb,CAAD,CAAhC,EAAzB,CAEA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,IAAD,CAAsB,CAC1CL,QAAQ,8BAAKJ,KAAL,GAAYS,IAAZ,GAAR,CACD,CAFD,CAIA,GAAMG,CAAAA,OAAO,cACX,MAAC,GAAD,EAAK,MAAM,CAAE,CAAC,EAAD,CAAK,EAAL,CAAb,wBACE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,QAAD,CAAU,KAAV,WAAiBT,CAAC,CAAC,oCAAD,CAAlB,EADF,EADF,cAIE,KAAC,GAAD,EAAK,IAAI,CAAE,EAAX,uBACE,KAAC,kBAAD,EAAoB,KAAK,CAAEH,KAA3B,CAAkC,YAAY,CAAEM,gBAAhD,CAAkE,SAAS,CAAEK,aAA7E,EADF,EAJF,GADF,CAWA,MAAON,CAAAA,QAAQ,CAAGO,OAAH,cAAa,KAAC,IAAD,WAAOA,OAAP,EAA5B,CACD,CAzBM","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { Card } from '@app/components/common/Card/Card';\nimport { PaymentCardsWidget } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { cards as initialCards } from '@app/constants/cards';\nimport { CreditCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const PaymentMethod: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [cards, setCards] = useState<CreditCard[]>(initialCards);\n\n  const { isTablet } = useResponsive();\n\n  const handleCardRemove = (cardNumber: string) => setCards(cards.filter((card) => card.number !== cardNumber));\n\n  const handleCardAdd = (card: CreditCard) => {\n    setCards([...cards, card]);\n  };\n\n  const content = (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <BaseForm.Title>{t('profile.nav.payments.paymentMethod')}</BaseForm.Title>\n      </Col>\n      <Col span={24}>\n        <PaymentCardsWidget cards={cards} onCardRemove={handleCardRemove} onCardAdd={handleCardAdd} />\n      </Col>\n    </Row>\n  );\n\n  return isTablet ? content : <Card>{content}</Card>;\n};\n"]},"metadata":{},"sourceType":"module"}