{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/medical-dashboard/covidCard/CovidCard.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { getCovidData } from '@app/api/covid.api';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { CovidChart } from './CovidChart';\nimport { Dates } from '@app/constants/Dates';\nimport { notification } from 'antd';\nimport { NotFound } from '@app/components/common/NotFound/NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CovidCard = function CovidCard() {\n  _s();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  useEffect(function () {\n    getCovidData().then(function (res) {\n      return setData(res === null || res === void 0 ? void 0 : res.data.splice(0, 100).reverse());\n    }).catch(function (e) {\n      return notification.error({\n        message: e.message\n      });\n    });\n  }, []);\n  var _useMemo = useMemo(function () {\n      var confirmedArr = [];\n      var deathsArr = [];\n      var dateArr = [];\n      data && (data === null || data === void 0 ? void 0 : data.forEach(function (el) {\n        confirmedArr.push(el.new_confirmed);\n        deathsArr.push(el.new_deaths);\n        dateArr.push(Dates.getDate(el.date).format('LL'));\n      }));\n      return {\n        confirmedArr: confirmedArr,\n        deathsArr: deathsArr,\n        dateArr: dateArr\n      };\n    }, [data]),\n    confirmedArr = _useMemo.confirmedArr,\n    deathsArr = _useMemo.deathsArr,\n    dateArr = _useMemo.dateArr;\n  var _useMemo2 = useMemo(function () {\n      return {\n        confirmed: {\n          title: t('medical-dashboard.covid.casesPerDay'),\n          data: confirmedArr\n        },\n        deaths: {\n          title: t('medical-dashboard.covid.deaths'),\n          data: deathsArr\n        }\n      };\n    }, [confirmedArr, deathsArr, t]),\n    confirmed = _useMemo2.confirmed,\n    deaths = _useMemo2.deaths;\n  return /*#__PURE__*/_jsxDEV(DashboardCard, {\n    id: \"covid\",\n    title: t('medical-dashboard.covid.title'),\n    padding: 0,\n    children: data ? /*#__PURE__*/_jsxDEV(CovidChart, {\n      confirmed: confirmed,\n      deaths: deaths,\n      dateArr: dateArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, _this) : /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 88\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\n_s(CovidCard, \"gxRcwiz1KlpjpUFjAeFJcFH3Up4=\", false, function () {\n  return [useTranslation];\n});\n_c = CovidCard;\nvar _c;\n$RefreshReg$(_c, \"CovidCard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","getCovidData","useTranslation","DashboardCard","CovidChart","Dates","notification","NotFound","CovidCard","data","setData","t","then","res","splice","reverse","catch","e","error","message","confirmedArr","deathsArr","dateArr","forEach","el","push","new_confirmed","new_deaths","getDate","date","format","confirmed","title","deaths"],"sources":["/workspace/ant-design-react-template/src/components/medical-dashboard/covidCard/CovidCard.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { getCovidData, CoronaData } from '@app/api/covid.api';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardCard } from '../DashboardCard/DashboardCard';\nimport { CovidChart } from './CovidChart';\nimport { Dates } from '@app/constants/Dates';\nimport { notification } from 'antd';\nimport { NotFound } from '@app/components/common/NotFound/NotFound';\n\nexport const CovidCard: React.FC = () => {\n  const [data, setData] = useState<CoronaData[]>();\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    getCovidData()\n      .then((res) => setData(res?.data.splice(0, 100).reverse()))\n      .catch((e) => notification.error({ message: e.message }));\n  }, []);\n\n  const { confirmedArr, deathsArr, dateArr } = useMemo(() => {\n    const confirmedArr: number[] = [];\n    const deathsArr: number[] = [];\n    const dateArr: string[] = [];\n\n    data &&\n      data?.forEach((el) => {\n        confirmedArr.push(el.new_confirmed);\n        deathsArr.push(el.new_deaths);\n        dateArr.push(Dates.getDate(el.date).format('LL'));\n      });\n\n    return {\n      confirmedArr,\n      deathsArr,\n      dateArr,\n    };\n  }, [data]);\n\n  const { confirmed, deaths } = useMemo(\n    () => ({\n      confirmed: {\n        title: t('medical-dashboard.covid.casesPerDay'),\n        data: confirmedArr,\n      },\n      deaths: {\n        title: t('medical-dashboard.covid.deaths'),\n        data: deathsArr,\n      },\n    }),\n    [confirmedArr, deathsArr, t],\n  );\n\n  return (\n    <DashboardCard id=\"covid\" title={t('medical-dashboard.covid.title')} padding={0}>\n      {data ? <CovidChart confirmed={confirmed} deaths={deaths} dateArr={dateArr} /> : <NotFound />}\n    </DashboardCard>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}