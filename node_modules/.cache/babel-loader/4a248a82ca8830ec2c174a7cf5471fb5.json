{"ast":null,"code":"import _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/header/components/searchDropdown/searchOverlay/SearchFilter/SearchFilter.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { categoriesList } from 'constants/categoriesList';\nimport * as S from './SearchFilter.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var SearchFilter = function SearchFilter(_ref) {\n  _s();\n  var data = _ref.data,\n    isVisible = _ref.isVisible,\n    children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFilter = _useState2[0],\n    setSelectedFilter = _useState2[1];\n  var _useState3 = useState(data),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredResults = _useState4[0],\n    setFilteredResults = _useState4[1];\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var filterElements = useMemo(function () {\n    return categoriesList.map(function (filter, index) {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 8,\n        md: 12,\n        xl: 8,\n        children: /*#__PURE__*/_jsxDEV(S.CheckBox, {\n          value: filter.name,\n          children: t(filter.title)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this);\n    });\n  }, [t]);\n  useEffect(function () {\n    if (data) {\n      if (selectedFilter.length > 0) {\n        setFilteredResults(data.filter(function (component) {\n          return selectedFilter.some(function (filter) {\n            return filter === component.category;\n          });\n        }));\n      } else {\n        setFilteredResults(data);\n      }\n    } else {\n      setFilteredResults(null);\n    }\n  }, [data, selectedFilter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.FilterWrapper, {\n      isVisible: isVisible,\n      children: /*#__PURE__*/_jsxDEV(S.CheckboxGroup, {\n        onChange: function onChange(checkedValues) {\n          return setSelectedFilter(checkedValues);\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: filterElements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), filteredResults && children(filteredResults)]\n  }, void 0, true);\n};\n_s(SearchFilter, \"68kYs1iFqi51jfsB8juxPnXacIw=\", false, function () {\n  return [useTranslation];\n});\n_c = SearchFilter;\nvar _c;\n$RefreshReg$(_c, \"SearchFilter\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useTranslation","Col","Row","categoriesList","S","SearchFilter","data","isVisible","children","selectedFilter","setSelectedFilter","filteredResults","setFilteredResults","t","filterElements","map","filter","index","name","title","length","component","some","category","checkedValues"],"sources":["/workspace/ant-design-react-template/src/components/header/components/searchDropdown/searchOverlay/SearchFilter/SearchFilter.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { categoriesList, CategoryType } from 'constants/categoriesList';\nimport { CategoryComponents } from '@app/components/header/components/HeaderSearch/HeaderSearch';\nimport * as S from './SearchFilter.styles';\n\ninterface SearchFilterProps {\n  data: CategoryComponents[] | null;\n  isVisible: boolean;\n  children: (filteredResults: CategoryComponents[]) => React.ReactNode;\n}\n\nexport const SearchFilter: React.FC<SearchFilterProps> = ({ data, isVisible, children }) => {\n  const [selectedFilter, setSelectedFilter] = useState<CategoryType[]>([]);\n  const [filteredResults, setFilteredResults] = useState<CategoryComponents[] | null>(data);\n\n  const { t } = useTranslation();\n\n  const filterElements = useMemo(\n    () =>\n      categoriesList.map((filter, index) => (\n        <Col key={index} xs={12} sm={8} md={12} xl={8}>\n          <S.CheckBox key={index} value={filter.name}>\n            {t(filter.title)}\n          </S.CheckBox>\n        </Col>\n      )),\n    [t],\n  );\n\n  useEffect(() => {\n    if (data) {\n      if (selectedFilter.length > 0) {\n        setFilteredResults(data.filter((component) => selectedFilter.some((filter) => filter === component.category)));\n      } else {\n        setFilteredResults(data);\n      }\n    } else {\n      setFilteredResults(null);\n    }\n  }, [data, selectedFilter]);\n\n  return (\n    <>\n      <S.FilterWrapper isVisible={isVisible}>\n        <S.CheckboxGroup onChange={(checkedValues) => setSelectedFilter(checkedValues as CategoryType[])}>\n          <Row>{filterElements}</Row>\n        </S.CheckboxGroup>\n      </S.FilterWrapper>\n\n      {filteredResults && children(filteredResults)}\n    </>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,GAAG,EAAEC,GAAG,QAAQ,MAAM;AAC/B,SAASC,cAAc,QAAsB,0BAA0B;AAEvE,OAAO,KAAKC,CAAC,MAAM,uBAAuB;AAAC;AAAA;AAQ3C,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAAyC,OAAsC;EAAA;EAAA,IAAhCC,IAAI,QAAJA,IAAI;IAAEC,SAAS,QAATA,SAAS;IAAEC,QAAQ,QAARA,QAAQ;EACnF,gBAA4CT,QAAQ,CAAiB,EAAE,CAAC;IAAA;IAAjEU,cAAc;IAAEC,iBAAiB;EACxC,iBAA8CX,QAAQ,CAA8BO,IAAI,CAAC;IAAA;IAAlFK,eAAe;IAAEC,kBAAkB;EAE1C,sBAAcZ,cAAc,EAAE;IAAtBa,CAAC,mBAADA,CAAC;EAET,IAAMC,cAAc,GAAGhB,OAAO,CAC5B;IAAA,OACEK,cAAc,CAACY,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;MAAA,oBAC/B,QAAC,GAAG;QAAa,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,uBAC5C,QAAC,CAAC,CAAC,QAAQ;UAAa,KAAK,EAAED,MAAM,CAACE,IAAK;UAAA,UACxCL,CAAC,CAACG,MAAM,CAACG,KAAK;QAAC,GADDF,KAAK;UAAA;UAAA;UAAA;QAAA;MAET,GAHLA,KAAK;QAAA;QAAA;QAAA;MAAA,SAIT;IAAA,CACP,CAAC;EAAA,GACJ,CAACJ,CAAC,CAAC,CACJ;EAEDhB,SAAS,CAAC,YAAM;IACd,IAAIS,IAAI,EAAE;MACR,IAAIG,cAAc,CAACW,MAAM,GAAG,CAAC,EAAE;QAC7BR,kBAAkB,CAACN,IAAI,CAACU,MAAM,CAAC,UAACK,SAAS;UAAA,OAAKZ,cAAc,CAACa,IAAI,CAAC,UAACN,MAAM;YAAA,OAAKA,MAAM,KAAKK,SAAS,CAACE,QAAQ;UAAA,EAAC;QAAA,EAAC,CAAC;MAChH,CAAC,MAAM;QACLX,kBAAkB,CAACN,IAAI,CAAC;MAC1B;IACF,CAAC,MAAM;MACLM,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,CAACN,IAAI,EAAEG,cAAc,CAAC,CAAC;EAE1B,oBACE;IAAA,wBACE,QAAC,CAAC,CAAC,aAAa;MAAC,SAAS,EAAEF,SAAU;MAAA,uBACpC,QAAC,CAAC,CAAC,aAAa;QAAC,QAAQ,EAAE,kBAACiB,aAAa;UAAA,OAAKd,iBAAiB,CAACc,aAAa,CAAmB;QAAA,CAAC;QAAA,uBAC/F,QAAC,GAAG;UAAA,UAAEV;QAAc;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IACX;MAAA;MAAA;MAAA;IAAA,SACF,EAEjBH,eAAe,IAAIH,QAAQ,CAACG,eAAe,CAAC;EAAA,gBAC5C;AAEP,CAAC;AAAC,GAzCWN,YAAyC;EAAA,QAItCL,cAAc;AAAA;AAAA,KAJjBK,YAAyC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}