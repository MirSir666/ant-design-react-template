{"ast":null,"code":"import{useEffect,useRef}from'react';export var useMounted=function useMounted(){var isMounted=useRef(false);useEffect(function(){isMounted.current=true;return function(){isMounted.current=false;};},[]);return{isMounted:isMounted};};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/hooks/useMounted.ts"],"names":["useEffect","useRef","useMounted","isMounted","current"],"mappings":"AAAA,OAA2BA,SAA3B,CAAsCC,MAAtC,KAAoD,OAApD,CAMA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAA2B,CACnD,GAAMC,CAAAA,SAAS,CAAGF,MAAM,CAAC,KAAD,CAAxB,CAEAD,SAAS,CAAC,UAAM,CACdG,SAAS,CAACC,OAAV,CAAoB,IAApB,CAEA,MAAO,WAAM,CACXD,SAAS,CAACC,OAAV,CAAoB,KAApB,CACD,CAFD,CAGD,CANQ,CAMN,EANM,CAAT,CAQA,MAAO,CAAED,SAAS,CAATA,SAAF,CAAP,CACD,CAZM","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\ninterface UseMountedReturnVal {\n  isMounted: MutableRefObject<boolean>;\n}\n\nexport const useMounted = (): UseMountedReturnVal => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return { isMounted };\n};\n"]},"metadata":{},"sourceType":"module"}