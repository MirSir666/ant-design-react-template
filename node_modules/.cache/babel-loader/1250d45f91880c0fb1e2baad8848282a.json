{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\"];\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/common/CountryMap/CountryMap.tsx\",\n  _this = this;\nimport React from 'react';\nimport { GeoJSON, ZoomControl } from 'react-leaflet';\nimport geoData from '../../../assets/map-data/countries.geo.json';\nimport * as S from './CountryMap.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CountryMap = function CountryMap(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var MAP_CENTER = [57.52142204768359, 6.08795867978202];\n  return /*#__PURE__*/_jsxDEV(S.Map, _objectSpread(_objectSpread({\n    center: MAP_CENTER,\n    zoom: 2,\n    zoomControl: false,\n    minZoom: 1,\n    maxZoom: 5\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: geoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ZoomControl, {\n      position: \"bottomleft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this), children]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n_c = CountryMap;\nvar _c;\n$RefreshReg$(_c, \"CountryMap\");","map":{"version":3,"names":["React","GeoJSON","ZoomControl","geoData","S","CountryMap","children","props","MAP_CENTER"],"sources":["/workspace/ant-design-react-template/src/components/common/CountryMap/CountryMap.tsx"],"sourcesContent":["import React from 'react';\nimport { LatLngExpression } from 'leaflet';\nimport { GeoJSON, ZoomControl } from 'react-leaflet';\nimport { MapContainerProps } from 'react-leaflet';\n\nimport geoData from '../../../assets/map-data/countries.geo.json';\nimport { FeatureCollection } from 'geojson';\n\nimport * as S from './CountryMap.styles';\n\nexport const CountryMap: React.FC<MapContainerProps> = ({ children, ...props }) => {\n  const MAP_CENTER: LatLngExpression = [57.52142204768359, 6.08795867978202];\n\n  return (\n    <S.Map center={MAP_CENTER} zoom={2} zoomControl={false} minZoom={1} maxZoom={5} {...props}>\n      <GeoJSON data={geoData as FeatureCollection} />\n      <ZoomControl position=\"bottomleft\" />\n      {children}\n    </S.Map>\n  );\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,EAAEC,WAAW,QAAQ,eAAe;AAGpD,OAAOC,OAAO,MAAM,6CAA6C;AAGjE,OAAO,KAAKC,CAAC,MAAM,qBAAqB;AAAC;AAEzC,OAAO,IAAMC,UAAuC,GAAG,SAA1CA,UAAuC,OAA+B;EAAA,IAAzBC,QAAQ,QAARA,QAAQ;IAAKC,KAAK;EAC1E,IAAMC,UAA4B,GAAG,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;EAE1E,oBACE,QAAC,CAAC,CAAC,GAAG;IAAC,MAAM,EAAEA,UAAW;IAAC,IAAI,EAAE,CAAE;IAAC,WAAW,EAAE,KAAM;IAAC,OAAO,EAAE,CAAE;IAAC,OAAO,EAAE;EAAE,GAAKD,KAAK;IAAA,wBACvF,QAAC,OAAO;MAAC,IAAI,EAAEJ;IAA6B;MAAA;MAAA;MAAA;IAAA,SAAG,eAC/C,QAAC,WAAW;MAAC,QAAQ,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,SAAG,EACpCG,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,SACH;AAEZ,CAAC;AAAC,KAVWD,UAAuC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}