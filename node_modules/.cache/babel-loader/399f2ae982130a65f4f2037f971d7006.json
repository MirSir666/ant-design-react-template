{"ast":null,"code":"import React,{useMemo}from'react';import{List}from'antd';import{HashLink}from'react-router-hash-link';import{useTranslation}from'react-i18next';import{camelize}from'utils/utils';import*as S from'./SearchResults.styles';import{jsx as _jsx}from\"react/jsx-runtime\";export var SearchResults=function SearchResults(_ref){var results=_ref.results;var _useTranslation=useTranslation(),t=_useTranslation.t;var resultsList=useMemo(function(){return results.map(function(result){return/*#__PURE__*/_jsx(List,{split:false,header:t(\"common.\".concat(camelize(result.category))),dataSource:result.components,renderItem:function renderItem(item){return/*#__PURE__*/_jsx(HashLink,{to:item.url,children:/*#__PURE__*/_jsx(List.Item,{children:/*#__PURE__*/_jsx(S.Text,{children:item.name})})});}},result.category);});},[results,t]);return/*#__PURE__*/_jsx(S.SearchResultsWrapper,{children:resultsList});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/header/components/searchDropdown/searchOverlay/SearchResults/SearchResults.tsx"],"names":["React","useMemo","List","HashLink","useTranslation","camelize","S","SearchResults","results","t","resultsList","map","result","category","components","item","url","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,OAASC,IAAT,KAAqB,MAArB,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,wBAAnB,C,2CAMA,MAAO,IAAMC,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC1E,oBAAcJ,cAAc,EAA5B,CAAQK,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,WAAW,CAAGT,OAAO,CACzB,iBACEO,CAAAA,OAAO,CAACG,GAAR,CAAY,SAACC,MAAD,qBACV,KAAC,IAAD,EAEE,KAAK,CAAE,KAFT,CAGE,MAAM,CAAEH,CAAC,kBAAWJ,QAAQ,CAACO,MAAM,CAACC,QAAR,CAAnB,EAHX,CAIE,UAAU,CAAED,MAAM,CAACE,UAJrB,CAKE,UAAU,CAAE,oBAACC,IAAD,qBACV,KAAC,QAAD,EAAU,EAAE,CAAEA,IAAI,CAACC,GAAnB,uBACE,KAAC,IAAD,CAAM,IAAN,wBACE,KAAC,CAAD,CAAG,IAAH,WAASD,IAAI,CAACE,IAAd,EADF,EADF,EADU,EALd,EACOL,MAAM,CAACC,QADd,CADU,EAAZ,CADF,EADyB,CAiBzB,CAACL,OAAD,CAAUC,CAAV,CAjByB,CAA3B,CAoBA,mBAAO,KAAC,CAAD,CAAG,oBAAH,WAAyBC,WAAzB,EAAP,CACD,CAxBM","sourcesContent":["import React, { useMemo } from 'react';\nimport { List } from 'antd';\nimport { HashLink } from 'react-router-hash-link';\nimport { useTranslation } from 'react-i18next';\nimport { CategoryComponents } from '@app/components/header/components/HeaderSearch/HeaderSearch';\nimport { camelize } from 'utils/utils';\nimport * as S from './SearchResults.styles';\n\ninterface SearchResultsProps {\n  results: CategoryComponents[];\n}\n\nexport const SearchResults: React.FC<SearchResultsProps> = ({ results }) => {\n  const { t } = useTranslation();\n\n  const resultsList = useMemo(\n    () =>\n      results.map((result) => (\n        <List\n          key={result.category}\n          split={false}\n          header={t(`common.${camelize(result.category)}`)}\n          dataSource={result.components}\n          renderItem={(item) => (\n            <HashLink to={item.url}>\n              <List.Item>\n                <S.Text>{item.name}</S.Text>\n              </List.Item>\n            </HashLink>\n          )}\n        />\n      )),\n    [results, t],\n  );\n\n  return <S.SearchResultsWrapper>{resultsList}</S.SearchResultsWrapper>;\n};\n"]},"metadata":{},"sourceType":"module"}