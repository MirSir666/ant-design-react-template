{"ast":null,"code":"import _objectSpread from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/common/selects/StatisticsSelect/StatisticsSelect.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Option, Select } from '../Select/Select';\nimport { getStatistics } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var StatisticsSelect = function StatisticsSelect(_ref) {\n  _s();\n\n  var className = _ref.className,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      statistics = _useState2[0],\n      setStatistics = _useState2[1];\n\n  useEffect(function () {\n    getStatistics().then(function (res) {\n      return setStatistics(res);\n    });\n  }, []);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var statisticsOptions = useMemo(function () {\n    return statistics.map(function (statistic) {\n      var currentStatistic = configStatistics.find(function (configStat) {\n        return configStat.id === statistic.id;\n      });\n      return /*#__PURE__*/_jsxDEV(Option, {\n        value: statistic.id,\n        children: t((currentStatistic === null || currentStatistic === void 0 ? void 0 : currentStatistic.title) || '')\n      }, statistic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, _this);\n    });\n  }, [statistics, t]);\n  return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({\n    className: className\n  }, props), {}, {\n    children: statisticsOptions\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(StatisticsSelect, \"go65LEoyVDPVf78S1euZYcgQUvQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = StatisticsSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticsSelect\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/selects/StatisticsSelect/StatisticsSelect.tsx"],"names":["React","useEffect","useMemo","useState","useTranslation","Option","Select","getStatistics","statistics","configStatistics","StatisticsSelect","className","props","setStatistics","then","res","t","statisticsOptions","map","statistic","currentStatistic","find","configStat","id","title"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA4C,kBAA5C;AACA,SAASC,aAAT,QAAyC,oBAAzC;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA+C,6BAA/C;;AAEA,OAAO,IAAMC,gBAAuC,GAAG,SAA1CA,gBAA0C,OAA6B;AAAA;;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAZC,KAAY;;AAClF,kBAAoCT,QAAQ,CAAc,EAAd,CAA5C;AAAA;AAAA,MAAOK,UAAP;AAAA,MAAmBK,aAAnB;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,aAAa,GAAGO,IAAhB,CAAqB,UAACC,GAAD;AAAA,aAASF,aAAa,CAACE,GAAD,CAAtB;AAAA,KAArB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,wBAAcX,cAAc,EAA5B;AAAA,MAAQY,CAAR,mBAAQA,CAAR;;AAEA,MAAMC,iBAAiB,GAAGf,OAAO,CAC/B;AAAA,WACEM,UAAU,CAACU,GAAX,CAAe,UAACC,SAAD,EAAe;AAC5B,UAAMC,gBAAgB,GAAGX,gBAAgB,CAACY,IAAjB,CAAsB,UAACC,UAAD;AAAA,eAAgBA,UAAU,CAACC,EAAX,KAAkBJ,SAAS,CAACI,EAA5C;AAAA,OAAtB,CAAzB;AAEA,0BACE,QAAC,MAAD;AAA2B,QAAA,KAAK,EAAEJ,SAAS,CAACI,EAA5C;AAAA,kBACGP,CAAC,CAAC,CAAAI,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEI,KAAlB,KAA2B,EAA5B;AADJ,SAAaL,SAAS,CAACI,EAAvB;AAAA;AAAA;AAAA;AAAA,eADF;AAKD,KARD,CADF;AAAA,GAD+B,EAW/B,CAACf,UAAD,EAAaQ,CAAb,CAX+B,CAAjC;AAcA,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEL;AAAnB,KAAkCC,KAAlC;AAAA,cACGK;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA5BM;;GAAMP,gB;UAOGN,c;;;KAPHM,gB","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Option, Select, SelectProps } from '../Select/Select';\nimport { getStatistics, Statistic } from 'api/statistics.api';\nimport { statistics as configStatistics } from 'constants/config/statistics';\n\nexport const StatisticsSelect: React.FC<SelectProps> = ({ className, ...props }) => {\n  const [statistics, setStatistics] = useState<Statistic[]>([]);\n\n  useEffect(() => {\n    getStatistics().then((res) => setStatistics(res));\n  }, []);\n\n  const { t } = useTranslation();\n\n  const statisticsOptions = useMemo(\n    () =>\n      statistics.map((statistic) => {\n        const currentStatistic = configStatistics.find((configStat) => configStat.id === statistic.id);\n\n        return (\n          <Option key={statistic.id} value={statistic.id}>\n            {t(currentStatistic?.title || '')}\n          </Option>\n        );\n      }),\n    [statistics, t],\n  );\n\n  return (\n    <Select className={className} {...props}>\n      {statisticsOptions}\n    </Select>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}