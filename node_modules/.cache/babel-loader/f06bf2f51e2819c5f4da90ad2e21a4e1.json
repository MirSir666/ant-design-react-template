{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recentActivity/RecentActivityHeader/RecentActivityHeader.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { FilterIcon } from '@app/components/common/icons/FilterIcon';\nimport { Modal } from '@app/components/common/Modal/Modal';\nimport { NFTCardHeader } from '@app/components/nft-dashboard/common/NFTCardHeader/NFTCardHeader';\nimport { RecentActivityFilter } from '@app/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityFilter';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var RecentActivityHeader = function RecentActivityHeader(_ref) {\n  _s();\n\n  var filters = _ref.filters,\n      setFilters = _ref.setFilters;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useResponsive = useResponsive(),\n      isDesktop = _useResponsive.isDesktop;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NFTCardHeader, {\n      title: t('nft.recentActivity'),\n      children: !isDesktop && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        noStyle: true,\n        type: \"text\",\n        icon: /*#__PURE__*/_jsxDEV(FilterIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 58\n        }, _this),\n        onClick: function onClick() {\n          return setModalVisible(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), !isDesktop && /*#__PURE__*/_jsxDEV(Modal, {\n      visible: isModalVisible,\n      onCancel: function onCancel() {\n        return setModalVisible(false);\n      },\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(RecentActivityFilter, {\n        filters: filters,\n        setFilters: setFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(RecentActivityHeader, \"Zmjw5k2f2huYLmbpof1U+oQxNf0=\", false, function () {\n  return [useTranslation, useResponsive];\n});\n\n_c = RecentActivityHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentActivityHeader\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/nft-dashboard/recentActivity/RecentActivityHeader/RecentActivityHeader.tsx"],"names":["React","useState","useTranslation","Button","FilterIcon","Modal","NFTCardHeader","RecentActivityFilter","useResponsive","RecentActivityHeader","filters","setFilters","isModalVisible","setModalVisible","t","isDesktop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,QAAuB,8CAAvB;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,SAASC,KAAT,QAAsB,oCAAtB;AACA,SAASC,aAAT,QAA8B,kEAA9B;AACA,SAASC,oBAAT,QAAqC,yFAArC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;;AAOA,OAAO,IAAMC,oBAAyD,GAAG,SAA5DA,oBAA4D,OAA6B;AAAA;;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACpG,kBAA0CV,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOW,cAAP;AAAA,MAAuBC,eAAvB;;AAEA,wBAAcX,cAAc,EAA5B;AAAA,MAAQY,CAAR,mBAAQA,CAAR;;AACA,uBAAsBN,aAAa,EAAnC;AAAA,MAAQO,SAAR,kBAAQA,SAAR;;AAEA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAED,CAAC,CAAC,oBAAD,CAAvB;AAAA,gBACG,CAACC,SAAD,iBACC,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,MAA5B;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAA/C;AAA+D,QAAA,OAAO,EAAE;AAAA,iBAAMF,eAAe,CAAC,IAAD,CAArB;AAAA;AAAxE;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,aADF,EAOG,CAACE,SAAD,iBACC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEH,cAAhB;AAAgC,MAAA,QAAQ,EAAE;AAAA,eAAMC,eAAe,CAAC,KAAD,CAArB;AAAA,OAA1C;AAAwE,MAAA,MAAM,EAAE,IAAhF;AAAA,6BACE,QAAC,oBAAD;AAAsB,QAAA,OAAO,EAAEH,OAA/B;AAAwC,QAAA,UAAU,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aARJ;AAAA,kBADF;AAeD,CArBM;;GAAMF,oB;UAGGP,c,EACQM,a;;;KAJXC,oB","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { FilterIcon } from '@app/components/common/icons/FilterIcon';\nimport { Modal } from '@app/components/common/Modal/Modal';\nimport { NFTCardHeader } from '@app/components/nft-dashboard/common/NFTCardHeader/NFTCardHeader';\nimport { RecentActivityFilter } from '@app/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityFilter';\nimport { RecentActivityFilterState } from '@app/components/nft-dashboard/recentActivity/RecentActivity';\nimport { useResponsive } from '@app/hooks/useResponsive';\n\ninterface RecentActivityHeaderProps {\n  filters: RecentActivityFilterState;\n  setFilters: (func: (state: RecentActivityFilterState) => RecentActivityFilterState) => void;\n}\n\nexport const RecentActivityHeader: React.FC<RecentActivityHeaderProps> = ({ filters, setFilters }) => {\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const { t } = useTranslation();\n  const { isDesktop } = useResponsive();\n\n  return (\n    <>\n      <NFTCardHeader title={t('nft.recentActivity')}>\n        {!isDesktop && (\n          <Button size=\"large\" noStyle type=\"text\" icon={<FilterIcon />} onClick={() => setModalVisible(true)} />\n        )}\n      </NFTCardHeader>\n\n      {!isDesktop && (\n        <Modal visible={isModalVisible} onCancel={() => setModalVisible(false)} footer={null}>\n          <RecentActivityFilter filters={filters} setFilters={setFilters} />\n        </Modal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}