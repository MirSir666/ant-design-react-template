{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityStatusFilter/RecentActivityStatusFilter.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { activityStatuses } from '@app/constants/config/activityStatuses';\nimport { Title } from '../RecentActivityFilter.styles';\nimport * as S from './RecentActivityStatusFilter.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var RecentActivityStatusFilter = function RecentActivityStatusFilter(_ref) {\n  _s();\n  var filters = _ref.filters,\n    setFilters = _ref.setFilters;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var options = useMemo(function () {\n    return activityStatuses.map(function (status) {\n      return {\n        label: t(status.title),\n        value: status.name\n      };\n    });\n  }, [t]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [20, 20],\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: t('nft.show')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(S.FilterCheckboxGroup, {\n        value: filters.status,\n        options: options,\n        onChange: function onChange(checkedValues) {\n          return setFilters(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              status: checkedValues\n            });\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n_s(RecentActivityStatusFilter, \"JR3k4oCpiVIBudJVY/SB7EaovCc=\", false, function () {\n  return [useTranslation];\n});\n_c = RecentActivityStatusFilter;\nvar _c;\n$RefreshReg$(_c, \"RecentActivityStatusFilter\");","map":{"version":3,"names":["React","useMemo","Col","Row","useTranslation","activityStatuses","Title","S","RecentActivityStatusFilter","filters","setFilters","t","options","map","status","label","title","value","name","checkedValues","prev"],"sources":["/workspace/ant-design-react-template/src/components/nft-dashboard/recentActivity/recentActivityFilters/RecentActivityStatusFilter/RecentActivityStatusFilter.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { activityStatuses } from '@app/constants/config/activityStatuses';\nimport { RecentActivityFilterState } from '@app/components/nft-dashboard/recentActivity/RecentActivity';\nimport { Title } from '../RecentActivityFilter.styles';\nimport * as S from './RecentActivityStatusFilter.styles';\n\ninterface RecentActivityStatusFilterProps {\n  filters: RecentActivityFilterState;\n  setFilters: (func: (state: RecentActivityFilterState) => RecentActivityFilterState) => void;\n}\n\nexport const RecentActivityStatusFilter: React.FC<RecentActivityStatusFilterProps> = ({ filters, setFilters }) => {\n  const { t } = useTranslation();\n\n  const options = useMemo(\n    () => activityStatuses.map((status) => ({ label: t(status.title), value: status.name })),\n    [t],\n  );\n\n  return (\n    <Row gutter={[20, 20]}>\n      <Col span={24}>\n        <Title>{t('nft.show')}</Title>\n      </Col>\n\n      <Col span={24}>\n        <S.FilterCheckboxGroup\n          value={filters.status}\n          options={options}\n          onChange={(checkedValues) =>\n            setFilters((prev) => ({ ...prev, status: checkedValues as unknown as string[] }))\n          }\n        />\n      </Col>\n    </Row>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,GAAG,EAAEC,GAAG,QAAQ,MAAM;AAC/B,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,gBAAgB,QAAQ,wCAAwC;AAEzE,SAASC,KAAK,QAAQ,gCAAgC;AACtD,OAAO,KAAKC,CAAC,MAAM,qCAAqC;AAAC;AAOzD,OAAO,IAAMC,0BAAqE,GAAG,SAAxEA,0BAAqE,OAAgC;EAAA;EAAA,IAA1BC,OAAO,QAAPA,OAAO;IAAEC,UAAU,QAAVA,UAAU;EACzG,sBAAcN,cAAc,EAAE;IAAtBO,CAAC,mBAADA,CAAC;EAET,IAAMC,OAAO,GAAGX,OAAO,CACrB;IAAA,OAAMI,gBAAgB,CAACQ,GAAG,CAAC,UAACC,MAAM;MAAA,OAAM;QAAEC,KAAK,EAAEJ,CAAC,CAACG,MAAM,CAACE,KAAK,CAAC;QAAEC,KAAK,EAAEH,MAAM,CAACI;MAAK,CAAC;IAAA,CAAC,CAAC;EAAA,GACxF,CAACP,CAAC,CAAC,CACJ;EAED,oBACE,QAAC,GAAG;IAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;IAAA,wBACpB,QAAC,GAAG;MAAC,IAAI,EAAE,EAAG;MAAA,uBACZ,QAAC,KAAK;QAAA,UAAEA,CAAC,CAAC,UAAU;MAAC;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,SAC1B,eAEN,QAAC,GAAG;MAAC,IAAI,EAAE,EAAG;MAAA,uBACZ,QAAC,CAAC,CAAC,mBAAmB;QACpB,KAAK,EAAEF,OAAO,CAACK,MAAO;QACtB,OAAO,EAAEF,OAAQ;QACjB,QAAQ,EAAE,kBAACO,aAAa;UAAA,OACtBT,UAAU,CAAC,UAACU,IAAI;YAAA,uCAAWA,IAAI;cAAEN,MAAM,EAAEK;YAAoC;UAAA,CAAG,CAAC;QAAA;MAClF;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,SACE;EAAA;IAAA;IAAA;IAAA;EAAA,SACF;AAEV,CAAC;AAAC,GAzBWX,0BAAqE;EAAA,QAClEJ,cAAc;AAAA;AAAA,KADjBI,0BAAqE;AAAA;AAAA"},"metadata":{},"sourceType":"module"}