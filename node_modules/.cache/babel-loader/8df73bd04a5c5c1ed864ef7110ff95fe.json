{"ast":null,"code":"import React,{useMemo}from'react';import{BaseChart}from'../../../common/charts/BaseChart';import{Dates}from'@app/constants/Dates';import{useResponsive}from'hooks/useResponsive';import{useAppSelector}from'@app/hooks/reduxHooks';import{themeObject}from'@app/styles/themes/themeVariables';import{jsx as _jsx}from\"react/jsx-runtime\";export var BloodScreeningChart=function BloodScreeningChart(_ref){var data=_ref.data;var theme=useAppSelector(function(state){return state.theme.theme;});var _useResponsive=useResponsive(),isTablet=_useResponsive.isTablet,isDesktop=_useResponsive.isDesktop,isMobile=_useResponsive.isMobile;var months=Dates.getMonths();var option={grid:{top:27,bottom:0,left:-20,right:-20},tooltip:{trigger:'axis',formatter:function formatter(label){return\"\".concat(label[0].axisValue);},axisPointer:{show:false,lineStyle:{width:0}}},xAxis:{type:'category',data:months,show:false,lineStyle:{width:0}},yAxis:{type:'value',show:false,lineStyle:{width:0}},series:[{data:data,type:'line',smooth:true,showSymbol:false,symbol:'circle',itemStyle:{color:themeObject[theme].chartColor5,borderColor:themeObject[theme].background,borderWidth:5,shadowColor:themeObject[theme].shadow,shadowOffsetX:0,shadowOffsetY:5,opacity:1},symbolSize:18,areaStyle:{color:themeObject[theme].chartSecondaryGradient},lineStyle:{width:2,color:themeObject[theme].error}}]};var chartHeight=useMemo(function(){return isDesktop&&100||isTablet&&200||isMobile&&100||100;},[isTablet,isDesktop,isMobile]);return/*#__PURE__*/_jsx(BaseChart,{option:option,height:chartHeight});};","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/bloodScreeningCard/BloodScreeningChart/BloodScreeningChart.tsx"],"names":["React","useMemo","BaseChart","Dates","useResponsive","useAppSelector","themeObject","BloodScreeningChart","data","theme","state","isTablet","isDesktop","isMobile","months","getMonths","option","grid","top","bottom","left","right","tooltip","trigger","formatter","label","axisValue","axisPointer","show","lineStyle","width","xAxis","type","yAxis","series","smooth","showSymbol","symbol","itemStyle","color","chartColor5","borderColor","background","borderWidth","shadowColor","shadow","shadowOffsetX","shadowOffsetY","opacity","symbolSize","areaStyle","chartSecondaryGradient","error","chartHeight"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { EChartsInstance } from 'echarts-for-react';\nimport { BaseChart } from '../../../common/charts/BaseChart';\nimport { Dates } from '@app/constants/Dates';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { themeObject } from '@app/styles/themes/themeVariables';\n\ninterface BloodScreeningChartsProps {\n  data: number[];\n}\n\nexport const BloodScreeningChart: React.FC<BloodScreeningChartsProps> = ({ data }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n  const { isTablet, isDesktop, isMobile } = useResponsive();\n  const months = Dates.getMonths();\n\n  const option = {\n    grid: {\n      top: 27,\n      bottom: 0,\n      left: -20,\n      right: -20,\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: function (label: EChartsInstance) {\n        return `${label[0].axisValue}`;\n      },\n      axisPointer: {\n        show: false,\n        lineStyle: {\n          width: 0,\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: months,\n      show: false,\n      lineStyle: {\n        width: 0,\n      },\n    },\n    yAxis: {\n      type: 'value',\n      show: false,\n      lineStyle: {\n        width: 0,\n      },\n    },\n    series: [\n      {\n        data,\n        type: 'line',\n        smooth: true,\n        showSymbol: false,\n        symbol: 'circle',\n        itemStyle: {\n          color: themeObject[theme].chartColor5,\n          borderColor: themeObject[theme].background,\n          borderWidth: 5,\n          shadowColor: themeObject[theme].shadow,\n          shadowOffsetX: 0,\n          shadowOffsetY: 5,\n          opacity: 1,\n        },\n        symbolSize: 18,\n        areaStyle: {\n          color: themeObject[theme].chartSecondaryGradient,\n        },\n        lineStyle: {\n          width: 2,\n          color: themeObject[theme].error,\n        },\n      },\n    ],\n  };\n\n  const chartHeight = useMemo(\n    () => (isDesktop && 100) || (isTablet && 200) || (isMobile && 100) || 100,\n    [isTablet, isDesktop, isMobile],\n  );\n\n  return <BaseChart option={option} height={chartHeight} />;\n};\n"]},"metadata":{},"sourceType":"module"}