{"ast":null,"code":"import _regeneratorRuntime from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/notifications/NotificationsTypes/NotificationsTypes.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { Checkbox } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CheckboxColumn } from '@app/components/profile/profileCard/profileFormNav/nav/notifications/CheckboxColumn/CheckboxColumn';\nimport * as S from './NotificationsTypes.styles';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var NotificationsTypes = function NotificationsTypes() {\n  _s();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState({\n      1: [],\n      2: [],\n      3: []\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    checkedElements = _useState4[0],\n    setCheckedElements = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isTriggered = _useState6[0],\n    setTriggered = _useState6[1];\n  var options = [{\n    id: 1,\n    header: t('common.email'),\n    headerRender: function headerRender(text, props) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, props), {}, {\n        children: text\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }, _this);\n    },\n    data: ['emailMessages', 'emailMentions', 'emailReminders', 'emailAllNews', 'emailImportantNews', 'emailActionRequired'],\n    dataRender: function dataRender(text) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, _this);\n    }\n  }, {\n    id: 2,\n    header: t('profile.nav.notifications.push'),\n    headerRender: function headerRender(text, props) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, props), {}, {\n        children: text\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 38\n      }, _this);\n    },\n    data: ['pushMessages', 'pushMentions', 'pushReminders', 'pushAllNews', 'pushImportantNews', 'pushActionRequired'],\n    dataRender: function dataRender(text) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, _this);\n    }\n  }, {\n    id: 3,\n    header: t('profile.nav.notifications.SMS'),\n    headerRender: function headerRender(text, props) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, props), {}, {\n        children: text\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 38\n      }, _this);\n    },\n    data: ['smsMessages', 'smsMentions', 'smsReminders', 'smsAllNews', 'smsImportantNews', 'smsActionRequired'],\n    dataRender: function dataRender(text) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }, _this);\n    }\n  }, {\n    id: 4,\n    header: t('profile.nav.notifications.activities'),\n    data: [t('profile.nav.notifications.directMessages'), t('profile.nav.notifications.mentions'), t('profile.nav.notifications.reminders'), t('profile.nav.notifications.allNews'), t('profile.nav.notifications.importantNews'), t('profile.nav.notifications.actionRequired')]\n  }];\n  var handleCheck = useCallback(function (mode) {\n    return function (list) {\n      setCheckedElements(_objectSpread(_objectSpread({}, checkedElements), {}, _defineProperty({}, mode, list)));\n    };\n  }, [checkedElements]);\n  var onCancel = useCallback(function () {\n    setTriggered(false);\n  }, [setTriggered]);\n  var onFinish = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            setTimeout(function () {\n              setLoading(false);\n              setTriggered(false);\n              notificationController.success({\n                message: t('common.success')\n              });\n              console.log(checkedElements);\n            }, 1000);\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [setTriggered, checkedElements, t]);\n  return /*#__PURE__*/_jsxDEV(BaseButtonsForm, {\n    name: \"notifications\",\n    onFinish: onFinish,\n    isFieldsChanged: isTriggered,\n    setFieldsChanged: setTriggered,\n    footer: /*#__PURE__*/_jsxDEV(BaseButtonsGroup, {\n      loading: isLoading,\n      onCancel: onCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }, _this),\n    children: /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      children: options.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(CheckboxColumn, {\n          column: item,\n          handleCheck: handleCheck(item.id),\n          setTriggered: setTriggered\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, _this);\n};\n_s(NotificationsTypes, \"4W5UDOGQ+IBi5OrMpF/8bnREbD8=\", false, function () {\n  return [useTranslation];\n});\n_c = NotificationsTypes;\nvar _c;\n$RefreshReg$(_c, \"NotificationsTypes\");","map":{"version":3,"names":["React","useCallback","useState","Checkbox","useTranslation","BaseButtonsForm","CheckboxColumn","S","BaseButtonsGroup","notificationController","NotificationsTypes","t","isLoading","setLoading","checkedElements","setCheckedElements","isTriggered","setTriggered","options","id","header","headerRender","text","props","data","dataRender","handleCheck","mode","list","onCancel","onFinish","setTimeout","success","message","console","log","map","item"],"sources":["/workspace/ant-design-react-template/src/components/profile/profileCard/profileFormNav/nav/notifications/NotificationsTypes/NotificationsTypes.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Checkbox } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CheckboxColumn } from '@app/components/profile/profileCard/profileFormNav/nav/notifications/CheckboxColumn/CheckboxColumn';\nimport { Option } from '@app/components/profile/profileCard/profileFormNav/nav/notifications/interfaces';\nimport * as S from './NotificationsTypes.styles';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { notificationController } from '@app/controllers/notificationController';\n\ninterface Notifications {\n  1: string[];\n  2: string[];\n  3: string[];\n}\n\nexport const NotificationsTypes: React.FC = () => {\n  const { t } = useTranslation();\n  const [isLoading, setLoading] = useState(false);\n  const [checkedElements, setCheckedElements] = useState<Notifications>({\n    1: [],\n    2: [],\n    3: [],\n  });\n\n  const [isTriggered, setTriggered] = useState(false);\n\n  const options: Option[] = [\n    {\n      id: 1,\n      header: t('common.email'),\n      headerRender: (text, props) => <Checkbox {...props}>{text}</Checkbox>,\n      data: [\n        'emailMessages',\n        'emailMentions',\n        'emailReminders',\n        'emailAllNews',\n        'emailImportantNews',\n        'emailActionRequired',\n      ],\n      dataRender: (text) => <Checkbox value={text} />,\n    },\n    {\n      id: 2,\n      header: t('profile.nav.notifications.push'),\n      headerRender: (text, props) => <Checkbox {...props}>{text}</Checkbox>,\n      data: ['pushMessages', 'pushMentions', 'pushReminders', 'pushAllNews', 'pushImportantNews', 'pushActionRequired'],\n      dataRender: (text) => <Checkbox value={text} />,\n    },\n    {\n      id: 3,\n      header: t('profile.nav.notifications.SMS'),\n      headerRender: (text, props) => <Checkbox {...props}>{text}</Checkbox>,\n      data: ['smsMessages', 'smsMentions', 'smsReminders', 'smsAllNews', 'smsImportantNews', 'smsActionRequired'],\n      dataRender: (text) => <Checkbox value={text} />,\n    },\n    {\n      id: 4,\n      header: t('profile.nav.notifications.activities'),\n      data: [\n        t('profile.nav.notifications.directMessages'),\n        t('profile.nav.notifications.mentions'),\n        t('profile.nav.notifications.reminders'),\n        t('profile.nav.notifications.allNews'),\n        t('profile.nav.notifications.importantNews'),\n        t('profile.nav.notifications.actionRequired'),\n      ],\n    },\n  ];\n\n  const handleCheck = useCallback(\n    (mode: number) => (list: CheckboxValueType[]) => {\n      setCheckedElements({ ...checkedElements, [mode]: list });\n    },\n    [checkedElements],\n  );\n\n  const onCancel = useCallback(() => {\n    setTriggered(false);\n  }, [setTriggered]);\n\n  const onFinish = useCallback(async () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setTriggered(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(checkedElements);\n    }, 1000);\n  }, [setTriggered, checkedElements, t]);\n\n  return (\n    <BaseButtonsForm\n      name=\"notifications\"\n      onFinish={onFinish}\n      isFieldsChanged={isTriggered}\n      setFieldsChanged={setTriggered}\n      footer={<BaseButtonsGroup loading={isLoading} onCancel={onCancel} />}\n    >\n      <S.Wrapper>\n        {options.map((item) => (\n          <CheckboxColumn key={item.id} column={item} handleCheck={handleCheck(item.id)} setTriggered={setTriggered} />\n        ))}\n      </S.Wrapper>\n    </BaseButtonsForm>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}