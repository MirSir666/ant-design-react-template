{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{errorLoggingMiddleware}from'@app/store/middlewares/errorLogging.middleware';import rootReducer from'@app/store/slices';export var store=configureStore({reducer:rootReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware().concat(errorLoggingMiddleware);}});","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/store/store.ts"],"names":["configureStore","errorLoggingMiddleware","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,OAASC,sBAAT,KAAuC,gDAAvC,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAGH,cAAc,CAAC,CAClCI,OAAO,CAAEF,WADyB,CAElCG,UAAU,CAAE,oBAACC,oBAAD,QAA0BA,CAAAA,oBAAoB,GAAGC,MAAvB,CAA8BN,sBAA9B,CAA1B,EAFsB,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { errorLoggingMiddleware } from '@app/store/middlewares/errorLogging.middleware';\nimport rootReducer from '@app/store/slices';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(errorLoggingMiddleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}