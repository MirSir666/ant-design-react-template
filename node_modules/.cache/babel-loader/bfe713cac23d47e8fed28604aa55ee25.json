{"ast":null,"code":"var _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/common/Feed/Feed.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Spin } from 'antd';\nimport * as S from './Feed.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Feed = function Feed(_ref) {\n  var next = _ref.next,\n      hasMore = _ref.hasMore,\n      _ref$target = _ref.target,\n      target = _ref$target === void 0 ? 'main-content' : _ref$target,\n      children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: children.length,\n    next: next,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/_jsxDEV(S.SpinnerWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, _this),\n    scrollableTarget: target,\n    children: /*#__PURE__*/_jsxDEV(S.NewsWrapper, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/common/Feed/Feed.tsx"],"names":["React","InfiniteScroll","Spin","S","Feed","next","hasMore","target","children","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;;AASA,OAAO,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAA0D;AAAA,MAAvDC,IAAuD,QAAvDA,IAAuD;AAAA,MAAjDC,OAAiD,QAAjDA,OAAiD;AAAA,yBAAxCC,MAAwC;AAAA,MAAxCA,MAAwC,4BAA/B,cAA+B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjG,sBACE,QAAC,cAAD;AACE,IAAA,UAAU,EAAEA,QAAQ,CAACC,MADvB;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,eACJ,QAAC,CAAD,CAAG,cAAH;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aALJ;AASE,IAAA,gBAAgB,EAAEC,MATpB;AAAA,2BAWE,QAAC,CAAD,CAAG,WAAH;AAAA,gBAAgBC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAhBM;KAAMJ,I","sourcesContent":["import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Spin } from 'antd';\nimport * as S from './Feed.styles';\n\nexport interface FeedProps {\n  next: () => void;\n  hasMore: boolean;\n  children: React.ReactNode[];\n  target?: string;\n}\n\nexport const Feed: React.FC<FeedProps> = ({ next, hasMore, target = 'main-content', children }) => {\n  return (\n    <InfiniteScroll\n      dataLength={children.length}\n      next={next}\n      hasMore={hasMore}\n      loader={\n        <S.SpinnerWrapper>\n          <Spin size=\"large\" />\n        </S.SpinnerWrapper>\n      }\n      scrollableTarget={target}\n    >\n      <S.NewsWrapper>{children}</S.NewsWrapper>\n    </InfiniteScroll>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}