{"ast":null,"code":"import _objectSpread from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"valueToCopy\"];import React,{useCallback}from'react';import{Button,Tooltip}from'antd';import{useTranslation}from'react-i18next';import{CopyOutlined}from'@ant-design/icons';import{SuffixInput}from'../SuffixInput/SuffixInput';import{notificationController}from'controllers/notificationController';import{jsx as _jsx}from\"react/jsx-runtime\";export var ClipboardInput=function ClipboardInput(_ref){var valueToCopy=_ref.valueToCopy,props=_objectWithoutProperties(_ref,_excluded);var _useTranslation=useTranslation(),t=_useTranslation.t;var handleCopy=useCallback(function(){return valueToCopy&&navigator.clipboard.writeText(valueToCopy).then(function(){notificationController.info({message:t('common.copied')});});},[valueToCopy,t]);return/*#__PURE__*/_jsx(SuffixInput,_objectSpread({suffix:/*#__PURE__*/_jsx(Tooltip,{title:t('common.copy'),children:/*#__PURE__*/_jsx(Button,{size:\"small\",disabled:!valueToCopy,type:\"text\",icon:/*#__PURE__*/_jsx(CopyOutlined,{}),onClick:handleCopy})})},props));};","map":{"version":3,"names":["React","useCallback","Button","Tooltip","useTranslation","CopyOutlined","SuffixInput","notificationController","ClipboardInput","valueToCopy","props","t","handleCopy","navigator","clipboard","writeText","then","info","message"],"sources":["/workspace/ant-design-react-template/src/components/common/inputs/ClipboardInput/ClipboardInput.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { InputProps } from '../Input/Input';\nimport { notificationController } from 'controllers/notificationController';\n\ninterface ClipboardInputProps extends InputProps {\n  valueToCopy?: string;\n}\n\nexport const ClipboardInput: React.FC<ClipboardInputProps> = ({ valueToCopy, ...props }) => {\n  const { t } = useTranslation();\n\n  const handleCopy = useCallback(\n    () =>\n      valueToCopy &&\n      navigator.clipboard.writeText(valueToCopy).then(() => {\n        notificationController.info({ message: t('common.copied') });\n      }),\n    [valueToCopy, t],\n  );\n\n  return (\n    <SuffixInput\n      suffix={\n        <Tooltip title={t('common.copy')}>\n          <Button size=\"small\" disabled={!valueToCopy} type=\"text\" icon={<CopyOutlined />} onClick={handleCopy} />\n        </Tooltip>\n      }\n      {...props}\n    />\n  );\n};\n"],"mappings":"qSAAA,MAAOA,MAAK,EAAIC,WAAW,KAAQ,OAAO,CAC1C,OAASC,MAAM,CAAEC,OAAO,KAAQ,MAAM,CACtC,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,YAAY,KAAQ,mBAAmB,CAChD,OAASC,WAAW,KAAQ,4BAA4B,CAExD,OAASC,sBAAsB,KAAQ,oCAAoC,CAAC,2CAM5E,MAAO,IAAMC,eAA6C,CAAG,QAAhDA,eAA6C,MAAkC,IAA5BC,YAAW,MAAXA,WAAW,CAAKC,KAAK,0CACnF,oBAAcN,cAAc,EAAE,CAAtBO,CAAC,iBAADA,CAAC,CAET,GAAMC,WAAU,CAAGX,WAAW,CAC5B,iBACEQ,YAAW,EACXI,SAAS,CAACC,SAAS,CAACC,SAAS,CAACN,WAAW,CAAC,CAACO,IAAI,CAAC,UAAM,CACpDT,sBAAsB,CAACU,IAAI,CAAC,CAAEC,OAAO,CAAEP,CAAC,CAAC,eAAe,CAAE,CAAC,CAAC,CAC9D,CAAC,CAAC,GACJ,CAACF,WAAW,CAAEE,CAAC,CAAC,CACjB,CAED,mBACE,KAAC,WAAW,gBACV,MAAM,cACJ,KAAC,OAAO,EAAC,KAAK,CAAEA,CAAC,CAAC,aAAa,CAAE,uBAC/B,KAAC,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAACF,WAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,cAAE,KAAC,YAAY,IAAI,CAAC,OAAO,CAAEG,UAAW,EAAG,EAE3G,EACGF,KAAK,EACT,CAEN,CAAC"},"metadata":{},"sourceType":"module"}