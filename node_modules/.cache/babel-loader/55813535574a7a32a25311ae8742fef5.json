{"ast":null,"code":"import _slicedToArray from \"/workspace/lightence-ant-design-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/bloodScreeningCard/BloodScreeningCard/BloodScreeningCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BloodScreeningChart } from '../BloodScreeningChart/BloodScreeningChart';\nimport { BloodScreeningTable } from '../BloodScreeningTable/BloodScreeningTable';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { results } from '@app/constants/bloodTestResults';\nimport * as S from './BloodScreeningCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var BloodScreeningCard = function BloodScreeningCard() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(results[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeItem = _useState2[0],\n      setActiveItem = _useState2[1];\n\n  var _useResponsive = useResponsive(),\n      mobileOnly = _useResponsive.mobileOnly;\n\n  return /*#__PURE__*/_jsxDEV(S.BloodScreeningCard, {\n    title: mobileOnly && /*#__PURE__*/_jsxDEV(S.TitleWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: t('medical-dashboard.bloodScreening.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, _this), !!(activeItem !== null && activeItem !== void 0 && activeItem.test) && /*#__PURE__*/_jsxDEV(S.ActiveItem, {\n        children: activeItem.test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 36\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, _this),\n    padding: 0,\n    children: [/*#__PURE__*/_jsxDEV(BloodScreeningChart, {\n      data: activeItem.yearData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BloodScreeningTable, {\n      activeItem: activeItem,\n      setActiveItem: setActiveItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BloodScreeningCard, \"x5j8qlGffn1mU+Dgcui0CcJZ2xU=\", false, function () {\n  return [useTranslation, useResponsive];\n});\n\n_c = BloodScreeningCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BloodScreeningCard\");","map":{"version":3,"sources":["/workspace/lightence-ant-design-react-template/src/components/medical-dashboard/bloodScreeningCard/BloodScreeningCard/BloodScreeningCard.tsx"],"names":["React","useState","useTranslation","BloodScreeningChart","BloodScreeningTable","useResponsive","results","S","BloodScreeningCard","t","activeItem","setActiveItem","mobileOnly","test","yearData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,mBAAT,QAAoC,4CAApC;AACA,SAASC,mBAAT,QAAoC,4CAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAA0BC,OAA1B,QAAyC,iCAAzC;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;;AAEA,OAAO,IAAMC,kBAA4B,GAAG,SAA/BA,kBAA+B,GAAM;AAAA;;AAChD,wBAAcN,cAAc,EAA5B;AAAA,MAAQO,CAAR,mBAAQA,CAAR;;AAEA,kBAAoCR,QAAQ,CAAkBK,OAAO,CAAC,CAAD,CAAzB,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,uBAAuBN,aAAa,EAApC;AAAA,MAAQO,UAAR,kBAAQA,UAAR;;AAEA,sBACE,QAAC,CAAD,CAAG,kBAAH;AACE,IAAA,KAAK,EACHA,UAAU,iBACR,QAAC,CAAD,CAAG,YAAH;AAAA,8BACE;AAAA,kBAAMH,CAAC,CAAC,wCAAD;AAAP;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,CAAC,EAACC,UAAD,aAACA,UAAD,eAACA,UAAU,CAAEG,IAAb,CAAD,iBAAsB,QAAC,CAAD,CAAG,UAAH;AAAA,kBAAeH,UAAU,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA,eAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,aAHN;AASE,IAAA,OAAO,EAAE,CATX;AAAA,4BAWE,QAAC,mBAAD;AAAqB,MAAA,IAAI,EAAEH,UAAU,CAACI;AAAtC;AAAA;AAAA;AAAA;AAAA,aAXF,eAYE,QAAC,mBAAD;AAAqB,MAAA,UAAU,EAAEJ,UAAjC;AAA6C,MAAA,aAAa,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgBD,CAvBM;;GAAMH,kB;UACGN,c,EAISG,a;;;KALZG,kB","sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BloodScreeningChart } from '../BloodScreeningChart/BloodScreeningChart';\nimport { BloodScreeningTable } from '../BloodScreeningTable/BloodScreeningTable';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { BloodTestResult, results } from '@app/constants/bloodTestResults';\nimport * as S from './BloodScreeningCard.styles';\n\nexport const BloodScreeningCard: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [activeItem, setActiveItem] = useState<BloodTestResult>(results[0]);\n\n  const { mobileOnly } = useResponsive();\n\n  return (\n    <S.BloodScreeningCard\n      title={\n        mobileOnly && (\n          <S.TitleWrapper>\n            <div>{t('medical-dashboard.bloodScreening.title')}</div>\n            {!!activeItem?.test && <S.ActiveItem>{activeItem.test}</S.ActiveItem>}\n          </S.TitleWrapper>\n        )\n      }\n      padding={0}\n    >\n      <BloodScreeningChart data={activeItem.yearData} />\n      <BloodScreeningTable activeItem={activeItem} setActiveItem={setActiveItem} />\n    </S.BloodScreeningCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}