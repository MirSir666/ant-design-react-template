{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{errorLoggingMiddleware}from'@app/store/middlewares/errorLogging.middleware';import rootReducer from'@app/store/slices';export var store=configureStore({reducer:rootReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware().concat(errorLoggingMiddleware);}});","map":{"version":3,"names":["configureStore","errorLoggingMiddleware","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat"],"sources":["/workspace/ant-design-react-template/src/store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { errorLoggingMiddleware } from '@app/store/middlewares/errorLogging.middleware';\nimport rootReducer from '@app/store/slices';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(errorLoggingMiddleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAASC,sBAAsB,KAAQ,gDAAgD,CACvF,MAAOC,YAAW,KAAM,mBAAmB,CAE3C,MAAO,IAAMC,MAAK,CAAGH,cAAc,CAAC,CAClCI,OAAO,CAAEF,WAAW,CACpBG,UAAU,CAAE,oBAACC,oBAAoB,QAAKA,qBAAoB,EAAE,CAACC,MAAM,CAACN,sBAAsB,CAAC,EAC7F,CAAC,CAAC"},"metadata":{},"sourceType":"module"}