{"ast":null,"code":"import _objectSpread from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _taggedTemplateLiteral from \"/workspace/ant-design-react-template/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/workspace/ant-design-react-template/src/controllers/notificationController.tsx\",\n  _templateObject,\n  _templateObject2,\n  _this = this;\nimport React from 'react';\nimport { notification } from 'antd';\nimport styled from 'styled-components';\nimport { CheckCircleFilled, ExclamationCircleFilled, InfoCircleFilled, StopFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar IconWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  font-size: \", \";\\n  line-height: 2rem;\\n\"])), function (props) {\n  return props.$isOnlyTitle ? '2rem' : '3rem';\n});\n_c = IconWrapper;\nvar EmptyDescription = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  margin-top: -0.75rem;\\n\"])));\n_c2 = EmptyDescription;\nvar openSuccessNotification = function openSuccessNotification(config) {\n  notification.success(_objectSpread(_objectSpread({}, config), {}, {\n    icon: /*#__PURE__*/_jsxDEV(IconWrapper, {\n      $isOnlyTitle: !config.description,\n      children: /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n        className: \"success-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this),\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title \".concat(!config.description && \"title-only\"),\n      children: config.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, _this),\n    description: config.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: config.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }, _this) : /*#__PURE__*/_jsxDEV(EmptyDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 97\n    }, _this),\n    className: config.description ? '' : 'notification-without-description'\n  }));\n};\nvar openInfoNotification = function openInfoNotification(config) {\n  notification.info(_objectSpread(_objectSpread({}, config), {}, {\n    icon: /*#__PURE__*/_jsxDEV(IconWrapper, {\n      $isOnlyTitle: !config.description,\n      children: /*#__PURE__*/_jsxDEV(InfoCircleFilled, {\n        className: \"info-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this),\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title \".concat(!config.description && \"title-only\"),\n      children: config.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, _this),\n    description: config.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: config.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 39\n    }, _this) : /*#__PURE__*/_jsxDEV(EmptyDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 97\n    }, _this),\n    className: config.description ? '' : 'notification-without-description'\n  }));\n};\nvar openWarningNotification = function openWarningNotification(config) {\n  notification.warning(_objectSpread(_objectSpread({}, config), {}, {\n    icon: /*#__PURE__*/_jsxDEV(IconWrapper, {\n      $isOnlyTitle: !config.description,\n      children: /*#__PURE__*/_jsxDEV(ExclamationCircleFilled, {\n        className: \"warning-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this),\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title \".concat(!config.description && \"title-only\"),\n      children: config.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, _this),\n    description: config.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: config.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 39\n    }, _this) : /*#__PURE__*/_jsxDEV(EmptyDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 97\n    }, _this),\n    className: config.description ? '' : 'notification-without-description'\n  }));\n};\nvar openErrorNotification = function openErrorNotification(config) {\n  notification.error(_objectSpread(_objectSpread({}, config), {}, {\n    icon: /*#__PURE__*/_jsxDEV(IconWrapper, {\n      $isOnlyTitle: !config.description,\n      children: /*#__PURE__*/_jsxDEV(StopFilled, {\n        className: \"error-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this),\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title \".concat(!config.description && \"title-only\"),\n      children: config.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, _this),\n    description: config.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: config.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 39\n    }, _this) : /*#__PURE__*/_jsxDEV(EmptyDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 97\n    }, _this),\n    className: config.description ? '' : 'notification-without-description'\n  }));\n};\nexport var notificationController = {\n  success: openSuccessNotification,\n  info: openInfoNotification,\n  warning: openWarningNotification,\n  error: openErrorNotification\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"IconWrapper\");\n$RefreshReg$(_c2, \"EmptyDescription\");","map":{"version":3,"names":["React","notification","styled","CheckCircleFilled","ExclamationCircleFilled","InfoCircleFilled","StopFilled","IconWrapper","div","props","$isOnlyTitle","EmptyDescription","openSuccessNotification","config","success","icon","description","message","className","openInfoNotification","info","openWarningNotification","warning","openErrorNotification","error","notificationController"],"sources":["/workspace/ant-design-react-template/src/controllers/notificationController.tsx"],"sourcesContent":["import React from 'react';\nimport { notification } from 'antd';\nimport styled from 'styled-components';\nimport { CheckCircleFilled, ExclamationCircleFilled, InfoCircleFilled, StopFilled } from '@ant-design/icons';\nimport { ArgsProps } from 'antd/lib/notification';\n\ninterface IconWrapperProps {\n  $isOnlyTitle: boolean;\n}\n\nconst IconWrapper = styled.div<IconWrapperProps>`\n  font-size: ${(props) => (props.$isOnlyTitle ? '2rem' : '3rem')};\n  line-height: 2rem;\n`;\n\nconst EmptyDescription = styled.div`\n  margin-top: -0.75rem;\n`;\n\ntype NotificationProps = ArgsProps;\n\nconst openSuccessNotification = (config: NotificationProps): void => {\n  notification.success({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <CheckCircleFilled className=\"success-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nconst openInfoNotification = (config: NotificationProps): void => {\n  notification.info({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <InfoCircleFilled className=\"info-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nconst openWarningNotification = (config: NotificationProps): void => {\n  notification.warning({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <ExclamationCircleFilled className=\"warning-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nconst openErrorNotification = (config: NotificationProps): void => {\n  notification.error({\n    ...config,\n    icon: (\n      <IconWrapper $isOnlyTitle={!config.description}>\n        <StopFilled className=\"error-icon\" />\n      </IconWrapper>\n    ),\n    message: <div className={`title ${!config.description && `title-only`}`}>{config.message}</div>,\n    description: config.description ? <div className=\"description\">{config.description}</div> : <EmptyDescription />,\n    className: config.description ? '' : 'notification-without-description',\n  });\n};\n\nexport const notificationController = {\n  success: openSuccessNotification,\n  info: openInfoNotification,\n  warning: openWarningNotification,\n  error: openErrorNotification,\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,MAAM;AACnC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,iBAAiB,EAAEC,uBAAuB,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,mBAAmB;AAAC;AAO7G,IAAMC,WAAW,GAAGL,MAAM,CAACM,GAAG,kHACf,UAACC,KAAK;EAAA,OAAMA,KAAK,CAACC,YAAY,GAAG,MAAM,GAAG,MAAM;AAAA,CAAC,CAE/D;AAAC,KAHIH,WAAW;AAKjB,IAAMI,gBAAgB,GAAGT,MAAM,CAACM,GAAG,kGAElC;AAAC,MAFIG,gBAAgB;AAMtB,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIC,MAAyB,EAAW;EACnEZ,YAAY,CAACa,OAAO,iCACfD,MAAM;IACTE,IAAI,eACF,QAAC,WAAW;MAAC,YAAY,EAAE,CAACF,MAAM,CAACG,WAAY;MAAA,uBAC7C,QAAC,iBAAiB;QAAC,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,SAEjD;IACDC,OAAO,eAAE;MAAK,SAAS,kBAAW,CAACJ,MAAM,CAACG,WAAW,gBAAgB,CAAG;MAAA,UAAEH,MAAM,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,SAAO;IAC/FD,WAAW,EAAEH,MAAM,CAACG,WAAW,gBAAG;MAAK,SAAS,EAAC,aAAa;MAAA,UAAEH,MAAM,CAACG;IAAW;MAAA;MAAA;MAAA;IAAA,SAAO,gBAAG,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,SAAG;IAChHE,SAAS,EAAEL,MAAM,CAACG,WAAW,GAAG,EAAE,GAAG;EAAkC,GACvE;AACJ,CAAC;AAED,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIN,MAAyB,EAAW;EAChEZ,YAAY,CAACmB,IAAI,iCACZP,MAAM;IACTE,IAAI,eACF,QAAC,WAAW;MAAC,YAAY,EAAE,CAACF,MAAM,CAACG,WAAY;MAAA,uBAC7C,QAAC,gBAAgB;QAAC,SAAS,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,SAE7C;IACDC,OAAO,eAAE;MAAK,SAAS,kBAAW,CAACJ,MAAM,CAACG,WAAW,gBAAgB,CAAG;MAAA,UAAEH,MAAM,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,SAAO;IAC/FD,WAAW,EAAEH,MAAM,CAACG,WAAW,gBAAG;MAAK,SAAS,EAAC,aAAa;MAAA,UAAEH,MAAM,CAACG;IAAW;MAAA;MAAA;MAAA;IAAA,SAAO,gBAAG,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,SAAG;IAChHE,SAAS,EAAEL,MAAM,CAACG,WAAW,GAAG,EAAE,GAAG;EAAkC,GACvE;AACJ,CAAC;AAED,IAAMK,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIR,MAAyB,EAAW;EACnEZ,YAAY,CAACqB,OAAO,iCACfT,MAAM;IACTE,IAAI,eACF,QAAC,WAAW;MAAC,YAAY,EAAE,CAACF,MAAM,CAACG,WAAY;MAAA,uBAC7C,QAAC,uBAAuB;QAAC,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,SAEvD;IACDC,OAAO,eAAE;MAAK,SAAS,kBAAW,CAACJ,MAAM,CAACG,WAAW,gBAAgB,CAAG;MAAA,UAAEH,MAAM,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,SAAO;IAC/FD,WAAW,EAAEH,MAAM,CAACG,WAAW,gBAAG;MAAK,SAAS,EAAC,aAAa;MAAA,UAAEH,MAAM,CAACG;IAAW;MAAA;MAAA;MAAA;IAAA,SAAO,gBAAG,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,SAAG;IAChHE,SAAS,EAAEL,MAAM,CAACG,WAAW,GAAG,EAAE,GAAG;EAAkC,GACvE;AACJ,CAAC;AAED,IAAMO,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIV,MAAyB,EAAW;EACjEZ,YAAY,CAACuB,KAAK,iCACbX,MAAM;IACTE,IAAI,eACF,QAAC,WAAW;MAAC,YAAY,EAAE,CAACF,MAAM,CAACG,WAAY;MAAA,uBAC7C,QAAC,UAAU;QAAC,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,SAExC;IACDC,OAAO,eAAE;MAAK,SAAS,kBAAW,CAACJ,MAAM,CAACG,WAAW,gBAAgB,CAAG;MAAA,UAAEH,MAAM,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,SAAO;IAC/FD,WAAW,EAAEH,MAAM,CAACG,WAAW,gBAAG;MAAK,SAAS,EAAC,aAAa;MAAA,UAAEH,MAAM,CAACG;IAAW;MAAA;MAAA;MAAA;IAAA,SAAO,gBAAG,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,SAAG;IAChHE,SAAS,EAAEL,MAAM,CAACG,WAAW,GAAG,EAAE,GAAG;EAAkC,GACvE;AACJ,CAAC;AAED,OAAO,IAAMS,sBAAsB,GAAG;EACpCX,OAAO,EAAEF,uBAAuB;EAChCQ,IAAI,EAAED,oBAAoB;EAC1BG,OAAO,EAAED,uBAAuB;EAChCG,KAAK,EAAED;AACT,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}