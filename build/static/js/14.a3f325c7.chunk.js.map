{"version":3,"sources":["pages/uiComponentsPages/UIComponentsPage.styles.ts","components/common/Collapse/Collapse.styles.ts","components/common/Collapse/Collapse.tsx","pages/uiComponentsPages/modals/PopoversPage.tsx","../node_modules/antd/es/popconfirm/PurePanel.js","../node_modules/antd/es/popconfirm/index.js","components/common/Popconfirm/Popconfirm.styles.ts","components/common/Popconfirm/Popconfirm.tsx","pages/uiComponentsPages/modals/PopconfirmsPage.tsx"],"names":["Card","styled","CommonCard","InputsWrapper","div","CollapseWrapper","Collapse","AntdCollapse","Panel","props","buttonWidth","PopoverButton","TopButtons","media","xs","md","LeftButtons","RightButtons","BottomButtons","PopoversPage","t","useTranslation","title","content","type","placement","trigger","Overlay","prefixCls","okButtonProps","cancelButtonProps","cancelText","okText","okType","icon","_props$showCancel","showCancel","close","onConfirm","onCancel","getPrefixCls","React","ConfigContext","LocaleReceiver","componentName","defaultLocale","Popconfirm","popconfirmLocale","className","concat","getRenderPropValue","Button","_extends","onClick","size","ActionButton","buttonProps","convertLegacyProps","actionFn","quitOnNullishReturnValue","emitEvent","_this","__rest","s","e","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","ref","_useMergedState","useMergedState","value","visible","defaultValue","defaultVisible","_useMergedState2","_slicedToArray","setVisible","settingVisible","_a","onVisibleChange","customizePrefixCls","children","overlayClassName","restProps","prefixClsConfirm","overlayClassNames","classNames","Popover","disabled","_overlay","cloneElement","onKeyDown","_b","keyCode","KeyCode","ESC","_onKeyDown","defaultProps","ExclamationCircleFilled","AntPopconfirm","AsyncButton","FONT_SIZE","PopconfirmsPage","useState","confirmLoading","setConfirmLoading","text","confirm","message","info","PageTitle","setTimeout","loading"],"mappings":"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","file":"static/js/14.a3f325c7.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Card as CommonCard } from 'components/common/Card/Card';\nimport { Collapse } from 'components/common/Collapse/Collapse';\n\nexport const Card = styled(CommonCard)`\n  width: 100%;\n  margin-bottom: 1.25rem;\n  .ant-card-head-title {\n    font-size: 1rem;\n  }\n  .ant-card-body {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1.25rem;\n    align-items: center;\n  }\n  .ant-card-body:before {\n    display: none;\n  }\n  .ant-card-body:after {\n    display: none;\n  }\n  &.ant-card-bordered {\n    border: 1px solid var(--border-color);\n  }\n`;\n\nexport const InputsWrapper = styled.div`\n  width: 30rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n`;\n\nexport const CollapseWrapper = styled(Collapse)`\n  width: 40rem;\n`;\n","import styled from 'styled-components';\nimport { Collapse as AntdCollapse } from 'antd';\n\nexport const Collapse = styled(AntdCollapse)``;\n","import { CollapseProps, Collapse as AntdCollapse } from 'antd';\nimport * as S from './Collapse.styles';\n\nexport const { Panel } = AntdCollapse;\n\nexport const Collapse: React.FC<CollapseProps> = (props) => {\n  return <S.Collapse {...props} />;\n};\n","import { Col } from 'antd';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Popover } from '@app/components/common/Popover/Popover';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { media } from '@app/styles/themes/constants';\n\nconst buttonWidth = 70;\n\nexport const PopoverButton = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const TopButtons = styled(PopoverButton)`\n  white-space: nowrap;\n\n  @media only screen and ${media.xs} {\n    margin-left: ${buttonWidth - 24}px;\n  }\n\n  @media only screen and ${media.md} {\n    margin-left: ${buttonWidth + 18}px;\n  }\n`;\nexport const LeftButtons = styled(PopoverButton)`\n  flex-direction: column;\n  width: ${buttonWidth}px;\n  float: left;\n`;\n\nexport const RightButtons = styled(PopoverButton)`\n  flex-direction: column;\n  width: ${buttonWidth}px;\n\n  @media only screen and ${media.xs} {\n    margin-left: ${buttonWidth * 3 - 14}px;\n  }\n\n  @media only screen and ${media.md} {\n    margin-left: ${buttonWidth * 4}px;\n  }\n`;\n\nexport const BottomButtons = styled(PopoverButton)`\n  margin-left: ${buttonWidth}px;\n  clear: both;\n  whitespace: nowrap;\n  @media only screen and ${media.xs} {\n    margin-left: ${buttonWidth - 44}px;\n  }\n\n  @media only screen and ${media.md} {\n    margin-left: ${buttonWidth}px;\n  }\n`;\n\nconst PopoversPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  const title = <span>{t('popovers.title')}</span>;\n  const content = (\n    <div>\n      <p>{t('popovers.content')}</p>\n      <p>{t('popovers.content')}</p>\n    </div>\n  );\n\n  return (\n    <>\n      <PageTitle>{t('common.popover')}</PageTitle>\n      <Col>\n        <S.Card title={t('popovers.basic')}>\n          <Popover content={content} title={title}>\n            <Button type=\"primary\">{t('popovers.hover')}</Button>\n          </Popover>\n        </S.Card>\n        <S.Card title={t('popovers.positions')}>\n          <div>\n            <TopButtons>\n              <Popover placement=\"topLeft\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.tl')}</Button>\n              </Popover>\n              <Popover placement=\"top\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.top')}</Button>\n              </Popover>\n              <Popover placement=\"topRight\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.tr')}</Button>\n              </Popover>\n            </TopButtons>\n            <LeftButtons>\n              <Popover placement=\"leftTop\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.lt')}</Button>\n              </Popover>\n              <Popover placement=\"left\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.left')}</Button>\n              </Popover>\n              <Popover placement=\"leftBottom\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.lb')}</Button>\n              </Popover>\n            </LeftButtons>\n            <RightButtons>\n              <Popover placement=\"rightTop\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.rt')}</Button>\n              </Popover>\n              <Popover placement=\"right\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.right')}</Button>\n              </Popover>\n              <Popover placement=\"rightBottom\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.rb')}</Button>\n              </Popover>\n            </RightButtons>\n            <BottomButtons>\n              <Popover placement=\"bottomLeft\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.bl')}</Button>\n              </Popover>\n              <Popover placement=\"bottom\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.bottom')}</Button>\n              </Popover>\n              <Popover placement=\"bottomRight\" title={title} content={content} trigger=\"click\">\n                <Button>{t('popovers.br')}</Button>\n              </Popover>\n            </BottomButtons>\n          </div>\n        </S.Card>\n        <S.Card title={t('popovers.triggers')}>\n          <Popover content={content} title={title} trigger=\"hover\">\n            <Button>{t('popovers.hover')}</Button>\n          </Popover>\n          <Popover content={content} title={title} trigger=\"focus\">\n            <Button>{t('popovers.focus')}</Button>\n          </Popover>\n          <Popover content={content} title={title} trigger=\"click\">\n            <Button>{t('popovers.click')}</Button>\n          </Popover>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default PopoversPage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/button';\nimport ActionButton from '../_util/ActionButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport { ConfigContext } from '../config-provider';\nexport function Overlay(props) {\n  var prefixCls = props.prefixCls,\n      okButtonProps = props.okButtonProps,\n      cancelButtonProps = props.cancelButtonProps,\n      title = props.title,\n      cancelText = props.cancelText,\n      okText = props.okText,\n      okType = props.okType,\n      icon = props.icon,\n      _props$showCancel = props.showCancel,\n      showCancel = _props$showCancel === void 0 ? true : _props$showCancel,\n      close = props.close,\n      onConfirm = props.onConfirm,\n      onCancel = props.onCancel;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Popconfirm\",\n    defaultLocale: defaultLocale.Popconfirm\n  }, function (popconfirmLocale) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, icon, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message-title\")\n    }, getRenderPropValue(title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-buttons\")\n    }, showCancel && /*#__PURE__*/React.createElement(Button, _extends({\n      onClick: onCancel,\n      size: \"small\"\n    }, cancelButtonProps), cancelText || popconfirmLocale.cancelText), /*#__PURE__*/React.createElement(ActionButton, {\n      buttonProps: _extends(_extends({\n        size: 'small'\n      }, convertLegacyProps(okType)), okButtonProps),\n      actionFn: onConfirm,\n      close: close,\n      prefixCls: getPrefixCls('btn'),\n      quitOnNullishReturnValue: true,\n      emitEvent: true\n    }, okText || popconfirmLocale.okText)));\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport { Overlay } from './PurePanel';\nvar Popconfirm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var _useMergedState = useMergedState(false, {\n    value: props.visible,\n    defaultValue: props.defaultVisible\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      visible = _useMergedState2[0],\n      setVisible = _useMergedState2[1]; // const isDestroyed = useDestroyed();\n\n\n  var settingVisible = function settingVisible(value, e) {\n    var _a;\n\n    setVisible(value, true);\n    (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, value, e);\n  };\n\n  var close = function close(e) {\n    settingVisible(false, e);\n  };\n\n  var onConfirm = function onConfirm(e) {\n    var _a;\n\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var onCancel = function onCancel(e) {\n    var _a;\n\n    settingVisible(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var _onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === KeyCode.ESC && visible) {\n      settingVisible(false, e);\n    }\n  };\n\n  var onVisibleChange = function onVisibleChange(value) {\n    var disabled = props.disabled;\n\n    if (disabled) {\n      return;\n    }\n\n    settingVisible(value);\n  };\n\n  var customizePrefixCls = props.prefixCls,\n      placement = props.placement,\n      children = props.children,\n      overlayClassName = props.overlayClassName,\n      restProps = __rest(props, [\"prefixCls\", \"placement\", \"children\", \"overlayClassName\"]);\n\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var prefixClsConfirm = getPrefixCls('popconfirm', customizePrefixCls);\n  var overlayClassNames = classNames(prefixClsConfirm, overlayClassName);\n  return /*#__PURE__*/React.createElement(Popover, _extends({}, restProps, {\n    prefixCls: prefixCls,\n    placement: placement,\n    onVisibleChange: onVisibleChange,\n    visible: visible,\n    _overlay: /*#__PURE__*/React.createElement(Overlay, _extends({}, props, {\n      prefixCls: prefixCls,\n      close: close,\n      onConfirm: onConfirm,\n      onCancel: onCancel\n    })),\n    overlayClassName: overlayClassNames,\n    ref: ref\n  }), cloneElement(children, {\n    onKeyDown: function onKeyDown(e) {\n      var _a, _b;\n\n      if ( /*#__PURE__*/React.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n\n      _onKeyDown(e);\n    }\n  }));\n});\nPopconfirm.defaultProps = {\n  placement: 'top',\n  trigger: 'click',\n  okType: 'primary',\n  icon: /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n  disabled: false\n};\nexport default Popconfirm;","import styled from 'styled-components';\nimport { Popconfirm as AntPopconfirm } from 'antd';\n\nexport const Popconfirm = styled(AntPopconfirm)``;\n","import React from 'react';\nimport { PopconfirmProps } from 'antd';\nimport * as S from './Popconfirm.styles';\n\nexport const Popconfirm: React.FC<PopconfirmProps> = ({ children, ...props }) => {\n  return <S.Popconfirm {...props}>{children}</S.Popconfirm>;\n};\n","import { useState } from 'react';\nimport { Col, message } from 'antd';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@app/components/common/buttons/Button/Button';\nimport { Popconfirm } from '@app/components/common/Popconfirm/Popconfirm';\nimport { TopButtons, LeftButtons, RightButtons, BottomButtons } from '@app/pages/uiComponentsPages/modals/PopoversPage';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport * as S from '@app/pages/uiComponentsPages//UIComponentsPage.styles';\nimport { FONT_SIZE, media } from '@app/styles/themes/constants';\n\nconst AsyncButton = styled(Button)`\n  @media only screen and ${media.xs} {\n    font-size: ${FONT_SIZE.xs};\n  }\n  @media only screen and ${media.md} {\n    font-size: ${FONT_SIZE.md};\n  }\n`;\n\nconst PopconfirmsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [visible, setVisible] = useState<boolean>(false);\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n\n  const text = t('popconfirm.content');\n\n  const confirm = () => {\n    message.info(t('popconfirm.yesClick'));\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <>\n      <PageTitle>{t('common.popconfirm')}</PageTitle>\n      <Col>\n        <S.Card title={t('popconfirm.basic')}>\n          <Popconfirm title={text}>\n            <Button type=\"primary\">{t('common.delete')}</Button>\n          </Popconfirm>\n        </S.Card>\n        <S.Card title={t('popconfirm.positions')}>\n          <div>\n            <TopButtons>\n              <Popconfirm\n                placement=\"topLeft\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.tl')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"top\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.top')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"topRight\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.tr')}</Button>\n              </Popconfirm>\n            </TopButtons>\n            <LeftButtons>\n              <Popconfirm\n                placement=\"leftTop\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.lt')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"left\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.left')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"leftBottom\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.lb')}</Button>\n              </Popconfirm>\n            </LeftButtons>\n            <RightButtons>\n              <Popconfirm\n                placement=\"rightTop\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.rt')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"right\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.right')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"rightBottom\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.rb')}</Button>\n              </Popconfirm>\n            </RightButtons>\n            <BottomButtons>\n              <Popconfirm\n                placement=\"bottomLeft\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.bl')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"bottom\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.bottom')}</Button>\n              </Popconfirm>\n              <Popconfirm\n                placement=\"bottomRight\"\n                title={text}\n                onConfirm={confirm}\n                okText={t('popconfirm.yes')}\n                cancelText={t('popconfirm.no')}\n              >\n                <Button>{t('popovers.br')}</Button>\n              </Popconfirm>\n            </BottomButtons>\n          </div>\n        </S.Card>\n        <S.Card title={t('popconfirm.async')}>\n          <Popconfirm\n            title={t('popovers.title')}\n            visible={visible}\n            onConfirm={handleOk}\n            okButtonProps={{ loading: confirmLoading }}\n            onCancel={() => setVisible(false)}\n          >\n            <AsyncButton type=\"primary\" onClick={() => setVisible(true)}>\n              {t('popconfirm.openAsync')}\n            </AsyncButton>\n          </Popconfirm>\n        </S.Card>\n      </Col>\n    </>\n  );\n};\n\nexport default PopconfirmsPage;\n"],"sourceRoot":""}